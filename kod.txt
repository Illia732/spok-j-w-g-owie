/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      // 1. COLOR PALETTE - Apple/Revolut
      colors: {
        // Apple-inspired color palette
        background: '#FFFFFF',
        surface: '#F5F5F7',
        
        // Primary - Apple Blue
        primary: {
          50: '#F0F7FF',
          100: '#E0F2FE',
          200: '#BAE6FD',
          300: '#7DD3FC',
          400: '#38BDF8',
          500: '#0EA5E9',
          600: '#0284C7',
          700: '#0369A1',
          800: '#075985',
          900: '#0C4A6E',
          DEFAULT: '#007AFF',
        },
        
        // Revolut-inspired accents
        accent: {
          green: '#30D158',
          orange: '#FF9F0A',
          red: '#FF453A',
          purple: '#BF5AF2',
        },
        
        // Text colors
        text: {
          primary: '#1D1D1F',
          secondary: '#86868B', 
          tertiary: '#C2C2C7',
        }
      },

      // 2. TYPOGRAPHY SYSTEM
      fontFamily: {
        sans: [
          '-apple-system',
          'BlinkMacSystemFont',
          'Inter', 
          'SF Pro Text',
          'system-ui',
          'sans-serif',
        ],
      },
      fontSize: {
        'xs': ['0.75rem', { lineHeight: '1rem' }],
        'sm': ['0.875rem', { lineHeight: '1.25rem' }],
        'base': ['1rem', { lineHeight: '1.5rem' }],
        'lg': ['1.125rem', { lineHeight: '1.75rem' }],
        'xl': ['1.25rem', { lineHeight: '1.75rem' }],
        '2xl': ['1.5rem', { lineHeight: '2rem' }],
        '3xl': ['1.875rem', { lineHeight: '2.25rem' }],
        '4xl': ['2.25rem', { lineHeight: '2.5rem' }],
      },

      // 3. SPACING SYSTEM
      spacing: {
        '1': '0.25rem',
        '2': '0.5rem',
        '3': '0.75rem',
        '4': '1rem',
        '5': '1.25rem',
        '6': '1.5rem',
        '7': '1.75rem',
        '8': '2rem',
        '9': '2.25rem',
        '10': '2.5rem',
      },

      // 4. BORDER RADIUS
      borderRadius: {
        'sm': '0.5rem',
        'md': '0.75rem',
        'lg': '1rem',
        'xl': '1.5rem',
      },

      // 5. GLASS MORPHISM
      backdropBlur: {
        'xs': '2px',
      },
      boxShadow: {
        'glass': '0 8px 32px 0 rgba(31, 38, 135, 0.37)',
      }
    },
  },
  plugins: [],
}/** @type {import('next').NextConfig} */
const nextConfig = {
  transpilePackages: ['undici'],
  webpack: (config, { isServer }) => {
    // Transpiluj undici dla prywatnych p√≥l (#)
    config.module.rules.push({
      test: /\.js$/,
      include: /node_modules[\\/]undici/,
      use: {
        loader: 'babel-loader',
        options: {
          presets: ['@babel/preset-env'],
        },
      },
    });
    
    return config;
  },
}

module.exports = nextConfig/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}{
  "name": "spokoj-w-glowie",
  "version": "0.1.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "spokoj-w-glowie",
      "version": "0.1.0",
      "dependencies": {
        "@google/generative-ai": "^0.24.1",
        "@next/font": "^14.2.15",
        "@radix-ui/react-dialog": "^1.0.5",
        "@radix-ui/react-select": "^2.0.0",
        "@radix-ui/react-slider": "^1.0.4",
        "@radix-ui/react-slot": "^1.0.2",
        "@vercel/kv": "^3.0.0",
        "class-variance-authority": "^0.4.0",
        "clsx": "^2.1.1",
        "firebase": "^10.14.1",
        "firebase-admin": "^13.5.0",
        "framer-motion": "^10.16.4",
        "lodash": "^4.17.21",
        "lucide-react": "^0.294.0",
        "mapbox-gl": "^3.15.0",
        "next": "14.0.0",
        "odash": "^0.0.1-security",
        "openai": "^6.0.1",
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "react-map-gl": "^7.1.9",
        "react-markdown": "^10.1.0",
        "react-quill": "^2.0.0",
        "recharts": "^3.2.1",
        "remark-gfm": "^4.0.1",
        "tailwind-merge": "^1.14.0"
      },
      "devDependencies": {
        "@babel/core": "^7.28.4",
        "@babel/preset-env": "^7.28.3",
        "@types/leaflet": "^1.9.20",
        "@types/node": "^20.0.0",
        "@types/react": "^18.3.25",
        "@types/react-dom": "^18.0.0",
        "autoprefixer": "^10.4.21",
        "babel-loader": "^10.0.0",
        "eslint": "^8.0.0",
        "eslint-config-next": "14.0.0",
        "tailwindcss": "^3.3.0",
        "typescript": "^5.0.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
      "integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.27.1",
        "js-tokens": "^4.0.0",
        "picocolors": "^1.1.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.28.4.tgz",
      "integrity": "sha512-YsmSKC29MJwf0gF8Rjjrg5LQCmyh+j/nD8/eP7f+BeoQTKYqs9RoWbjGOdy0+1Ekr68RJZMUOPVQaQisnIo4Rw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.28.4.tgz",
      "integrity": "sha512-2BCOP7TN8M+gVDj7/ht3hsaO/B/n5oDbiAyyvnRlNOs+u1o+JWNYTQrmpuNp1/Wq2gcFrI01JAW+paEKDMx/CA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.27.1",
        "@babel/generator": "^7.28.3",
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-module-transforms": "^7.28.3",
        "@babel/helpers": "^7.28.4",
        "@babel/parser": "^7.28.4",
        "@babel/template": "^7.27.2",
        "@babel/traverse": "^7.28.4",
        "@babel/types": "^7.28.4",
        "@jridgewell/remapping": "^2.3.5",
        "convert-source-map": "^2.0.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/core/node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@babel/core/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.28.3.tgz",
      "integrity": "sha512-3lSpxGgvnmZznmBkCRnVREPUFJv2wrv9iAoFDvADJc0ypmdOxdUtcLeBgBJ6zE0PMeTKnxeQzyk0xTBq4Ep7zw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.28.3",
        "@babel/types": "^7.28.2",
        "@jridgewell/gen-mapping": "^0.3.12",
        "@jridgewell/trace-mapping": "^0.3.28",
        "jsesc": "^3.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-annotate-as-pure": {
      "version": "7.27.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.27.3.tgz",
      "integrity": "sha512-fXSwMQqitTGeHLBC08Eq5yXz2m37E4pJX1qAU1+2cNedz/ifv/bVXft90VeSav5nFO61EcNgwr0aJxbyPaWBPg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.27.3"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.27.2",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz",
      "integrity": "sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/compat-data": "^7.27.2",
        "@babel/helper-validator-option": "^7.27.1",
        "browserslist": "^4.24.0",
        "lru-cache": "^5.1.1",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets/node_modules/lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "yallist": "^3.0.2"
      }
    },
    "node_modules/@babel/helper-compilation-targets/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-create-class-features-plugin": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.28.3.tgz",
      "integrity": "sha512-V9f6ZFIYSLNEbuGA/92uOvYsGCJNsuA8ESZ4ldc09bWk/j8H8TKiPw8Mk1eG6olpnO0ALHJmYfZvF4MEE4gajg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.3",
        "@babel/helper-member-expression-to-functions": "^7.27.1",
        "@babel/helper-optimise-call-expression": "^7.27.1",
        "@babel/helper-replace-supers": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1",
        "@babel/traverse": "^7.28.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-create-class-features-plugin/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-create-regexp-features-plugin": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.27.1.tgz",
      "integrity": "sha512-uVDC72XVf8UbrH5qQTc18Agb8emwjTiZrQE11Nv3CuBEZmVvTwwE9CBUEvHku06gQCAyYf8Nv6ja1IN+6LMbxQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.1",
        "regexpu-core": "^6.2.0",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-create-regexp-features-plugin/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-define-polyfill-provider": {
      "version": "0.6.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.6.5.tgz",
      "integrity": "sha512-uJnGFcPsWQK8fvjgGP5LZUZZsYGIoPeRjSF5PGwrelYgq7Q15/Ft9NGFp1zglwgIv//W0uG4BevRuSJRyylZPg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-plugin-utils": "^7.27.1",
        "debug": "^4.4.1",
        "lodash.debounce": "^4.0.8",
        "resolve": "^1.22.10"
      },
      "peerDependencies": {
        "@babel/core": "^7.4.0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/@babel/helper-globals": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-globals/-/helper-globals-7.28.0.tgz",
      "integrity": "sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-member-expression-to-functions": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.27.1.tgz",
      "integrity": "sha512-E5chM8eWjTp/aNoVpcbfM7mLxu9XGLWYise2eBKGQomAk/Mb4XoxyqXTZbuTohbsl8EKqdlMhnDI2CCLfcs9wA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/traverse": "^7.27.1",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz",
      "integrity": "sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/traverse": "^7.27.1",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.28.3.tgz",
      "integrity": "sha512-gytXUbs8k2sXS9PnQptz5o0QnpLL51SwASIORY6XaBKF88nsOT0Zw9szLqlSGQDP/4TljBAD5y98p2U1fqkdsw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-imports": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1",
        "@babel/traverse": "^7.28.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-optimise-call-expression": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.27.1.tgz",
      "integrity": "sha512-URMGH08NzYFhubNSGJrpUEphGKQwMQYBySzat5cAByY1/YgIRkULnIy3tAMeszlL/so2HbeilYloUmSpd7GdVw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz",
      "integrity": "sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-remap-async-to-generator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.27.1.tgz",
      "integrity": "sha512-7fiA521aVw8lSPeI4ZOD3vRFkoqkJcS+z4hFo82bFSH/2tNd6eJ5qCVMS5OzDmZh/kaHQeBaeyxK6wljcPtveA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.1",
        "@babel/helper-wrap-function": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-replace-supers": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.27.1.tgz",
      "integrity": "sha512-7EHz6qDZc8RYS5ElPoShMheWvEgERonFCs7IAonWLLUTXW59DP14bCZt89/GKyreYn8g3S83m21FelHKbeDCKA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-member-expression-to-functions": "^7.27.1",
        "@babel/helper-optimise-call-expression": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-skip-transparent-expression-wrappers": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.27.1.tgz",
      "integrity": "sha512-Tub4ZKEXqbPjXgWLl2+3JpQAYBJ8+ikpQ2Ocj/q/r0LwE3UhENh7EUabyHjz2kCEsrRY83ew2DQdHluuiDQFzg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/traverse": "^7.27.1",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
      "integrity": "sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz",
      "integrity": "sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-wrap-function": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.28.3.tgz",
      "integrity": "sha512-zdf983tNfLZFletc0RRXYrHrucBEg95NIFMkn6K9dbeMYnsgHaSBGcQqdsCSStG2PYwRre0Qc2NNSCXbG+xc6g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/template": "^7.27.2",
        "@babel/traverse": "^7.28.3",
        "@babel/types": "^7.28.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.28.4.tgz",
      "integrity": "sha512-HFN59MmQXGHVyYadKLVumYsA9dBFun/ldYxipEjzA4196jpLZd8UjEEBLkbEkvfYreDqJhZxYAWFPtrfhNpj4w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/template": "^7.27.2",
        "@babel/types": "^7.28.4"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.28.4.tgz",
      "integrity": "sha512-yZbBqeM6TkpP9du/I2pUZnJsRMGGvOuIrhjzC1AwHwW+6he4mni6Bp/m8ijn0iOuZuPI2BfkCoSRunpyjnrQKg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.28.4"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-firefox-class-in-computed-class-key": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-firefox-class-in-computed-class-key/-/plugin-bugfix-firefox-class-in-computed-class-key-7.27.1.tgz",
      "integrity": "sha512-QPG3C9cCVRQLxAVwmefEmwdTanECuUBMQZ/ym5kiw3XKCGA7qkuQLcjWWHcrD/GKbn/WmJwaezfuuAOcyKlRPA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-safari-class-field-initializer-scope": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-safari-class-field-initializer-scope/-/plugin-bugfix-safari-class-field-initializer-scope-7.27.1.tgz",
      "integrity": "sha512-qNeq3bCKnGgLkEXUuFry6dPlGfCdQNZbn7yUAPCInwAJHMU7THJfrBSozkcWq5sNM6RcF3S8XyQL2A52KNR9IA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression/-/plugin-bugfix-safari-id-destructuring-collision-in-function-expression-7.27.1.tgz",
      "integrity": "sha512-g4L7OYun04N1WyqMNjldFwlfPCLVkgB54A/YCXICZYBsvJJE3kByKv9c9+R/nAfmIfjl2rKYLNyMHboYbZaWaA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining/-/plugin-bugfix-v8-spread-parameters-in-optional-chaining-7.27.1.tgz",
      "integrity": "sha512-oO02gcONcD5O1iTLi/6frMJBIwWEHceWGSGqrpCmEL8nogiS6J9PBlE48CaK20/Jx1LuRml9aDftLgdjXT8+Cw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1",
        "@babel/plugin-transform-optional-chaining": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.13.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-v8-static-class-fields-redefine-readonly": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-v8-static-class-fields-redefine-readonly/-/plugin-bugfix-v8-static-class-fields-redefine-readonly-7.28.3.tgz",
      "integrity": "sha512-b6YTX108evsvE4YgWyQ921ZAFFQm3Bn+CA3+ZXlNVnPhx+UfsVURoPjfGAPCjBgrqo30yX/C2nZGX96DxvR9Iw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/traverse": "^7.28.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-proposal-private-property-in-object": {
      "version": "7.21.0-placeholder-for-preset-env.2",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.21.0-placeholder-for-preset-env.2.tgz",
      "integrity": "sha512-SOSkfJDddaM7mak6cPEpswyTRnuRltl429hMraQEglW+OkovnCzsiszTmsrlY//qLFjCpQDFRvjdm2wA5pPm9w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-import-assertions": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-assertions/-/plugin-syntax-import-assertions-7.27.1.tgz",
      "integrity": "sha512-UT/Jrhw57xg4ILHLFnzFpPDlMbcdEicaAtjPQpbj9wa8T4r5KVWCimHcL/460g8Ht0DMxDyjsLgiWSkVjnwPFg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-import-attributes": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-attributes/-/plugin-syntax-import-attributes-7.27.1.tgz",
      "integrity": "sha512-oFT0FrKHgF53f4vOsZGi2Hh3I35PfSmVs4IBFLFj4dnafP+hIWDLg3VyKmUHfLoLHlyxY4C7DGtmHuJgn+IGww==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-unicode-sets-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-unicode-sets-regex/-/plugin-syntax-unicode-sets-regex-7.18.6.tgz",
      "integrity": "sha512-727YkEAPwSIQTv5im8QHz3upqp92JTWhidIC81Tdx4VJYIte/VndKf1qKrfnnhPLiPghStWfvC/iFaMCQu7Nqg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-arrow-functions": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.27.1.tgz",
      "integrity": "sha512-8Z4TGic6xW70FKThA5HYEKKyBpOOsucTOD1DjU3fZxDg+K3zBJcXMFnt/4yQiZnf5+MiOMSXQ9PaEK/Ilh1DeA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-async-generator-functions": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-generator-functions/-/plugin-transform-async-generator-functions-7.28.0.tgz",
      "integrity": "sha512-BEOdvX4+M765icNPZeidyADIvQ1m1gmunXufXxvRESy/jNNyfovIqUyE7MVgGBjWktCoJlzvFA1To2O4ymIO3Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-remap-async-to-generator": "^7.27.1",
        "@babel/traverse": "^7.28.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-async-to-generator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.27.1.tgz",
      "integrity": "sha512-NREkZsZVJS4xmTr8qzE5y8AfIPqsdQfRuUiLRTEzb7Qii8iFWCyDKaUV2c0rCuh4ljDZ98ALHP/PetiBV2nddA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-imports": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-remap-async-to-generator": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-block-scoped-functions": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.27.1.tgz",
      "integrity": "sha512-cnqkuOtZLapWYZUYM5rVIdv1nXYuFVIltZ6ZJ7nIj585QsjKM5dhL2Fu/lICXZ1OyIAFc7Qy+bvDAtTXqGrlhg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-block-scoping": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.28.4.tgz",
      "integrity": "sha512-1yxmvN0MJHOhPVmAsmoW5liWwoILobu/d/ShymZmj867bAdxGbehIrew1DuLpw2Ukv+qDSSPQdYW1dLNE7t11A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-class-properties": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-class-properties/-/plugin-transform-class-properties-7.27.1.tgz",
      "integrity": "sha512-D0VcalChDMtuRvJIu3U/fwWjf8ZMykz5iZsg77Nuj821vCKI3zCyRLwRdWbsuJ/uRwZhZ002QtCqIkwC/ZkvbA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-class-static-block": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-class-static-block/-/plugin-transform-class-static-block-7.28.3.tgz",
      "integrity": "sha512-LtPXlBbRoc4Njl/oh1CeD/3jC+atytbnf/UqLoqTDcEYGUPj022+rvfkbDYieUrSj3CaV4yHDByPE+T2HwfsJg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.28.3",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.12.0"
      }
    },
    "node_modules/@babel/plugin-transform-classes": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.28.4.tgz",
      "integrity": "sha512-cFOlhIYPBv/iBoc+KS3M6et2XPtbT2HiCRfBXWtfpc9OAyostldxIf9YAYB6ypURBBbx+Qv6nyrLzASfJe+hBA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.3",
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-globals": "^7.28.0",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-replace-supers": "^7.27.1",
        "@babel/traverse": "^7.28.4"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-computed-properties": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.27.1.tgz",
      "integrity": "sha512-lj9PGWvMTVksbWiDT2tW68zGS/cyo4AkZ/QTp0sQT0mjPopCmrSkzxeXkznjqBxzDI6TclZhOJbBmbBLjuOZUw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/template": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-destructuring": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.28.0.tgz",
      "integrity": "sha512-v1nrSMBiKcodhsyJ4Gf+Z0U/yawmJDBOTpEB3mcQY52r9RIyPneGyAS/yM6seP/8I+mWI3elOMtT5dB8GJVs+A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/traverse": "^7.28.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-dotall-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.27.1.tgz",
      "integrity": "sha512-gEbkDVGRvjj7+T1ivxrfgygpT7GUd4vmODtYpbs0gZATdkX8/iSnOtZSxiZnsgm1YjTgjI6VKBGSJJevkrclzw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-duplicate-keys": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.27.1.tgz",
      "integrity": "sha512-MTyJk98sHvSs+cvZ4nOauwTTG1JeonDjSGvGGUNHreGQns+Mpt6WX/dVzWBHgg+dYZhkC4X+zTDfkTU+Vy9y7Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-duplicate-named-capturing-groups-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-named-capturing-groups-regex/-/plugin-transform-duplicate-named-capturing-groups-regex-7.27.1.tgz",
      "integrity": "sha512-hkGcueTEzuhB30B3eJCbCYeCaaEQOmQR0AdvzpD4LoN0GXMWzzGSuRrxR2xTnCrvNbVwK9N6/jQ92GSLfiZWoQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-dynamic-import": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dynamic-import/-/plugin-transform-dynamic-import-7.27.1.tgz",
      "integrity": "sha512-MHzkWQcEmjzzVW9j2q8LGjwGWpG2mjwaaB0BNQwst3FIjqsg8Ct/mIZlvSPJvfi9y2AC8mi/ktxbFVL9pZ1I4A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-explicit-resource-management": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-explicit-resource-management/-/plugin-transform-explicit-resource-management-7.28.0.tgz",
      "integrity": "sha512-K8nhUcn3f6iB+P3gwCv/no7OdzOZQcKchW6N389V6PD8NUWKZHzndOd9sPDVbMoBsbmjMqlB4L9fm+fEFNVlwQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/plugin-transform-destructuring": "^7.28.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-exponentiation-operator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.27.1.tgz",
      "integrity": "sha512-uspvXnhHvGKf2r4VVtBpeFnuDWsJLQ6MF6lGJLC89jBR1uoVeqM416AZtTuhTezOfgHicpJQmoD5YUakO/YmXQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-export-namespace-from": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-export-namespace-from/-/plugin-transform-export-namespace-from-7.27.1.tgz",
      "integrity": "sha512-tQvHWSZ3/jH2xuq/vZDy0jNn+ZdXJeM8gHvX4lnJmsc3+50yPlWdZXIc5ay+umX+2/tJIqHqiEqcJvxlmIvRvQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-for-of": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.27.1.tgz",
      "integrity": "sha512-BfbWFFEJFQzLCQ5N8VocnCtA8J1CLkNTe2Ms2wocj75dd6VpiqS5Z5quTYcUoo4Yq+DN0rtikODccuv7RU81sw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-function-name": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.27.1.tgz",
      "integrity": "sha512-1bQeydJF9Nr1eBCMMbC+hdwmRlsv5XYOMu03YSWFwNs0HsAmtSxxF1fyuYPqemVldVyFmlCU7w8UE14LupUSZQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-compilation-targets": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-json-strings": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-json-strings/-/plugin-transform-json-strings-7.27.1.tgz",
      "integrity": "sha512-6WVLVJiTjqcQauBhn1LkICsR2H+zm62I3h9faTDKt1qP4jn2o72tSvqMwtGFKGTpojce0gJs+76eZ2uCHRZh0Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-literals": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.27.1.tgz",
      "integrity": "sha512-0HCFSepIpLTkLcsi86GG3mTUzxV5jpmbv97hTETW3yzrAij8aqlD36toB1D0daVFJM8NK6GvKO0gslVQmm+zZA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-logical-assignment-operators": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-logical-assignment-operators/-/plugin-transform-logical-assignment-operators-7.27.1.tgz",
      "integrity": "sha512-SJvDs5dXxiae4FbSL1aBJlG4wvl594N6YEVVn9e3JGulwioy6z3oPjx/sQBO3Y4NwUu5HNix6KJ3wBZoewcdbw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-member-expression-literals": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.27.1.tgz",
      "integrity": "sha512-hqoBX4dcZ1I33jCSWcXrP+1Ku7kdqXf1oeah7ooKOIiAdKQ+uqftgCFNOSzA5AMS2XIHEYeGFg4cKRCdpxzVOQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-amd": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.27.1.tgz",
      "integrity": "sha512-iCsytMg/N9/oFq6n+gFTvUYDZQOMK5kEdeYxmxt91fcJGycfxVP9CnrxoliM0oumFERba2i8ZtwRUCMhvP1LnA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-transforms": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-commonjs": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.27.1.tgz",
      "integrity": "sha512-OJguuwlTYlN0gBZFRPqwOGNWssZjfIUdS7HMYtN8c1KmwpwHFBwTeFZrg9XZa+DFTitWOW5iTAG7tyCUPsCCyw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-transforms": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-systemjs": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.27.1.tgz",
      "integrity": "sha512-w5N1XzsRbc0PQStASMksmUeqECuzKuTJer7kFagK8AXgpCMkeDMO5S+aaFb7A51ZYDF7XI34qsTX+fkHiIm5yA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-transforms": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-umd": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.27.1.tgz",
      "integrity": "sha512-iQBE/xC5BV1OxJbp6WG7jq9IWiD+xxlZhLrdwpPkTX3ydmXdvoCpyfJN7acaIBZaOqTfr76pgzqBJflNbeRK+w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-transforms": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-named-capturing-groups-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.27.1.tgz",
      "integrity": "sha512-SstR5JYy8ddZvD6MhV0tM/j16Qds4mIpJTOd1Yu9J9pJjH93bxHECF7pgtc28XvkzTD6Pxcm/0Z73Hvk7kb3Ng==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-new-target": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.27.1.tgz",
      "integrity": "sha512-f6PiYeqXQ05lYq3TIfIDu/MtliKUbNwkGApPUvyo6+tc7uaR4cPjPe7DFPr15Uyycg2lZU6btZ575CuQoYh7MQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-nullish-coalescing-operator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-nullish-coalescing-operator/-/plugin-transform-nullish-coalescing-operator-7.27.1.tgz",
      "integrity": "sha512-aGZh6xMo6q9vq1JGcw58lZ1Z0+i0xB2x0XaauNIUXd6O1xXc3RwoWEBlsTQrY4KQ9Jf0s5rgD6SiNkaUdJegTA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-numeric-separator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-numeric-separator/-/plugin-transform-numeric-separator-7.27.1.tgz",
      "integrity": "sha512-fdPKAcujuvEChxDBJ5c+0BTaS6revLV7CJL08e4m3de8qJfNIuCc2nc7XJYOjBoTMJeqSmwXJ0ypE14RCjLwaw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-object-rest-spread": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-rest-spread/-/plugin-transform-object-rest-spread-7.28.4.tgz",
      "integrity": "sha512-373KA2HQzKhQCYiRVIRr+3MjpCObqzDlyrM6u4I201wL8Mp2wHf7uB8GhDwis03k2ti8Zr65Zyyqs1xOxUF/Ew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/plugin-transform-destructuring": "^7.28.0",
        "@babel/plugin-transform-parameters": "^7.27.7",
        "@babel/traverse": "^7.28.4"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-object-super": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.27.1.tgz",
      "integrity": "sha512-SFy8S9plRPbIcxlJ8A6mT/CxFdJx/c04JEctz4jf8YZaVS2px34j7NXRrlGlHkN/M2gnpL37ZpGRGVFLd3l8Ng==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-replace-supers": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-optional-catch-binding": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-optional-catch-binding/-/plugin-transform-optional-catch-binding-7.27.1.tgz",
      "integrity": "sha512-txEAEKzYrHEX4xSZN4kJ+OfKXFVSWKB2ZxM9dpcE3wT7smwkNmXo5ORRlVzMVdJbD+Q8ILTgSD7959uj+3Dm3Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-optional-chaining": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-optional-chaining/-/plugin-transform-optional-chaining-7.27.1.tgz",
      "integrity": "sha512-BQmKPPIuc8EkZgNKsv0X4bPmOoayeu4F1YCwx2/CfmDSXDbp7GnzlUH+/ul5VGfRg1AoFPsrIThlEBj2xb4CAg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-parameters": {
      "version": "7.27.7",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.27.7.tgz",
      "integrity": "sha512-qBkYTYCb76RRxUM6CcZA5KRu8K4SM8ajzVeUgVdMVO9NN9uI/GaVmBg/WKJJGnNokV9SY8FxNOVWGXzqzUidBg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-private-methods": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-private-methods/-/plugin-transform-private-methods-7.27.1.tgz",
      "integrity": "sha512-10FVt+X55AjRAYI9BrdISN9/AQWHqldOeZDUoLyif1Kn05a56xVBXb8ZouL8pZ9jem8QpXaOt8TS7RHUIS+GPA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-private-property-in-object": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-private-property-in-object/-/plugin-transform-private-property-in-object-7.27.1.tgz",
      "integrity": "sha512-5J+IhqTi1XPa0DXF83jYOaARrX+41gOewWbkPyjMNRDqgOCqdffGh8L3f/Ek5utaEBZExjSAzcyjmV9SSAWObQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.1",
        "@babel/helper-create-class-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-property-literals": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.27.1.tgz",
      "integrity": "sha512-oThy3BCuCha8kDZ8ZkgOg2exvPYUlprMukKQXI1r1pJ47NCvxfkEy8vK+r/hT9nF0Aa4H1WUPZZjHTFtAhGfmQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-regenerator": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.28.4.tgz",
      "integrity": "sha512-+ZEdQlBoRg9m2NnzvEeLgtvBMO4tkFBw5SQIUgLICgTrumLoU7lr+Oghi6km2PFj+dbUt2u1oby2w3BDO9YQnA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-regexp-modifiers": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regexp-modifiers/-/plugin-transform-regexp-modifiers-7.27.1.tgz",
      "integrity": "sha512-TtEciroaiODtXvLZv4rmfMhkCv8jx3wgKpL68PuiPh2M4fvz5jhsA7697N1gMvkvr/JTF13DrFYyEbY9U7cVPA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-reserved-words": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.27.1.tgz",
      "integrity": "sha512-V2ABPHIJX4kC7HegLkYoDpfg9PVmuWy/i6vUM5eGK22bx4YVFD3M5F0QQnWQoDs6AGsUWTVOopBiMFQgHaSkVw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-shorthand-properties": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.27.1.tgz",
      "integrity": "sha512-N/wH1vcn4oYawbJ13Y/FxcQrWk63jhfNa7jef0ih7PHSIHX2LB7GWE1rkPrOnka9kwMxb6hMl19p7lidA+EHmQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-spread": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.27.1.tgz",
      "integrity": "sha512-kpb3HUqaILBJcRFVhFUs6Trdd4mkrzcGXss+6/mxUd273PfbWqSDHRzMT2234gIg2QYfAjvXLSquP1xECSg09Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-sticky-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.27.1.tgz",
      "integrity": "sha512-lhInBO5bi/Kowe2/aLdBAawijx+q1pQzicSgnkB6dUPc1+RC8QmJHKf2OjvU+NZWitguJHEaEmbV6VWEouT58g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-template-literals": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.27.1.tgz",
      "integrity": "sha512-fBJKiV7F2DxZUkg5EtHKXQdbsbURW3DZKQUWphDum0uRP6eHGGa/He9mc0mypL680pb+e/lDIthRohlv8NCHkg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-typeof-symbol": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.27.1.tgz",
      "integrity": "sha512-RiSILC+nRJM7FY5srIyc4/fGIwUhyDuuBSdWn4y6yT6gm652DpCHZjIipgn6B7MQ1ITOUnAKWixEUjQRIBIcLw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-escapes": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.27.1.tgz",
      "integrity": "sha512-Ysg4v6AmF26k9vpfFuTZg8HRfVWzsh1kVfowA23y9j/Gu6dOuahdUVhkLqpObp3JIv27MLSii6noRnuKN8H0Mg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-property-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-property-regex/-/plugin-transform-unicode-property-regex-7.27.1.tgz",
      "integrity": "sha512-uW20S39PnaTImxp39O5qFlHLS9LJEmANjMG7SxIhap8rCHqu0Ik+tLEPX5DKmHn6CsWQ7j3lix2tFOa5YtL12Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.27.1.tgz",
      "integrity": "sha512-xvINq24TRojDuyt6JGtHmkVkrfVV3FPT16uytxImLeBZqW3/H52yN+kM1MGuyPkIQxrzKwPHs5U/MP3qKyzkGw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-sets-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-sets-regex/-/plugin-transform-unicode-sets-regex-7.27.1.tgz",
      "integrity": "sha512-EtkOujbc4cgvb0mlpQefi4NTPBzhSIevblFevACNLUspmrALgmEBdL/XfnyyITfd8fKBZrZys92zOWcik7j9Tw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/preset-env": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.28.3.tgz",
      "integrity": "sha512-ROiDcM+GbYVPYBOeCR6uBXKkQpBExLl8k9HO1ygXEyds39j+vCCsjmj7S8GOniZQlEs81QlkdJZe76IpLSiqpg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/compat-data": "^7.28.0",
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-validator-option": "^7.27.1",
        "@babel/plugin-bugfix-firefox-class-in-computed-class-key": "^7.27.1",
        "@babel/plugin-bugfix-safari-class-field-initializer-scope": "^7.27.1",
        "@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression": "^7.27.1",
        "@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": "^7.27.1",
        "@babel/plugin-bugfix-v8-static-class-fields-redefine-readonly": "^7.28.3",
        "@babel/plugin-proposal-private-property-in-object": "7.21.0-placeholder-for-preset-env.2",
        "@babel/plugin-syntax-import-assertions": "^7.27.1",
        "@babel/plugin-syntax-import-attributes": "^7.27.1",
        "@babel/plugin-syntax-unicode-sets-regex": "^7.18.6",
        "@babel/plugin-transform-arrow-functions": "^7.27.1",
        "@babel/plugin-transform-async-generator-functions": "^7.28.0",
        "@babel/plugin-transform-async-to-generator": "^7.27.1",
        "@babel/plugin-transform-block-scoped-functions": "^7.27.1",
        "@babel/plugin-transform-block-scoping": "^7.28.0",
        "@babel/plugin-transform-class-properties": "^7.27.1",
        "@babel/plugin-transform-class-static-block": "^7.28.3",
        "@babel/plugin-transform-classes": "^7.28.3",
        "@babel/plugin-transform-computed-properties": "^7.27.1",
        "@babel/plugin-transform-destructuring": "^7.28.0",
        "@babel/plugin-transform-dotall-regex": "^7.27.1",
        "@babel/plugin-transform-duplicate-keys": "^7.27.1",
        "@babel/plugin-transform-duplicate-named-capturing-groups-regex": "^7.27.1",
        "@babel/plugin-transform-dynamic-import": "^7.27.1",
        "@babel/plugin-transform-explicit-resource-management": "^7.28.0",
        "@babel/plugin-transform-exponentiation-operator": "^7.27.1",
        "@babel/plugin-transform-export-namespace-from": "^7.27.1",
        "@babel/plugin-transform-for-of": "^7.27.1",
        "@babel/plugin-transform-function-name": "^7.27.1",
        "@babel/plugin-transform-json-strings": "^7.27.1",
        "@babel/plugin-transform-literals": "^7.27.1",
        "@babel/plugin-transform-logical-assignment-operators": "^7.27.1",
        "@babel/plugin-transform-member-expression-literals": "^7.27.1",
        "@babel/plugin-transform-modules-amd": "^7.27.1",
        "@babel/plugin-transform-modules-commonjs": "^7.27.1",
        "@babel/plugin-transform-modules-systemjs": "^7.27.1",
        "@babel/plugin-transform-modules-umd": "^7.27.1",
        "@babel/plugin-transform-named-capturing-groups-regex": "^7.27.1",
        "@babel/plugin-transform-new-target": "^7.27.1",
        "@babel/plugin-transform-nullish-coalescing-operator": "^7.27.1",
        "@babel/plugin-transform-numeric-separator": "^7.27.1",
        "@babel/plugin-transform-object-rest-spread": "^7.28.0",
        "@babel/plugin-transform-object-super": "^7.27.1",
        "@babel/plugin-transform-optional-catch-binding": "^7.27.1",
        "@babel/plugin-transform-optional-chaining": "^7.27.1",
        "@babel/plugin-transform-parameters": "^7.27.7",
        "@babel/plugin-transform-private-methods": "^7.27.1",
        "@babel/plugin-transform-private-property-in-object": "^7.27.1",
        "@babel/plugin-transform-property-literals": "^7.27.1",
        "@babel/plugin-transform-regenerator": "^7.28.3",
        "@babel/plugin-transform-regexp-modifiers": "^7.27.1",
        "@babel/plugin-transform-reserved-words": "^7.27.1",
        "@babel/plugin-transform-shorthand-properties": "^7.27.1",
        "@babel/plugin-transform-spread": "^7.27.1",
        "@babel/plugin-transform-sticky-regex": "^7.27.1",
        "@babel/plugin-transform-template-literals": "^7.27.1",
        "@babel/plugin-transform-typeof-symbol": "^7.27.1",
        "@babel/plugin-transform-unicode-escapes": "^7.27.1",
        "@babel/plugin-transform-unicode-property-regex": "^7.27.1",
        "@babel/plugin-transform-unicode-regex": "^7.27.1",
        "@babel/plugin-transform-unicode-sets-regex": "^7.27.1",
        "@babel/preset-modules": "0.1.6-no-external-plugins",
        "babel-plugin-polyfill-corejs2": "^0.4.14",
        "babel-plugin-polyfill-corejs3": "^0.13.0",
        "babel-plugin-polyfill-regenerator": "^0.6.5",
        "core-js-compat": "^3.43.0",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/preset-env/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/preset-modules": {
      "version": "0.1.6-no-external-plugins",
      "resolved": "https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.6-no-external-plugins.tgz",
      "integrity": "sha512-HrcgcIESLm9aIR842yhJ5RWan/gebQUJ6E/E5+rf0y9o6oj7w0Br+sWuL6kEQ/o/AdfvR1Je9jG18/gnpwjEyA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.0.0",
        "@babel/types": "^7.4.4",
        "esutils": "^2.0.2"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.27.2",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz",
      "integrity": "sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.27.1",
        "@babel/parser": "^7.27.2",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.28.4.tgz",
      "integrity": "sha512-YEzuboP2qvQavAcjgQNVgsvHIDv6ZpwXvcvjmyySP2DIMuByS/6ioU5G9pYrWHM6T2YDfc7xga9iNzYOs12CFQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.27.1",
        "@babel/generator": "^7.28.3",
        "@babel/helper-globals": "^7.28.0",
        "@babel/parser": "^7.28.4",
        "@babel/template": "^7.27.2",
        "@babel/types": "^7.28.4",
        "debug": "^4.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.28.4.tgz",
      "integrity": "sha512-bkFqkLhh3pMBUQQkpVgWDWq/lqzc2678eUyDlTBhRqhCHFguYYGM0Efga7tYk4TogG/3x0EEl66/OQ+WGbWB/Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-string-parser": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@emnapi/core": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@emnapi/core/-/core-1.5.0.tgz",
      "integrity": "sha512-sbP8GzB1WDzacS8fgNPpHlp6C9VZe+SJP3F90W9rLemaQj2PzIuTEl1qDOYQf58YIpyjViI24y9aPWCjEzY2cg==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@emnapi/wasi-threads": "1.1.0",
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@emnapi/runtime": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@emnapi/runtime/-/runtime-1.5.0.tgz",
      "integrity": "sha512-97/BJ3iXHww3djw6hYIfErCZFee7qCtrneuLa20UXFCOTCfBM2cvQHjWJ2EG0s0MtdNwInarqCTz35i4wWXHsQ==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@emnapi/wasi-threads": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@emnapi/wasi-threads/-/wasi-threads-1.1.0.tgz",
      "integrity": "sha512-WI0DdZ8xFSbgMjR1sFsKABJ/C5OnRrjT06JXbZKexJGrDuPTzZdDYfFlsgcCXCyf+suG5QU2e/y1Wo2V/OapLQ==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@emotion/is-prop-valid": {
      "version": "0.8.8",
      "resolved": "https://registry.npmjs.org/@emotion/is-prop-valid/-/is-prop-valid-0.8.8.tgz",
      "integrity": "sha512-u5WtneEAr5IDG2Wv65yhunPSMLIpuKsbuOktRojfrEiEvRyC85LgPMZI63cr7NUqT8ZIGdSVg8ZKGxIug4lXcA==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@emotion/memoize": "0.7.4"
      }
    },
    "node_modules/@emotion/memoize": {
      "version": "0.7.4",
      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.7.4.tgz",
      "integrity": "sha512-Ja/Vfqe3HpuzRsG1oBtWTHk2PGZ7GR+2Vz5iYGelAw8dx32K0y7PjVuxK6z1nMpZOqAFsRUPCkK1YjJ56qJlgw==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/@eslint-community/eslint-utils": {
      "version": "4.9.0",
      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.9.0.tgz",
      "integrity": "sha512-ayVFHdtZ+hsq1t2Dy24wCmGXGe4q9Gu3smhLYALJrr473ZH27MsnSL+LKUlimp4BWJqMDMLmPpx/Q9R3OAlL4g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      },
      "peerDependencies": {
        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
      }
    },
    "node_modules/@eslint-community/regexpp": {
      "version": "4.12.1",
      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
      "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
      }
    },
    "node_modules/@eslint/eslintrc": {
      "version": "2.1.4",
      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz",
      "integrity": "sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ajv": "^6.12.4",
        "debug": "^4.3.2",
        "espree": "^9.6.0",
        "globals": "^13.19.0",
        "ignore": "^5.2.0",
        "import-fresh": "^3.2.1",
        "js-yaml": "^4.1.0",
        "minimatch": "^3.1.2",
        "strip-json-comments": "^3.1.1"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint/js": {
      "version": "8.57.1",
      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-8.57.1.tgz",
      "integrity": "sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      }
    },
    "node_modules/@fastify/busboy": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/@fastify/busboy/-/busboy-3.2.0.tgz",
      "integrity": "sha512-m9FVDXU3GT2ITSe0UaMA5rU3QkfC/UXtCU8y0gSN/GugTqtVldOBWIB5V6V3sbmenVZUIpU6f+mPEO2+m5iTaA==",
      "license": "MIT"
    },
    "node_modules/@firebase/analytics": {
      "version": "0.10.8",
      "resolved": "https://registry.npmjs.org/@firebase/analytics/-/analytics-0.10.8.tgz",
      "integrity": "sha512-CVnHcS4iRJPqtIDc411+UmFldk0ShSK3OB+D0bKD8Ck5Vro6dbK5+APZpkuWpbfdL359DIQUnAaMLE+zs/PVyA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/installations": "0.6.9",
        "@firebase/logger": "0.4.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/analytics-compat": {
      "version": "0.2.14",
      "resolved": "https://registry.npmjs.org/@firebase/analytics-compat/-/analytics-compat-0.2.14.tgz",
      "integrity": "sha512-unRVY6SvRqfNFIAA/kwl4vK+lvQAL2HVcgu9zTrUtTyYDmtIt/lOuHJynBMYEgLnKm39YKBDhtqdapP2e++ASw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/analytics": "0.10.8",
        "@firebase/analytics-types": "0.8.2",
        "@firebase/component": "0.6.9",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/analytics-types": {
      "version": "0.8.2",
      "resolved": "https://registry.npmjs.org/@firebase/analytics-types/-/analytics-types-0.8.2.tgz",
      "integrity": "sha512-EnzNNLh+9/sJsimsA/FGqzakmrAUKLeJvjRHlg8df1f97NLUlFidk9600y0ZgWOp3CAxn6Hjtk+08tixlUOWyw==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/app": {
      "version": "0.10.13",
      "resolved": "https://registry.npmjs.org/@firebase/app/-/app-0.10.13.tgz",
      "integrity": "sha512-OZiDAEK/lDB6xy/XzYAyJJkaDqmQ+BCtOEPLqFvxWKUz5JbBmej7IiiRHdtiIOD/twW7O5AxVsfaaGA/V1bNsA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/logger": "0.4.2",
        "@firebase/util": "1.10.0",
        "idb": "7.1.1",
        "tslib": "^2.1.0"
      }
    },
    "node_modules/@firebase/app-check": {
      "version": "0.8.8",
      "resolved": "https://registry.npmjs.org/@firebase/app-check/-/app-check-0.8.8.tgz",
      "integrity": "sha512-O49RGF1xj7k6BuhxGpHmqOW5hqBIAEbt2q6POW0lIywx7emYtzPDeQI+ryQpC4zbKX646SoVZ711TN1DBLNSOQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/logger": "0.4.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/app-check-compat": {
      "version": "0.3.15",
      "resolved": "https://registry.npmjs.org/@firebase/app-check-compat/-/app-check-compat-0.3.15.tgz",
      "integrity": "sha512-zFIvIFFNqDXpOT2huorz9cwf56VT3oJYRFjSFYdSbGYEJYEaXjLJbfC79lx/zjx4Fh+yuN8pry3TtvwaevrGbg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check": "0.8.8",
        "@firebase/app-check-types": "0.5.2",
        "@firebase/component": "0.6.9",
        "@firebase/logger": "0.4.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/app-check-interop-types": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@firebase/app-check-interop-types/-/app-check-interop-types-0.3.2.tgz",
      "integrity": "sha512-LMs47Vinv2HBMZi49C09dJxp0QT5LwDzFaVGf/+ITHe3BlIhUiLNttkATSXplc89A2lAaeTqjgqVkiRfUGyQiQ==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/app-check-types": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/@firebase/app-check-types/-/app-check-types-0.5.2.tgz",
      "integrity": "sha512-FSOEzTzL5bLUbD2co3Zut46iyPWML6xc4x+78TeaXMSuJap5QObfb+rVvZJtla3asN4RwU7elaQaduP+HFizDA==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/app-compat": {
      "version": "0.2.43",
      "resolved": "https://registry.npmjs.org/@firebase/app-compat/-/app-compat-0.2.43.tgz",
      "integrity": "sha512-HM96ZyIblXjAC7TzE8wIk2QhHlSvksYkQ4Ukh1GmEenzkucSNUmUX4QvoKrqeWsLEQ8hdcojABeCV8ybVyZmeg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app": "0.10.13",
        "@firebase/component": "0.6.9",
        "@firebase/logger": "0.4.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      }
    },
    "node_modules/@firebase/app-types": {
      "version": "0.9.2",
      "resolved": "https://registry.npmjs.org/@firebase/app-types/-/app-types-0.9.2.tgz",
      "integrity": "sha512-oMEZ1TDlBz479lmABwWsWjzHwheQKiAgnuKxE0pz0IXCVx7/rtlkx1fQ6GfgK24WCrxDKMplZrT50Kh04iMbXQ==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/auth": {
      "version": "1.7.9",
      "resolved": "https://registry.npmjs.org/@firebase/auth/-/auth-1.7.9.tgz",
      "integrity": "sha512-yLD5095kVgDw965jepMyUrIgDklD6qH/BZNHeKOgvu7pchOKNjVM+zQoOVYJIKWMWOWBq8IRNVU6NXzBbozaJg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/logger": "0.4.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0",
        "undici": "6.19.7"
      },
      "peerDependencies": {
        "@firebase/app": "0.x",
        "@react-native-async-storage/async-storage": "^1.18.1"
      },
      "peerDependenciesMeta": {
        "@react-native-async-storage/async-storage": {
          "optional": true
        }
      }
    },
    "node_modules/@firebase/auth-compat": {
      "version": "0.5.14",
      "resolved": "https://registry.npmjs.org/@firebase/auth-compat/-/auth-compat-0.5.14.tgz",
      "integrity": "sha512-2eczCSqBl1KUPJacZlFpQayvpilg3dxXLy9cSMTKtQMTQSmondUtPI47P3ikH3bQAXhzKLOE+qVxJ3/IRtu9pw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/auth": "1.7.9",
        "@firebase/auth-types": "0.12.2",
        "@firebase/component": "0.6.9",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0",
        "undici": "6.19.7"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/auth-interop-types": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/@firebase/auth-interop-types/-/auth-interop-types-0.2.3.tgz",
      "integrity": "sha512-Fc9wuJGgxoxQeavybiuwgyi+0rssr76b+nHpj+eGhXFYAdudMWyfBHvFL/I5fEHniUM/UQdFzi9VXJK2iZF7FQ==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/auth-types": {
      "version": "0.12.2",
      "resolved": "https://registry.npmjs.org/@firebase/auth-types/-/auth-types-0.12.2.tgz",
      "integrity": "sha512-qsEBaRMoGvHO10unlDJhaKSuPn4pyoTtlQuP1ghZfzB6rNQPuhp/N/DcFZxm9i4v0SogjCbf9reWupwIvfmH6w==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x",
        "@firebase/util": "1.x"
      }
    },
    "node_modules/@firebase/component": {
      "version": "0.6.9",
      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.9.tgz",
      "integrity": "sha512-gm8EUEJE/fEac86AvHn8Z/QW8BvR56TBw3hMW0O838J/1mThYQXAIQBgUv75EqlCZfdawpWLrKt1uXvp9ciK3Q==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      }
    },
    "node_modules/@firebase/data-connect": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/@firebase/data-connect/-/data-connect-0.1.0.tgz",
      "integrity": "sha512-vSe5s8dY13ilhLnfY0eYRmQsdTbH7PUFZtBbqU6JVX/j8Qp9A6G5gG6//ulbX9/1JFOF1IWNOne9c8S/DOCJaQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/auth-interop-types": "0.2.3",
        "@firebase/component": "0.6.9",
        "@firebase/logger": "0.4.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/database": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@firebase/database/-/database-1.0.8.tgz",
      "integrity": "sha512-dzXALZeBI1U5TXt6619cv0+tgEhJiwlUtQ55WNZY7vGAjv7Q1QioV969iYwt1AQQ0ovHnEW0YW9TiBfefLvErg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check-interop-types": "0.3.2",
        "@firebase/auth-interop-types": "0.2.3",
        "@firebase/component": "0.6.9",
        "@firebase/logger": "0.4.2",
        "@firebase/util": "1.10.0",
        "faye-websocket": "0.11.4",
        "tslib": "^2.1.0"
      }
    },
    "node_modules/@firebase/database-compat": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@firebase/database-compat/-/database-compat-1.0.8.tgz",
      "integrity": "sha512-OpeWZoPE3sGIRPBKYnW9wLad25RaWbGyk7fFQe4xnJQKRzlynWeFBSRRAoLE2Old01WXwskUiucNqUUVlFsceg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/database": "1.0.8",
        "@firebase/database-types": "1.0.5",
        "@firebase/logger": "0.4.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      }
    },
    "node_modules/@firebase/database-types": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/@firebase/database-types/-/database-types-1.0.5.tgz",
      "integrity": "sha512-fTlqCNwFYyq/C6W7AJ5OCuq5CeZuBEsEwptnVxlNPkWCo5cTTyukzAHRSO/jaQcItz33FfYrrFk1SJofcu2AaQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-types": "0.9.2",
        "@firebase/util": "1.10.0"
      }
    },
    "node_modules/@firebase/firestore": {
      "version": "4.7.3",
      "resolved": "https://registry.npmjs.org/@firebase/firestore/-/firestore-4.7.3.tgz",
      "integrity": "sha512-NwVU+JPZ/3bhvNSJMCSzfcBZZg8SUGyzZ2T0EW3/bkUeefCyzMISSt/TTIfEHc8cdyXGlMqfGe3/62u9s74UEg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/logger": "0.4.2",
        "@firebase/util": "1.10.0",
        "@firebase/webchannel-wrapper": "1.0.1",
        "@grpc/grpc-js": "~1.9.0",
        "@grpc/proto-loader": "^0.7.8",
        "tslib": "^2.1.0",
        "undici": "6.19.7"
      },
      "engines": {
        "node": ">=10.10.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/firestore-compat": {
      "version": "0.3.38",
      "resolved": "https://registry.npmjs.org/@firebase/firestore-compat/-/firestore-compat-0.3.38.tgz",
      "integrity": "sha512-GoS0bIMMkjpLni6StSwRJarpu2+S5m346Na7gr9YZ/BZ/W3/8iHGNr9PxC+f0rNZXqS4fGRn88pICjrZEgbkqQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/firestore": "4.7.3",
        "@firebase/firestore-types": "3.0.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/firestore-types": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@firebase/firestore-types/-/firestore-types-3.0.2.tgz",
      "integrity": "sha512-wp1A+t5rI2Qc/2q7r2ZpjUXkRVPtGMd6zCLsiWurjsQpqPgFin3AhNibKcIzoF2rnToNa/XYtyWXuifjOOwDgg==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x",
        "@firebase/util": "1.x"
      }
    },
    "node_modules/@firebase/functions": {
      "version": "0.11.8",
      "resolved": "https://registry.npmjs.org/@firebase/functions/-/functions-0.11.8.tgz",
      "integrity": "sha512-Lo2rTPDn96naFIlSZKVd1yvRRqqqwiJk7cf9TZhUerwnPKgBzXy+aHE22ry+6EjCaQusUoNai6mU6p+G8QZT1g==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check-interop-types": "0.3.2",
        "@firebase/auth-interop-types": "0.2.3",
        "@firebase/component": "0.6.9",
        "@firebase/messaging-interop-types": "0.2.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0",
        "undici": "6.19.7"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/functions-compat": {
      "version": "0.3.14",
      "resolved": "https://registry.npmjs.org/@firebase/functions-compat/-/functions-compat-0.3.14.tgz",
      "integrity": "sha512-dZ0PKOKQFnOlMfcim39XzaXonSuPPAVuzpqA4ONTIdyaJK/OnBaIEVs/+BH4faa1a2tLeR+Jy15PKqDRQoNIJw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/functions": "0.11.8",
        "@firebase/functions-types": "0.6.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/functions-types": {
      "version": "0.6.2",
      "resolved": "https://registry.npmjs.org/@firebase/functions-types/-/functions-types-0.6.2.tgz",
      "integrity": "sha512-0KiJ9lZ28nS2iJJvimpY4nNccV21rkQyor5Iheu/nq8aKXJqtJdeSlZDspjPSBBiHRzo7/GMUttegnsEITqR+w==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/installations": {
      "version": "0.6.9",
      "resolved": "https://registry.npmjs.org/@firebase/installations/-/installations-0.6.9.tgz",
      "integrity": "sha512-hlT7AwCiKghOX3XizLxXOsTFiFCQnp/oj86zp1UxwDGmyzsyoxtX+UIZyVyH/oBF5+XtblFG9KZzZQ/h+dpy+Q==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/util": "1.10.0",
        "idb": "7.1.1",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/installations-compat": {
      "version": "0.2.9",
      "resolved": "https://registry.npmjs.org/@firebase/installations-compat/-/installations-compat-0.2.9.tgz",
      "integrity": "sha512-2lfdc6kPXR7WaL4FCQSQUhXcPbI7ol3wF+vkgtU25r77OxPf8F/VmswQ7sgIkBBWtymn5ZF20TIKtnOj9rjb6w==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/installations": "0.6.9",
        "@firebase/installations-types": "0.5.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/installations-types": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/@firebase/installations-types/-/installations-types-0.5.2.tgz",
      "integrity": "sha512-que84TqGRZJpJKHBlF2pkvc1YcXrtEDOVGiDjovP/a3s6W4nlbohGXEsBJo0JCeeg/UG9A+DEZVDUV9GpklUzA==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x"
      }
    },
    "node_modules/@firebase/logger": {
      "version": "0.4.2",
      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.2.tgz",
      "integrity": "sha512-Q1VuA5M1Gjqrwom6I6NUU4lQXdo9IAQieXlujeHZWvRt1b7qQ0KwBaNAjgxG27jgF9/mUwsNmO8ptBCGVYhB0A==",
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.1.0"
      }
    },
    "node_modules/@firebase/messaging": {
      "version": "0.12.12",
      "resolved": "https://registry.npmjs.org/@firebase/messaging/-/messaging-0.12.12.tgz",
      "integrity": "sha512-6q0pbzYBJhZEtUoQx7hnPhZvAbuMNuBXKQXOx2YlWhSrlv9N1m0ZzlNpBbu/ItTzrwNKTibdYzUyaaxdWLg+4w==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/installations": "0.6.9",
        "@firebase/messaging-interop-types": "0.2.2",
        "@firebase/util": "1.10.0",
        "idb": "7.1.1",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/messaging-compat": {
      "version": "0.2.12",
      "resolved": "https://registry.npmjs.org/@firebase/messaging-compat/-/messaging-compat-0.2.12.tgz",
      "integrity": "sha512-pKsiUVZrbmRgdImYqhBNZlkKJbqjlPkVdQRZGRbkTyX4OSGKR0F/oJeCt1a8jEg5UnBp4fdVwSWSp4DuCovvEQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/messaging": "0.12.12",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/messaging-interop-types": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/@firebase/messaging-interop-types/-/messaging-interop-types-0.2.2.tgz",
      "integrity": "sha512-l68HXbuD2PPzDUOFb3aG+nZj5KA3INcPwlocwLZOzPp9rFM9yeuI9YLl6DQfguTX5eAGxO0doTR+rDLDvQb5tA==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/performance": {
      "version": "0.6.9",
      "resolved": "https://registry.npmjs.org/@firebase/performance/-/performance-0.6.9.tgz",
      "integrity": "sha512-PnVaak5sqfz5ivhua+HserxTJHtCar/7zM0flCX6NkzBNzJzyzlH4Hs94h2Il0LQB99roBqoE5QT1JqWqcLJHQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/installations": "0.6.9",
        "@firebase/logger": "0.4.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/performance-compat": {
      "version": "0.2.9",
      "resolved": "https://registry.npmjs.org/@firebase/performance-compat/-/performance-compat-0.2.9.tgz",
      "integrity": "sha512-dNl95IUnpsu3fAfYBZDCVhXNkASE0uo4HYaEPd2/PKscfTvsgqFAOxfAXzBEDOnynDWiaGUnb5M1O00JQ+3FXA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/logger": "0.4.2",
        "@firebase/performance": "0.6.9",
        "@firebase/performance-types": "0.2.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/performance-types": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/@firebase/performance-types/-/performance-types-0.2.2.tgz",
      "integrity": "sha512-gVq0/lAClVH5STrIdKnHnCo2UcPLjJlDUoEB/tB4KM+hAeHUxWKnpT0nemUPvxZ5nbdY/pybeyMe8Cs29gEcHA==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/remote-config": {
      "version": "0.4.9",
      "resolved": "https://registry.npmjs.org/@firebase/remote-config/-/remote-config-0.4.9.tgz",
      "integrity": "sha512-EO1NLCWSPMHdDSRGwZ73kxEEcTopAxX1naqLJFNApp4hO8WfKfmEpmjxmP5TrrnypjIf2tUkYaKsfbEA7+AMmA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/installations": "0.6.9",
        "@firebase/logger": "0.4.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/remote-config-compat": {
      "version": "0.2.9",
      "resolved": "https://registry.npmjs.org/@firebase/remote-config-compat/-/remote-config-compat-0.2.9.tgz",
      "integrity": "sha512-AxzGpWfWFYejH2twxfdOJt5Cfh/ATHONegTd/a0p5flEzsD5JsxXgfkFToop+mypEL3gNwawxrxlZddmDoNxyA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/logger": "0.4.2",
        "@firebase/remote-config": "0.4.9",
        "@firebase/remote-config-types": "0.3.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/remote-config-types": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@firebase/remote-config-types/-/remote-config-types-0.3.2.tgz",
      "integrity": "sha512-0BC4+Ud7y2aPTyhXJTMTFfrGGLqdYXrUB9sJVAB8NiqJswDTc4/2qrE/yfUbnQJhbSi6ZaTTBKyG3n1nplssaA==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/storage": {
      "version": "0.13.2",
      "resolved": "https://registry.npmjs.org/@firebase/storage/-/storage-0.13.2.tgz",
      "integrity": "sha512-fxuJnHshbhVwuJ4FuISLu+/76Aby2sh+44ztjF2ppoe0TELIDxPW6/r1KGlWYt//AD0IodDYYA8ZTN89q8YqUw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0",
        "undici": "6.19.7"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/storage-compat": {
      "version": "0.3.12",
      "resolved": "https://registry.npmjs.org/@firebase/storage-compat/-/storage-compat-0.3.12.tgz",
      "integrity": "sha512-hA4VWKyGU5bWOll+uwzzhEMMYGu9PlKQc1w4DWxB3aIErWYzonrZjF0icqNQZbwKNIdh8SHjZlFeB2w6OSsjfg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.9",
        "@firebase/storage": "0.13.2",
        "@firebase/storage-types": "0.8.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/storage-types": {
      "version": "0.8.2",
      "resolved": "https://registry.npmjs.org/@firebase/storage-types/-/storage-types-0.8.2.tgz",
      "integrity": "sha512-0vWu99rdey0g53lA7IShoA2Lol1jfnPovzLDUBuon65K7uKG9G+L5uO05brD9pMw+l4HRFw23ah3GwTGpEav6g==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x",
        "@firebase/util": "1.x"
      }
    },
    "node_modules/@firebase/util": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.10.0.tgz",
      "integrity": "sha512-xKtx4A668icQqoANRxyDLBLz51TAbDP9KRfpbKGxiCAW346d0BeJe5vN6/hKxxmWwnZ0mautyv39JxviwwQMOQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.1.0"
      }
    },
    "node_modules/@firebase/vertexai-preview": {
      "version": "0.0.4",
      "resolved": "https://registry.npmjs.org/@firebase/vertexai-preview/-/vertexai-preview-0.0.4.tgz",
      "integrity": "sha512-EBSqyu9eg8frQlVU9/HjKtHN7odqbh9MtAcVz3WwHj4gLCLOoN9F/o+oxlq3CxvFrd3CNTZwu6d2mZtVlEInng==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check-interop-types": "0.3.2",
        "@firebase/component": "0.6.9",
        "@firebase/logger": "0.4.2",
        "@firebase/util": "1.10.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x",
        "@firebase/app-types": "0.x"
      }
    },
    "node_modules/@firebase/webchannel-wrapper": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@firebase/webchannel-wrapper/-/webchannel-wrapper-1.0.1.tgz",
      "integrity": "sha512-jmEnr/pk0yVkA7mIlHNnxCi+wWzOFUg0WyIotgkKAb2u1J7fAeDBcVNSTjTihbAYNusCLQdW5s9IJ5qwnEufcQ==",
      "license": "Apache-2.0"
    },
    "node_modules/@floating-ui/core": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/@floating-ui/core/-/core-1.7.3.tgz",
      "integrity": "sha512-sGnvb5dmrJaKEZ+LDIpguvdX3bDlEllmv4/ClQ9awcmCZrlx5jQyyMWFM5kBI+EyNOCDDiKk8il0zeuX3Zlg/w==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/utils": "^0.2.10"
      }
    },
    "node_modules/@floating-ui/dom": {
      "version": "1.7.4",
      "resolved": "https://registry.npmjs.org/@floating-ui/dom/-/dom-1.7.4.tgz",
      "integrity": "sha512-OOchDgh4F2CchOX94cRVqhvy7b3AFb+/rQXyswmzmGakRfkMgoWVjfnLWkRirfLEfuD4ysVW16eXzwt3jHIzKA==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/core": "^1.7.3",
        "@floating-ui/utils": "^0.2.10"
      }
    },
    "node_modules/@floating-ui/react-dom": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/@floating-ui/react-dom/-/react-dom-2.1.6.tgz",
      "integrity": "sha512-4JX6rEatQEvlmgU80wZyq9RT96HZJa88q8hp0pBd+LrczeDI4o6uA2M+uvxngVHo4Ihr8uibXxH6+70zhAFrVw==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/dom": "^1.7.4"
      },
      "peerDependencies": {
        "react": ">=16.8.0",
        "react-dom": ">=16.8.0"
      }
    },
    "node_modules/@floating-ui/utils": {
      "version": "0.2.10",
      "resolved": "https://registry.npmjs.org/@floating-ui/utils/-/utils-0.2.10.tgz",
      "integrity": "sha512-aGTxbpbg8/b5JfU1HXSrbH3wXZuLPJcNEcZQFMxLs3oSzgtVu6nFPkbbGGUvBcUjKV2YyB9Wxxabo+HEH9tcRQ==",
      "license": "MIT"
    },
    "node_modules/@google-cloud/firestore": {
      "version": "7.11.6",
      "resolved": "https://registry.npmjs.org/@google-cloud/firestore/-/firestore-7.11.6.tgz",
      "integrity": "sha512-EW/O8ktzwLfyWBOsNuhRoMi8lrC3clHM5LVFhGvO1HCsLozCOOXRAlHrYBoE6HL42Sc8yYMuCb2XqcnJ4OOEpw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@opentelemetry/api": "^1.3.0",
        "fast-deep-equal": "^3.1.1",
        "functional-red-black-tree": "^1.0.1",
        "google-gax": "^4.3.3",
        "protobufjs": "^7.2.6"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@google-cloud/paginator": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/@google-cloud/paginator/-/paginator-5.0.2.tgz",
      "integrity": "sha512-DJS3s0OVH4zFDB1PzjxAsHqJT6sKVbRwwML0ZBP9PbU7Yebtu/7SWMRzvO2J3nUi9pRNITCfu4LJeooM2w4pjg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "arrify": "^2.0.0",
        "extend": "^3.0.2"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@google-cloud/projectify": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@google-cloud/projectify/-/projectify-4.0.0.tgz",
      "integrity": "sha512-MmaX6HeSvyPbWGwFq7mXdo0uQZLGBYCwziiLIGq5JVX+/bdI3SAq6bP98trV5eTWfLuvsMcIC1YJOF2vfteLFA==",
      "license": "Apache-2.0",
      "optional": true,
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@google-cloud/promisify": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@google-cloud/promisify/-/promisify-4.0.0.tgz",
      "integrity": "sha512-Orxzlfb9c67A15cq2JQEyVc7wEsmFBmHjZWZYQMUyJ1qivXyMwdyNOs9odi79hze+2zqdTtu1E19IM/FtqZ10g==",
      "license": "Apache-2.0",
      "optional": true,
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@google-cloud/storage": {
      "version": "7.17.1",
      "resolved": "https://registry.npmjs.org/@google-cloud/storage/-/storage-7.17.1.tgz",
      "integrity": "sha512-2FMQbpU7qK+OtBPaegC6n+XevgZksobUGo6mGKnXNmeZpvLiAo1gTAE3oTKsrMGDV4VtL8Zzpono0YsK/Q7Iqg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@google-cloud/paginator": "^5.0.0",
        "@google-cloud/projectify": "^4.0.0",
        "@google-cloud/promisify": "<4.1.0",
        "abort-controller": "^3.0.0",
        "async-retry": "^1.3.3",
        "duplexify": "^4.1.3",
        "fast-xml-parser": "^4.4.1",
        "gaxios": "^6.0.2",
        "google-auth-library": "^9.6.3",
        "html-entities": "^2.5.2",
        "mime": "^3.0.0",
        "p-limit": "^3.0.1",
        "retry-request": "^7.0.0",
        "teeny-request": "^9.0.0",
        "uuid": "^8.0.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@google-cloud/storage/node_modules/uuid": {
      "version": "8.3.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
      "license": "MIT",
      "optional": true,
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/@google/generative-ai": {
      "version": "0.24.1",
      "resolved": "https://registry.npmjs.org/@google/generative-ai/-/generative-ai-0.24.1.tgz",
      "integrity": "sha512-MqO+MLfM6kjxcKoy0p1wRzG3b4ZZXtPI+z2IE26UogS2Cm/XHO+7gGRBh6gcJsOiIVoH93UwKvW4HdgiOZCy9Q==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@grpc/grpc-js": {
      "version": "1.9.15",
      "resolved": "https://registry.npmjs.org/@grpc/grpc-js/-/grpc-js-1.9.15.tgz",
      "integrity": "sha512-nqE7Hc0AzI+euzUwDAy0aY5hCp10r734gMGRdU+qOPX0XSceI2ULrcXB5U2xSc5VkWwalCj4M7GzCAygZl2KoQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@grpc/proto-loader": "^0.7.8",
        "@types/node": ">=12.12.47"
      },
      "engines": {
        "node": "^8.13.0 || >=10.10.0"
      }
    },
    "node_modules/@grpc/proto-loader": {
      "version": "0.7.15",
      "resolved": "https://registry.npmjs.org/@grpc/proto-loader/-/proto-loader-0.7.15.tgz",
      "integrity": "sha512-tMXdRCfYVixjuFK+Hk0Q1s38gV9zDiDJfWL3h1rv4Qc39oILCu1TRTDt7+fGUI8K4G1Fj125Hx/ru3azECWTyQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "lodash.camelcase": "^4.3.0",
        "long": "^5.0.0",
        "protobufjs": "^7.2.5",
        "yargs": "^17.7.2"
      },
      "bin": {
        "proto-loader-gen-types": "build/bin/proto-loader-gen-types.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@humanwhocodes/config-array": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.13.0.tgz",
      "integrity": "sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==",
      "deprecated": "Use @eslint/config-array instead",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@humanwhocodes/object-schema": "^2.0.3",
        "debug": "^4.3.1",
        "minimatch": "^3.0.5"
      },
      "engines": {
        "node": ">=10.10.0"
      }
    },
    "node_modules/@humanwhocodes/module-importer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=12.22"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/object-schema": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz",
      "integrity": "sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==",
      "deprecated": "Use @eslint/object-schema instead",
      "dev": true,
      "license": "BSD-3-Clause"
    },
    "node_modules/@isaacs/cliui": {
      "version": "8.0.2",
      "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
      "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "string-width": "^5.1.2",
        "string-width-cjs": "npm:string-width@^4.2.0",
        "strip-ansi": "^7.0.1",
        "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
        "wrap-ansi": "^8.1.0",
        "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/ansi-regex": {
      "version": "6.2.2",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.2.2.tgz",
      "integrity": "sha512-Bq3SmSpyFHaWjPk8If9yc6svM8c56dB5BAtW4Qbw5jHTwwXXcTLoRMkpDJp6VL0XzlWaCHTXrkFURMYmD0sLqg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/ansi-styles": {
      "version": "6.2.3",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.3.tgz",
      "integrity": "sha512-4Dj6M28JB+oAH8kFkTLUo+a2jwOFkuqb3yucU0CANcRRUbxS0cP0nZYCGjcc3BNXwRIsUVmDGgzawme7zvJHvg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/string-width": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "eastasianwidth": "^0.2.0",
        "emoji-regex": "^9.2.2",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/strip-ansi": {
      "version": "7.1.2",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.2.tgz",
      "integrity": "sha512-gmBGslpoQJtgnMAvOVqGZpEz9dyoKTCzy2nfz/n8aIFhN/jCE/rCmcxabB6jOOHV+0WNnylOxaxBQPSvcWklhA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^6.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
      }
    },
    "node_modules/@isaacs/cliui/node_modules/wrap-ansi": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
      "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^6.1.0",
        "string-width": "^5.0.1",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.13",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.13.tgz",
      "integrity": "sha512-2kkt/7niJ6MgEPxF0bYdQ6etZaA+fQvDcLKckhy1yIQOzaoKjBBjSj63/aLVjYE3qhRt5dvM+uUyfCg6UKCBbA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.0",
        "@jridgewell/trace-mapping": "^0.3.24"
      }
    },
    "node_modules/@jridgewell/remapping": {
      "version": "2.3.5",
      "resolved": "https://registry.npmjs.org/@jridgewell/remapping/-/remapping-2.3.5.tgz",
      "integrity": "sha512-LI9u/+laYG4Ds1TDKSJW2YPrIlcVYOwi2fUC6xB43lueCjgxV4lffOCZCtYFiH6TNOX+tQKXx97T4IKHbhyHEQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/source-map": {
      "version": "0.3.11",
      "resolved": "https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.11.tgz",
      "integrity": "sha512-ZMp1V8ZFcPG5dIWnQLr3NSI1MiCU7UETdS/A0G8V/XWHvJv3ZsFqutJn1Y5RPmAPX6F3BiE397OqveU/9NCuIA==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.25"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.5",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.5.tgz",
      "integrity": "sha512-cYQ9310grqxueWbl+WuIUIaiUaDcj7WOq5fVhEljNVgRfOUhY9fy2zTvfoqWsnebh8Sl70VScFbICvJnLKB0Og==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.31",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.31.tgz",
      "integrity": "sha512-zzNR+SdQSDJzc8joaeP8QQoCQr8NuYx2dIIytl1QeBEZHJ9uW6hebsrYgbz8hJwUQao3TWCMtmfV8Nu1twOLAw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@js-sdsl/ordered-map": {
      "version": "4.4.2",
      "resolved": "https://registry.npmjs.org/@js-sdsl/ordered-map/-/ordered-map-4.4.2.tgz",
      "integrity": "sha512-iUKgm52T8HOE/makSxjqoWhe95ZJA1/G1sYsGev2JDKUSS14KAgg1LHb+Ba+IPow0xflbnSkOsZcO08C7w1gYw==",
      "license": "MIT",
      "optional": true,
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/js-sdsl"
      }
    },
    "node_modules/@mapbox/jsonlint-lines-primitives": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/@mapbox/jsonlint-lines-primitives/-/jsonlint-lines-primitives-2.0.2.tgz",
      "integrity": "sha512-rY0o9A5ECsTQRVhv7tL/OyDpGAoUB4tTvLiW1DSzQGq4bvTPhNw1VpSNjDJc5GFZ2XuyOtSWSVN05qOtcD71qQ==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/@mapbox/mapbox-gl-supported": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@mapbox/mapbox-gl-supported/-/mapbox-gl-supported-3.0.0.tgz",
      "integrity": "sha512-2XghOwu16ZwPJLOFVuIOaLbN0iKMn867evzXFyf0P22dqugezfJwLmdanAgU25ITvz1TvOfVP4jsDImlDJzcWg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@mapbox/point-geometry": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@mapbox/point-geometry/-/point-geometry-1.1.0.tgz",
      "integrity": "sha512-YGcBz1cg4ATXDCM/71L9xveh4dynfGmcLDqufR+nQQy3fKwsAZsWd/x4621/6uJaeB9mwOHE6hPeDgXz9uViUQ==",
      "license": "ISC"
    },
    "node_modules/@mapbox/tiny-sdf": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/@mapbox/tiny-sdf/-/tiny-sdf-2.0.7.tgz",
      "integrity": "sha512-25gQLQMcpivjOSA40g3gO6qgiFPDpWRoMfd+G/GoppPIeP6JDaMMkMrEJnMZhKyyS6iKwVt5YKu02vCUyJM3Ug==",
      "license": "BSD-2-Clause"
    },
    "node_modules/@mapbox/unitbezier": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/@mapbox/unitbezier/-/unitbezier-0.0.1.tgz",
      "integrity": "sha512-nMkuDXFv60aBr9soUG5q+GvZYL+2KZHVvsqFCzqnkGEf46U2fvmytHaEVc1/YZbiLn8X+eR3QzX1+dwDO1lxlw==",
      "license": "BSD-2-Clause"
    },
    "node_modules/@mapbox/vector-tile": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/@mapbox/vector-tile/-/vector-tile-2.0.4.tgz",
      "integrity": "sha512-AkOLcbgGTdXScosBWwmmD7cDlvOjkg/DetGva26pIRiZPdeJYjYKarIlb4uxVzi6bwHO6EWH82eZ5Nuv4T5DUg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@mapbox/point-geometry": "~1.1.0",
        "@types/geojson": "^7946.0.16",
        "pbf": "^4.0.1"
      }
    },
    "node_modules/@mapbox/whoots-js": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@mapbox/whoots-js/-/whoots-js-3.1.0.tgz",
      "integrity": "sha512-Es6WcD0nO5l+2BOQS4uLfNPYQaNDfbot3X1XUoloz+x0mPDS3eeORZJl06HXjwBG1fOGwCRnzK88LMdxKRrd6Q==",
      "license": "ISC",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@maplibre/maplibre-gl-style-spec": {
      "version": "19.3.3",
      "resolved": "https://registry.npmjs.org/@maplibre/maplibre-gl-style-spec/-/maplibre-gl-style-spec-19.3.3.tgz",
      "integrity": "sha512-cOZZOVhDSulgK0meTsTkmNXb1ahVvmTmWmfx9gRBwc6hq98wS9JP35ESIoNq3xqEan+UN+gn8187Z6E4NKhLsw==",
      "license": "ISC",
      "dependencies": {
        "@mapbox/jsonlint-lines-primitives": "~2.0.2",
        "@mapbox/unitbezier": "^0.0.1",
        "json-stringify-pretty-compact": "^3.0.0",
        "minimist": "^1.2.8",
        "rw": "^1.3.3",
        "sort-object": "^3.0.3"
      },
      "bin": {
        "gl-style-format": "dist/gl-style-format.mjs",
        "gl-style-migrate": "dist/gl-style-migrate.mjs",
        "gl-style-validate": "dist/gl-style-validate.mjs"
      }
    },
    "node_modules/@napi-rs/wasm-runtime": {
      "version": "0.2.12",
      "resolved": "https://registry.npmjs.org/@napi-rs/wasm-runtime/-/wasm-runtime-0.2.12.tgz",
      "integrity": "sha512-ZVWUcfwY4E/yPitQJl481FjFo3K22D6qF0DuFH6Y/nbnE11GY5uguDxZMGXPQ8WQ0128MXQD7TnfHyK4oWoIJQ==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@emnapi/core": "^1.4.3",
        "@emnapi/runtime": "^1.4.3",
        "@tybys/wasm-util": "^0.10.0"
      }
    },
    "node_modules/@next/env": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/@next/env/-/env-14.0.0.tgz",
      "integrity": "sha512-cIKhxkfVELB6hFjYsbtEeTus2mwrTC+JissfZYM0n+8Fv+g8ucUfOlm3VEDtwtwydZ0Nuauv3bl0qF82nnCAqA==",
      "license": "MIT"
    },
    "node_modules/@next/eslint-plugin-next": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/@next/eslint-plugin-next/-/eslint-plugin-next-14.0.0.tgz",
      "integrity": "sha512-Ye37nNI09V3yt7pzuzSQtwlvuJ2CGzFszHXkcTHHZgNr7EhTMFLipn3VSJChy+e5+ahTdNApPphc3qCPUsn10A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "glob": "7.1.7"
      }
    },
    "node_modules/@next/font": {
      "version": "14.2.15",
      "resolved": "https://registry.npmjs.org/@next/font/-/font-14.2.15.tgz",
      "integrity": "sha512-QopYhBmCDDrNDynbi+ZD1hDZXmQXVFo7TmAFp4DQgO/kogz1OLbQ92hPigJbj572eZ3GaaVxNIyYVn3/eAsehg==",
      "license": "MIT",
      "peerDependencies": {
        "next": "*"
      }
    },
    "node_modules/@next/swc-darwin-arm64": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/@next/swc-darwin-arm64/-/swc-darwin-arm64-14.0.0.tgz",
      "integrity": "sha512-HQKi159jCz4SRsPesVCiNN6tPSAFUkOuSkpJsqYTIlbHLKr1mD6be/J0TvWV6fwJekj81bZV9V/Tgx3C2HO9lA==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-darwin-x64": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/@next/swc-darwin-x64/-/swc-darwin-x64-14.0.0.tgz",
      "integrity": "sha512-4YyQLMSaCgX/kgC1jjF3s3xSoBnwHuDhnF6WA1DWNEYRsbOOPWjcYhv8TKhRe2ApdOam+VfQSffC4ZD+X4u1Cg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-arm64-gnu": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-gnu/-/swc-linux-arm64-gnu-14.0.0.tgz",
      "integrity": "sha512-io7fMkJ28Glj7SH8yvnlD6naIhRDnDxeE55CmpQkj3+uaA2Hko6WGY2pT5SzpQLTnGGnviK85cy8EJ2qsETj/g==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-arm64-musl": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-musl/-/swc-linux-arm64-musl-14.0.0.tgz",
      "integrity": "sha512-nC2h0l1Jt8LEzyQeSs/BKpXAMe0mnHIMykYALWaeddTqCv5UEN8nGO3BG8JAqW/Y8iutqJsaMe2A9itS0d/r8w==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-x64-gnu": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-gnu/-/swc-linux-x64-gnu-14.0.0.tgz",
      "integrity": "sha512-Wf+WjXibJQ7hHXOdNOmSMW5bxeJHVf46Pwb3eLSD2L76NrytQlif9NH7JpHuFlYKCQGfKfgSYYre5rIfmnSwQw==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-x64-musl": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-musl/-/swc-linux-x64-musl-14.0.0.tgz",
      "integrity": "sha512-WTZb2G7B+CTsdigcJVkRxfcAIQj7Lf0ipPNRJ3vlSadU8f0CFGv/ST+sJwF5eSwIe6dxKoX0DG6OljDBaad+rg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-win32-arm64-msvc": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/@next/swc-win32-arm64-msvc/-/swc-win32-arm64-msvc-14.0.0.tgz",
      "integrity": "sha512-7R8/x6oQODmNpnWVW00rlWX90sIlwluJwcvMT6GXNIBOvEf01t3fBg0AGURNKdTJg2xNuP7TyLchCL7Lh2DTiw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-win32-ia32-msvc": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/@next/swc-win32-ia32-msvc/-/swc-win32-ia32-msvc-14.0.0.tgz",
      "integrity": "sha512-RLK1nELvhCnxaWPF07jGU4x3tjbyx2319q43loZELqF0+iJtKutZ+Lk8SVmf/KiJkYBc7Cragadz7hb3uQvz4g==",
      "cpu": [
        "ia32"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-win32-x64-msvc": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/@next/swc-win32-x64-msvc/-/swc-win32-x64-msvc-14.0.0.tgz",
      "integrity": "sha512-g6hLf1SUko+hnnaywQQZzzb3BRecQsoKkF3o/C+F+dOA4w/noVAJngUVkfwF0+2/8FzNznM7ofM6TGZO9svn7w==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nolyfill/is-core-module": {
      "version": "1.0.39",
      "resolved": "https://registry.npmjs.org/@nolyfill/is-core-module/-/is-core-module-1.0.39.tgz",
      "integrity": "sha512-nn5ozdjYQpUCZlWGuxcJY/KpxkWQs4DcbMCmKojjyrYDEAGy4Ce19NN4v5MduafTwJlbKc99UA8YhSVqq9yPZA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12.4.0"
      }
    },
    "node_modules/@opentelemetry/api": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@opentelemetry/api/-/api-1.9.0.tgz",
      "integrity": "sha512-3giAOQvZiH5F9bMlMiv8+GSPMeqg0dbaeo58/0SlA9sxSqZhnUtxzX9/2FzyhS9sWQf5S0GJE0AKBrFqjpeYcg==",
      "license": "Apache-2.0",
      "optional": true,
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/@pkgjs/parseargs": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
      "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@protobufjs/aspromise": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/aspromise/-/aspromise-1.1.2.tgz",
      "integrity": "sha512-j+gKExEuLmKwvz3OgROXtrJ2UG2x8Ch2YZUxahh+s1F2HZ+wAceUNLkvy6zKCPVRkU++ZWQrdxsUeQXmcg4uoQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/base64": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/base64/-/base64-1.1.2.tgz",
      "integrity": "sha512-AZkcAA5vnN/v4PDqKyMR5lx7hZttPDgClv83E//FMNhR2TMcLUhfRUBHCmSl0oi9zMgDDqRUJkSxO3wm85+XLg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/codegen": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/@protobufjs/codegen/-/codegen-2.0.4.tgz",
      "integrity": "sha512-YyFaikqM5sH0ziFZCN3xDC7zeGaB/d0IUb9CATugHWbd1FRFwWwt4ld4OYMPWu5a3Xe01mGAULCdqhMlPl29Jg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/eventemitter": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/eventemitter/-/eventemitter-1.1.0.tgz",
      "integrity": "sha512-j9ednRT81vYJ9OfVuXG6ERSTdEL1xVsNgqpkxMsbIabzSo3goCjDIveeGv5d03om39ML71RdmrGNjG5SReBP/Q==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/fetch": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/fetch/-/fetch-1.1.0.tgz",
      "integrity": "sha512-lljVXpqXebpsijW71PZaCYeIcE5on1w5DlQy5WH6GLbFryLUrBD4932W/E2BSpfRJWseIL4v/KPgBFxDOIdKpQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@protobufjs/aspromise": "^1.1.1",
        "@protobufjs/inquire": "^1.1.0"
      }
    },
    "node_modules/@protobufjs/float": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/float/-/float-1.0.2.tgz",
      "integrity": "sha512-Ddb+kVXlXst9d+R9PfTIxh1EdNkgoRe5tOX6t01f1lYWOvJnSPDBlG241QLzcyPdoNTsblLUdujGSE4RzrTZGQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/inquire": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/inquire/-/inquire-1.1.0.tgz",
      "integrity": "sha512-kdSefcPdruJiFMVSbn801t4vFK7KB/5gd2fYvrxhuJYg8ILrmn9SKSX2tZdV6V+ksulWqS7aXjBcRXl3wHoD9Q==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/path": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/path/-/path-1.1.2.tgz",
      "integrity": "sha512-6JOcJ5Tm08dOHAbdR3GrvP+yUUfkjG5ePsHYczMFLq3ZmMkAD98cDgcT2iA1lJ9NVwFd4tH/iSSoe44YWkltEA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/pool": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/pool/-/pool-1.1.0.tgz",
      "integrity": "sha512-0kELaGSIDBKvcgS4zkjz1PeddatrjYcmMWOlAuAPwAeccUrPHdUqo/J6LiymHHEiJT5NrF1UVwxY14f+fy4WQw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/utf8": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/utf8/-/utf8-1.1.0.tgz",
      "integrity": "sha512-Vvn3zZrhQZkkBE8LSuW3em98c0FwgO4nxzv6OdSxPKJIEKY2bGbHn+mhGIPerzI4twdxaP8/0+06HBpwf345Lw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@radix-ui/number": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/number/-/number-1.1.1.tgz",
      "integrity": "sha512-MkKCwxlXTgz6CFoJx3pCwn07GKp36+aZyu/u2Ln2VrA5DcdyCZkASEDBTd8x5whTQQL5CiYf4prXKLcgQdv29g==",
      "license": "MIT"
    },
    "node_modules/@radix-ui/primitive": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/primitive/-/primitive-1.1.3.tgz",
      "integrity": "sha512-JTF99U/6XIjCBo0wqkU5sK10glYe27MRRsfwoiq5zzOEZLHU3A3KCMa5X/azekYRCJ0HlwI0crAXS/5dEHTzDg==",
      "license": "MIT"
    },
    "node_modules/@radix-ui/react-arrow": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-arrow/-/react-arrow-1.1.7.tgz",
      "integrity": "sha512-F+M1tLhO+mlQaOWspE8Wstg+z6PwxwRd8oQ8IXceWz92kfAmalTRf0EjrouQeo7QssEPfCn05B4Ihs1K9WQ/7w==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-primitive": "2.1.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-collection": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-collection/-/react-collection-1.1.7.tgz",
      "integrity": "sha512-Fh9rGN0MoI4ZFUNyfFVNU4y9LUz93u9/0K+yLgA2bwRojxM8JU1DyvvMBabnZPBgMWREAJvU2jjVzq+LrFUglw==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-slot": "1.2.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-compose-refs": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-compose-refs/-/react-compose-refs-1.1.2.tgz",
      "integrity": "sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-context": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-context/-/react-context-1.1.2.tgz",
      "integrity": "sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-dialog": {
      "version": "1.1.15",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-dialog/-/react-dialog-1.1.15.tgz",
      "integrity": "sha512-TCglVRtzlffRNxRMEyR36DGBLJpeusFcgMVD9PZEzAKnUs1lKCgX5u9BmC2Yg+LL9MgZDugFFs1Vl+Jp4t/PGw==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/primitive": "1.1.3",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-dismissable-layer": "1.1.11",
        "@radix-ui/react-focus-guards": "1.1.3",
        "@radix-ui/react-focus-scope": "1.1.7",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-portal": "1.1.9",
        "@radix-ui/react-presence": "1.1.5",
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-slot": "1.2.3",
        "@radix-ui/react-use-controllable-state": "1.2.2",
        "aria-hidden": "^1.2.4",
        "react-remove-scroll": "^2.6.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-direction": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-direction/-/react-direction-1.1.1.tgz",
      "integrity": "sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-dismissable-layer": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-dismissable-layer/-/react-dismissable-layer-1.1.11.tgz",
      "integrity": "sha512-Nqcp+t5cTB8BinFkZgXiMJniQH0PsUt2k51FUhbdfeKvc4ACcG2uQniY/8+h1Yv6Kza4Q7lD7PQV0z0oicE0Mg==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/primitive": "1.1.3",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-escape-keydown": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-focus-guards": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-focus-guards/-/react-focus-guards-1.1.3.tgz",
      "integrity": "sha512-0rFg/Rj2Q62NCm62jZw0QX7a3sz6QCQU0LpZdNrJX8byRGaGVTqbrW9jAoIAHyMQqsNpeZ81YgSizOt5WXq0Pw==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-focus-scope": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-focus-scope/-/react-focus-scope-1.1.7.tgz",
      "integrity": "sha512-t2ODlkXBQyn7jkl6TNaw/MtVEVvIGelJDCG41Okq/KwUsJBwQ4XVZsHAVUkK4mBv3ewiAS3PGuUWuY2BoK4ZUw==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-use-callback-ref": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-id": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-id/-/react-id-1.1.1.tgz",
      "integrity": "sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-popper": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-popper/-/react-popper-1.2.8.tgz",
      "integrity": "sha512-0NJQ4LFFUuWkE7Oxf0htBKS6zLkkjBH+hM1uk7Ng705ReR8m/uelduy1DBo0PyBXPKVnBA6YBlU94MBGXrSBCw==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/react-dom": "^2.0.0",
        "@radix-ui/react-arrow": "1.1.7",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-layout-effect": "1.1.1",
        "@radix-ui/react-use-rect": "1.1.1",
        "@radix-ui/react-use-size": "1.1.1",
        "@radix-ui/rect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-portal": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-portal/-/react-portal-1.1.9.tgz",
      "integrity": "sha512-bpIxvq03if6UNwXZ+HTK71JLh4APvnXntDc6XOX8UVq4XQOVl7lwok0AvIl+b8zgCw3fSaVTZMpAPPagXbKmHQ==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-presence": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-presence/-/react-presence-1.1.5.tgz",
      "integrity": "sha512-/jfEwNDdQVBCNvjkGit4h6pMOzq8bHkopq458dPt2lMjx+eBQUohZNG9A7DtO/O5ukSbxuaNGXMjHicgwy6rQQ==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-primitive": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-primitive/-/react-primitive-2.1.3.tgz",
      "integrity": "sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-slot": "1.2.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-select": {
      "version": "2.2.6",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-select/-/react-select-2.2.6.tgz",
      "integrity": "sha512-I30RydO+bnn2PQztvo25tswPH+wFBjehVGtmagkU78yMdwTwVf12wnAOF+AeP8S2N8xD+5UPbGhkUfPyvT+mwQ==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/number": "1.1.1",
        "@radix-ui/primitive": "1.1.3",
        "@radix-ui/react-collection": "1.1.7",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-direction": "1.1.1",
        "@radix-ui/react-dismissable-layer": "1.1.11",
        "@radix-ui/react-focus-guards": "1.1.3",
        "@radix-ui/react-focus-scope": "1.1.7",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-popper": "1.2.8",
        "@radix-ui/react-portal": "1.1.9",
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-slot": "1.2.3",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-controllable-state": "1.2.2",
        "@radix-ui/react-use-layout-effect": "1.1.1",
        "@radix-ui/react-use-previous": "1.1.1",
        "@radix-ui/react-visually-hidden": "1.2.3",
        "aria-hidden": "^1.2.4",
        "react-remove-scroll": "^2.6.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-slider": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-slider/-/react-slider-1.3.6.tgz",
      "integrity": "sha512-JPYb1GuM1bxfjMRlNLE+BcmBC8onfCi60Blk7OBqi2MLTFdS+8401U4uFjnwkOr49BLmXxLC6JHkvAsx5OJvHw==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/number": "1.1.1",
        "@radix-ui/primitive": "1.1.3",
        "@radix-ui/react-collection": "1.1.7",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-direction": "1.1.1",
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-use-controllable-state": "1.2.2",
        "@radix-ui/react-use-layout-effect": "1.1.1",
        "@radix-ui/react-use-previous": "1.1.1",
        "@radix-ui/react-use-size": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-slot": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-slot/-/react-slot-1.2.3.tgz",
      "integrity": "sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-compose-refs": "1.1.2"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-callback-ref": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-callback-ref/-/react-use-callback-ref-1.1.1.tgz",
      "integrity": "sha512-FkBMwD+qbGQeMu1cOHnuGB6x4yzPjho8ap5WtbEJ26umhgqVXbhekKUQO+hZEL1vU92a3wHwdp0HAcqAUF5iDg==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-controllable-state": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-controllable-state/-/react-use-controllable-state-1.2.2.tgz",
      "integrity": "sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-use-effect-event": "0.0.2",
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-effect-event": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-effect-event/-/react-use-effect-event-0.0.2.tgz",
      "integrity": "sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-escape-keydown": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-escape-keydown/-/react-use-escape-keydown-1.1.1.tgz",
      "integrity": "sha512-Il0+boE7w/XebUHyBjroE+DbByORGR9KKmITzbR7MyQ4akpORYP/ZmbhAr0DG7RmmBqoOnZdy2QlvajJ2QA59g==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-use-callback-ref": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-layout-effect": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-layout-effect/-/react-use-layout-effect-1.1.1.tgz",
      "integrity": "sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-previous": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-previous/-/react-use-previous-1.1.1.tgz",
      "integrity": "sha512-2dHfToCj/pzca2Ck724OZ5L0EVrr3eHRNsG/b3xQJLA2hZpVCS99bLAX+hm1IHXDEnzU6by5z/5MIY794/a8NQ==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-rect": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-rect/-/react-use-rect-1.1.1.tgz",
      "integrity": "sha512-QTYuDesS0VtuHNNvMh+CjlKJ4LJickCMUAqjlE3+j8w+RlRpwyX3apEQKGFzbZGdo7XNG1tXa+bQqIE7HIXT2w==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/rect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-size": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-size/-/react-use-size-1.1.1.tgz",
      "integrity": "sha512-ewrXRDTAqAXlkl6t/fkXWNAhFX9I+CkKlw6zjEwk86RSPKwZr3xpBRso655aqYafwtnbpHLj6toFzmd6xdVptQ==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-visually-hidden": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-visually-hidden/-/react-visually-hidden-1.2.3.tgz",
      "integrity": "sha512-pzJq12tEaaIhqjbzpCuv/OypJY/BPavOofm+dbab+MHLajy277+1lLm6JFcGgF5eskJ6mquGirhXY2GD/8u8Ug==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-primitive": "2.1.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/rect": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/rect/-/rect-1.1.1.tgz",
      "integrity": "sha512-HPwpGIzkl28mWyZqG52jiqDJ12waP11Pa1lGoiyUkIEuMLBP0oeK/C89esbXrxsky5we7dfd8U58nm0SgAWpVw==",
      "license": "MIT"
    },
    "node_modules/@reduxjs/toolkit": {
      "version": "2.9.0",
      "resolved": "https://registry.npmjs.org/@reduxjs/toolkit/-/toolkit-2.9.0.tgz",
      "integrity": "sha512-fSfQlSRu9Z5yBkvsNhYF2rPS8cGXn/TZVrlwN1948QyZ8xMZ0JvP50S2acZNaf+o63u6aEeMjipFyksjIcWrog==",
      "license": "MIT",
      "dependencies": {
        "@standard-schema/spec": "^1.0.0",
        "@standard-schema/utils": "^0.3.0",
        "immer": "^10.0.3",
        "redux": "^5.0.1",
        "redux-thunk": "^3.1.0",
        "reselect": "^5.1.0"
      },
      "peerDependencies": {
        "react": "^16.9.0 || ^17.0.0 || ^18 || ^19",
        "react-redux": "^7.2.1 || ^8.1.3 || ^9.0.0"
      },
      "peerDependenciesMeta": {
        "react": {
          "optional": true
        },
        "react-redux": {
          "optional": true
        }
      }
    },
    "node_modules/@rtsao/scc": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@rtsao/scc/-/scc-1.1.0.tgz",
      "integrity": "sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@rushstack/eslint-patch": {
      "version": "1.12.0",
      "resolved": "https://registry.npmjs.org/@rushstack/eslint-patch/-/eslint-patch-1.12.0.tgz",
      "integrity": "sha512-5EwMtOqvJMMa3HbmxLlF74e+3/HhwBTMcvt3nqVJgGCozO6hzIPOBlwm8mGVNR9SN2IJpxSnlxczyDjcn7qIyw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@standard-schema/spec": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@standard-schema/spec/-/spec-1.0.0.tgz",
      "integrity": "sha512-m2bOd0f2RT9k8QJx1JN85cZYyH1RqFBdlwtkSlf4tBDYLCiiZnv1fIIwacK6cqwXavOydf0NPToMQgpKq+dVlA==",
      "license": "MIT"
    },
    "node_modules/@standard-schema/utils": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/@standard-schema/utils/-/utils-0.3.0.tgz",
      "integrity": "sha512-e7Mew686owMaPJVNNLs55PUvgz371nKgwsc4vxE49zsODpJEnxgxRo2y/OKrqueavXgZNMDVj3DdHFlaSAeU8g==",
      "license": "MIT"
    },
    "node_modules/@swc/helpers": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.2.tgz",
      "integrity": "sha512-E4KcWTpoLHqwPHLxidpOqQbcrZVgi0rsmmZXUle1jXmJfuIf/UWpczUJ7MZZ5tlxytgJXyp0w4PGkkeLiuIdZw==",
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@tootallnate/once": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@tootallnate/once/-/once-2.0.0.tgz",
      "integrity": "sha512-XCuKFP5PS55gnMVu3dty8KPatLqUoy/ZYzDzAGCQ8JNFCkLXzmI7vNHCR+XpbZaMWQK/vQubr7PkYq8g470J/A==",
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tybys/wasm-util": {
      "version": "0.10.1",
      "resolved": "https://registry.npmjs.org/@tybys/wasm-util/-/wasm-util-0.10.1.tgz",
      "integrity": "sha512-9tTaPJLSiejZKx+Bmog4uSubteqTvFrVrURwkmHixBo0G4seD0zUxp98E1DzUBJxLQ3NPwXrGKDiVjwx/DpPsg==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@types/body-parser": {
      "version": "1.19.6",
      "resolved": "https://registry.npmjs.org/@types/body-parser/-/body-parser-1.19.6.tgz",
      "integrity": "sha512-HLFeCYgz89uk22N5Qg3dvGvsv46B8GLvKKo1zKG4NybA8U2DiEO3w9lqGg29t/tfLRJpJ6iQxnVw4OnB7MoM9g==",
      "license": "MIT",
      "dependencies": {
        "@types/connect": "*",
        "@types/node": "*"
      }
    },
    "node_modules/@types/caseless": {
      "version": "0.12.5",
      "resolved": "https://registry.npmjs.org/@types/caseless/-/caseless-0.12.5.tgz",
      "integrity": "sha512-hWtVTC2q7hc7xZ/RLbxapMvDMgUnDvKvMOpKal4DrMyfGBUfB1oKaZlIRr6mJL+If3bAP6sV/QneGzF6tJjZDg==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/@types/connect": {
      "version": "3.4.38",
      "resolved": "https://registry.npmjs.org/@types/connect/-/connect-3.4.38.tgz",
      "integrity": "sha512-K6uROf1LD88uDQqJCktA4yzL1YYAK6NgfsI0v/mTgyPKWsX1CnJ0XPSDhViejru1GcRkLWb8RlzFYJRqGUbaug==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/d3-array": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/@types/d3-array/-/d3-array-3.2.2.tgz",
      "integrity": "sha512-hOLWVbm7uRza0BYXpIIW5pxfrKe0W+D5lrFiAEYR+pb6w3N2SwSMaJbXdUfSEv+dT4MfHBLtn5js0LAWaO6otw==",
      "license": "MIT"
    },
    "node_modules/@types/d3-color": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/@types/d3-color/-/d3-color-3.1.3.tgz",
      "integrity": "sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==",
      "license": "MIT"
    },
    "node_modules/@types/d3-ease": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@types/d3-ease/-/d3-ease-3.0.2.tgz",
      "integrity": "sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==",
      "license": "MIT"
    },
    "node_modules/@types/d3-interpolate": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@types/d3-interpolate/-/d3-interpolate-3.0.4.tgz",
      "integrity": "sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-color": "*"
      }
    },
    "node_modules/@types/d3-path": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/@types/d3-path/-/d3-path-3.1.1.tgz",
      "integrity": "sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg==",
      "license": "MIT"
    },
    "node_modules/@types/d3-scale": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@types/d3-scale/-/d3-scale-4.0.9.tgz",
      "integrity": "sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-time": "*"
      }
    },
    "node_modules/@types/d3-shape": {
      "version": "3.1.7",
      "resolved": "https://registry.npmjs.org/@types/d3-shape/-/d3-shape-3.1.7.tgz",
      "integrity": "sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-path": "*"
      }
    },
    "node_modules/@types/d3-time": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@types/d3-time/-/d3-time-3.0.4.tgz",
      "integrity": "sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==",
      "license": "MIT"
    },
    "node_modules/@types/d3-timer": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@types/d3-timer/-/d3-timer-3.0.2.tgz",
      "integrity": "sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==",
      "license": "MIT"
    },
    "node_modules/@types/debug": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@types/debug/-/debug-4.1.12.tgz",
      "integrity": "sha512-vIChWdVG3LG1SMxEvI/AK+FWJthlrqlTu7fbrlywTkkaONwk/UAGaULXRlf8vkzFBLVm0zkMdCquhL5aOjhXPQ==",
      "license": "MIT",
      "dependencies": {
        "@types/ms": "*"
      }
    },
    "node_modules/@types/eslint": {
      "version": "9.6.1",
      "resolved": "https://registry.npmjs.org/@types/eslint/-/eslint-9.6.1.tgz",
      "integrity": "sha512-FXx2pKgId/WyYo2jXw63kk7/+TY7u7AziEJxJAnSFzHlqTAS3Ync6SvgYAN/k4/PQpnnVuzoMuVnByKK2qp0ag==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/estree": "*",
        "@types/json-schema": "*"
      }
    },
    "node_modules/@types/eslint-scope": {
      "version": "3.7.7",
      "resolved": "https://registry.npmjs.org/@types/eslint-scope/-/eslint-scope-3.7.7.tgz",
      "integrity": "sha512-MzMFlSLBqNF2gcHWO0G1vP/YQyfvrxZ0bF+u7mzUdZ1/xK4A4sru+nraZz5i3iEIk1l1uyicaDVTB4QbbEkAYg==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/eslint": "*",
        "@types/estree": "*"
      }
    },
    "node_modules/@types/estree": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
      "license": "MIT"
    },
    "node_modules/@types/estree-jsx": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/@types/estree-jsx/-/estree-jsx-1.0.5.tgz",
      "integrity": "sha512-52CcUVNFyfb1A2ALocQw/Dd1BQFNmSdkuC3BkZ6iqhdMfQz7JWOFRuJFloOzjk+6WijU56m9oKXFAXc7o3Towg==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "*"
      }
    },
    "node_modules/@types/express": {
      "version": "4.17.23",
      "resolved": "https://registry.npmjs.org/@types/express/-/express-4.17.23.tgz",
      "integrity": "sha512-Crp6WY9aTYP3qPi2wGDo9iUe/rceX01UMhnF1jmwDcKCFM6cx7YhGP/Mpr3y9AASpfHixIG0E6azCcL5OcDHsQ==",
      "license": "MIT",
      "dependencies": {
        "@types/body-parser": "*",
        "@types/express-serve-static-core": "^4.17.33",
        "@types/qs": "*",
        "@types/serve-static": "*"
      }
    },
    "node_modules/@types/express-serve-static-core": {
      "version": "4.19.6",
      "resolved": "https://registry.npmjs.org/@types/express-serve-static-core/-/express-serve-static-core-4.19.6.tgz",
      "integrity": "sha512-N4LZ2xG7DatVqhCZzOGb1Yi5lMbXSZcmdLDe9EzSndPV2HpWYWzRbaerl2n27irrm94EPpprqa8KpskPT085+A==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*",
        "@types/qs": "*",
        "@types/range-parser": "*",
        "@types/send": "*"
      }
    },
    "node_modules/@types/geojson": {
      "version": "7946.0.16",
      "resolved": "https://registry.npmjs.org/@types/geojson/-/geojson-7946.0.16.tgz",
      "integrity": "sha512-6C8nqWur3j98U6+lXDfTUWIfgvZU+EumvpHKcYjujKH7woYyLj2sUmff0tRhrqM7BohUw7Pz3ZB1jj2gW9Fvmg==",
      "license": "MIT"
    },
    "node_modules/@types/geojson-vt": {
      "version": "3.2.5",
      "resolved": "https://registry.npmjs.org/@types/geojson-vt/-/geojson-vt-3.2.5.tgz",
      "integrity": "sha512-qDO7wqtprzlpe8FfQ//ClPV9xiuoh2nkIgiouIptON9w5jvD/fA4szvP9GBlDVdJ5dldAl0kX/sy3URbWwLx0g==",
      "license": "MIT",
      "dependencies": {
        "@types/geojson": "*"
      }
    },
    "node_modules/@types/hast": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@types/hast/-/hast-3.0.4.tgz",
      "integrity": "sha512-WPs+bbQw5aCj+x6laNGWLH3wviHtoCv/P3+otBhbOhJgG8qtpdAMlTCxLtsTWA7LH1Oh/bFCHsBn0TPS5m30EQ==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "*"
      }
    },
    "node_modules/@types/http-errors": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@types/http-errors/-/http-errors-2.0.5.tgz",
      "integrity": "sha512-r8Tayk8HJnX0FztbZN7oVqGccWgw98T/0neJphO91KkmOzug1KkofZURD4UaD5uH8AqcFLfdPErnBod0u71/qg==",
      "license": "MIT"
    },
    "node_modules/@types/json-schema": {
      "version": "7.0.15",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
      "dev": true,
      "license": "MIT",
      "peer": true
    },
    "node_modules/@types/json5": {
      "version": "0.0.29",
      "resolved": "https://registry.npmjs.org/@types/json5/-/json5-0.0.29.tgz",
      "integrity": "sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/jsonwebtoken": {
      "version": "9.0.10",
      "resolved": "https://registry.npmjs.org/@types/jsonwebtoken/-/jsonwebtoken-9.0.10.tgz",
      "integrity": "sha512-asx5hIG9Qmf/1oStypjanR7iKTv0gXQ1Ov/jfrX6kS/EO0OFni8orbmGCn0672NHR3kXHwpAwR+B368ZGN/2rA==",
      "license": "MIT",
      "dependencies": {
        "@types/ms": "*",
        "@types/node": "*"
      }
    },
    "node_modules/@types/leaflet": {
      "version": "1.9.20",
      "resolved": "https://registry.npmjs.org/@types/leaflet/-/leaflet-1.9.20.tgz",
      "integrity": "sha512-rooalPMlk61LCaLOvBF2VIf9M47HgMQqi5xQ9QRi7c8PkdIe0WrIi5IxXUXQjAdL0c+vcQ01mYWbthzmp9GHWw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/geojson": "*"
      }
    },
    "node_modules/@types/long": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/@types/long/-/long-4.0.2.tgz",
      "integrity": "sha512-MqTGEo5bj5t157U6fA/BiDynNkn0YknVdh48CMPkTSpFTVmvao5UQmm7uEF6xBEo7qIMAlY/JSleYaE6VOdpaA==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/@types/mapbox__point-geometry": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/@types/mapbox__point-geometry/-/mapbox__point-geometry-0.1.4.tgz",
      "integrity": "sha512-mUWlSxAmYLfwnRBmgYV86tgYmMIICX4kza8YnE/eIlywGe2XoOxlpVnXWwir92xRLjwyarqwpu2EJKD2pk0IUA==",
      "license": "MIT"
    },
    "node_modules/@types/mapbox-gl": {
      "version": "3.4.1",
      "resolved": "https://registry.npmjs.org/@types/mapbox-gl/-/mapbox-gl-3.4.1.tgz",
      "integrity": "sha512-NsGKKtgW93B+UaLPti6B7NwlxYlES5DpV5Gzj9F75rK5ALKsqSk15CiEHbOnTr09RGbr6ZYiCdI+59NNNcAImg==",
      "license": "MIT",
      "dependencies": {
        "@types/geojson": "*"
      }
    },
    "node_modules/@types/mdast": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@types/mdast/-/mdast-4.0.4.tgz",
      "integrity": "sha512-kGaNbPh1k7AFzgpud/gMdvIm5xuECykRR+JnWKQno9TAXVa6WIVCGTPvYGekIDL4uwCZQSYbUxNBSb1aUo79oA==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "*"
      }
    },
    "node_modules/@types/mime": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/@types/mime/-/mime-1.3.5.tgz",
      "integrity": "sha512-/pyBZWSLD2n0dcHE3hq8s8ZvcETHtEuF+3E7XVt0Ig2nvsVQXdghHVcEkIWjy9A0wKfTn97a/PSDYohKIlnP/w==",
      "license": "MIT"
    },
    "node_modules/@types/ms": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@types/ms/-/ms-2.1.0.tgz",
      "integrity": "sha512-GsCCIZDE/p3i96vtEqx+7dBUGXrc7zeSK3wwPHIaRThS+9OhWIXRqzs4d6k1SVU8g91DrNRWxWUGhp5KXQb2VA==",
      "license": "MIT"
    },
    "node_modules/@types/node": {
      "version": "20.19.17",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-20.19.17.tgz",
      "integrity": "sha512-gfehUI8N1z92kygssiuWvLiwcbOB3IRktR6hTDgJlXMYh5OvkPSRmgfoBUmfZt+vhwJtX7v1Yw4KvvAf7c5QKQ==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~6.21.0"
      }
    },
    "node_modules/@types/pbf": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/@types/pbf/-/pbf-3.0.5.tgz",
      "integrity": "sha512-j3pOPiEcWZ34R6a6mN07mUkM4o4Lwf6hPNt8eilOeZhTFbxFXmKhvXl9Y28jotFPaI1bpPDJsbCprUoNke6OrA==",
      "license": "MIT"
    },
    "node_modules/@types/prop-types": {
      "version": "15.7.15",
      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.15.tgz",
      "integrity": "sha512-F6bEyamV9jKGAFBEmlQnesRPGOQqS2+Uwi0Em15xenOxHaf2hv6L8YCVn3rPdPJOiJfPiCnLIRyvwVaqMY3MIw==",
      "license": "MIT"
    },
    "node_modules/@types/qs": {
      "version": "6.14.0",
      "resolved": "https://registry.npmjs.org/@types/qs/-/qs-6.14.0.tgz",
      "integrity": "sha512-eOunJqu0K1923aExK6y8p6fsihYEn/BYuQ4g0CxAAgFc4b/ZLN4CrsRZ55srTdqoiLzU2B2evC+apEIxprEzkQ==",
      "license": "MIT"
    },
    "node_modules/@types/quill": {
      "version": "1.3.10",
      "resolved": "https://registry.npmjs.org/@types/quill/-/quill-1.3.10.tgz",
      "integrity": "sha512-IhW3fPW+bkt9MLNlycw8u8fWb7oO7W5URC9MfZYHBlA24rex9rs23D5DETChu1zvgVdc5ka64ICjJOgQMr6Shw==",
      "license": "MIT",
      "dependencies": {
        "parchment": "^1.1.2"
      }
    },
    "node_modules/@types/range-parser": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/@types/range-parser/-/range-parser-1.2.7.tgz",
      "integrity": "sha512-hKormJbkJqzQGhziax5PItDUTMAM9uE2XXQmM37dyd4hVM+5aVl7oVxMVUiVQn2oCQFN/LKCZdvSM0pFRqbSmQ==",
      "license": "MIT"
    },
    "node_modules/@types/react": {
      "version": "18.3.25",
      "resolved": "https://registry.npmjs.org/@types/react/-/react-18.3.25.tgz",
      "integrity": "sha512-oSVZmGtDPmRZtVDqvdKUi/qgCsWp5IDY29wp8na8Bj4B3cc99hfNzvNhlMkVVxctkAOGUA3Km7MMpBHAnWfcIA==",
      "license": "MIT",
      "dependencies": {
        "@types/prop-types": "*",
        "csstype": "^3.0.2"
      }
    },
    "node_modules/@types/react-dom": {
      "version": "18.3.7",
      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-18.3.7.tgz",
      "integrity": "sha512-MEe3UeoENYVFXzoXEWsvcpg6ZvlrFNlOQ7EOsvhI3CfAXwzPfO8Qwuxd40nepsYKqyyVQnTdEfv68q91yLcKrQ==",
      "devOptional": true,
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "^18.0.0"
      }
    },
    "node_modules/@types/request": {
      "version": "2.48.13",
      "resolved": "https://registry.npmjs.org/@types/request/-/request-2.48.13.tgz",
      "integrity": "sha512-FGJ6udDNUCjd19pp0Q3iTiDkwhYup7J8hpMW9c4k53NrccQFFWKRho6hvtPPEhnXWKvukfwAlB6DbDz4yhH5Gg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@types/caseless": "*",
        "@types/node": "*",
        "@types/tough-cookie": "*",
        "form-data": "^2.5.5"
      }
    },
    "node_modules/@types/send": {
      "version": "0.17.5",
      "resolved": "https://registry.npmjs.org/@types/send/-/send-0.17.5.tgz",
      "integrity": "sha512-z6F2D3cOStZvuk2SaP6YrwkNO65iTZcwA2ZkSABegdkAh/lf+Aa/YQndZVfmEXT5vgAp6zv06VQ3ejSVjAny4w==",
      "license": "MIT",
      "dependencies": {
        "@types/mime": "^1",
        "@types/node": "*"
      }
    },
    "node_modules/@types/serve-static": {
      "version": "1.15.8",
      "resolved": "https://registry.npmjs.org/@types/serve-static/-/serve-static-1.15.8.tgz",
      "integrity": "sha512-roei0UY3LhpOJvjbIP6ZZFngyLKl5dskOtDhxY5THRSpO+ZI+nzJ+m5yUMzGrp89YRa7lvknKkMYjqQFGwA7Sg==",
      "license": "MIT",
      "dependencies": {
        "@types/http-errors": "*",
        "@types/node": "*",
        "@types/send": "*"
      }
    },
    "node_modules/@types/supercluster": {
      "version": "7.1.3",
      "resolved": "https://registry.npmjs.org/@types/supercluster/-/supercluster-7.1.3.tgz",
      "integrity": "sha512-Z0pOY34GDFl3Q6hUFYf3HkTwKEE02e7QgtJppBt+beEAxnyOpJua+voGFvxINBHa06GwLFFym7gRPY2SiKIfIA==",
      "license": "MIT",
      "dependencies": {
        "@types/geojson": "*"
      }
    },
    "node_modules/@types/tough-cookie": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/@types/tough-cookie/-/tough-cookie-4.0.5.tgz",
      "integrity": "sha512-/Ad8+nIOV7Rl++6f1BdKxFSMgmoqEoYbHRpPcx3JEfv8VRsQe9Z4mCXeJBzxs7mbHY/XOZZuXlRNfhpVPbs6ZA==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/@types/unist": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/@types/unist/-/unist-3.0.3.tgz",
      "integrity": "sha512-ko/gIFJRv177XgZsZcBwnqJN5x/Gien8qNOn0D5bQU/zAzVf9Zt3BlcUiLqhV9y4ARk0GbT3tnUiPNgnTXzc/Q==",
      "license": "MIT"
    },
    "node_modules/@types/use-sync-external-store": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/@types/use-sync-external-store/-/use-sync-external-store-0.0.6.tgz",
      "integrity": "sha512-zFDAD+tlpf2r4asuHEj0XH6pY6i0g5NeAHPn+15wk3BV6JA69eERFXC1gyGThDkVa1zCyKr5jox1+2LbV/AMLg==",
      "license": "MIT"
    },
    "node_modules/@typescript-eslint/parser": {
      "version": "6.21.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz",
      "integrity": "sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "@typescript-eslint/scope-manager": "6.21.0",
        "@typescript-eslint/types": "6.21.0",
        "@typescript-eslint/typescript-estree": "6.21.0",
        "@typescript-eslint/visitor-keys": "6.21.0",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": "^16.0.0 || >=18.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^7.0.0 || ^8.0.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@typescript-eslint/scope-manager": {
      "version": "6.21.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-6.21.0.tgz",
      "integrity": "sha512-OwLUIWZJry80O99zvqXVEioyniJMa+d2GrqpUTqi5/v5D5rOrppJVBPa0yKCblcigC0/aYAzxxqQ1B+DS2RYsg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/types": "6.21.0",
        "@typescript-eslint/visitor-keys": "6.21.0"
      },
      "engines": {
        "node": "^16.0.0 || >=18.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/types": {
      "version": "6.21.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-6.21.0.tgz",
      "integrity": "sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^16.0.0 || >=18.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree": {
      "version": "6.21.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-6.21.0.tgz",
      "integrity": "sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "@typescript-eslint/types": "6.21.0",
        "@typescript-eslint/visitor-keys": "6.21.0",
        "debug": "^4.3.4",
        "globby": "^11.1.0",
        "is-glob": "^4.0.3",
        "minimatch": "9.0.3",
        "semver": "^7.5.4",
        "ts-api-utils": "^1.0.1"
      },
      "engines": {
        "node": "^16.0.0 || >=18.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@typescript-eslint/typescript-estree/node_modules/brace-expansion": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch": {
      "version": "9.0.3",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz",
      "integrity": "sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/@typescript-eslint/visitor-keys": {
      "version": "6.21.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-6.21.0.tgz",
      "integrity": "sha512-JJtkDduxLi9bivAB+cYOVMtbkqdPOhZ+ZI5LC47MIRrDV4Yn2o+ZnW10Nkmr28xRpSpdJ6Sm42Hjf2+REYXm0A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/types": "6.21.0",
        "eslint-visitor-keys": "^3.4.1"
      },
      "engines": {
        "node": "^16.0.0 || >=18.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@ungap/structured-clone": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.3.0.tgz",
      "integrity": "sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==",
      "license": "ISC"
    },
    "node_modules/@unrs/resolver-binding-android-arm-eabi": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-android-arm-eabi/-/resolver-binding-android-arm-eabi-1.11.1.tgz",
      "integrity": "sha512-ppLRUgHVaGRWUx0R0Ut06Mjo9gBaBkg3v/8AxusGLhsIotbBLuRk51rAzqLC8gq6NyyAojEXglNjzf6R948DNw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@unrs/resolver-binding-android-arm64": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-android-arm64/-/resolver-binding-android-arm64-1.11.1.tgz",
      "integrity": "sha512-lCxkVtb4wp1v+EoN+HjIG9cIIzPkX5OtM03pQYkG+U5O/wL53LC4QbIeazgiKqluGeVEeBlZahHalCaBvU1a2g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@unrs/resolver-binding-darwin-arm64": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-darwin-arm64/-/resolver-binding-darwin-arm64-1.11.1.tgz",
      "integrity": "sha512-gPVA1UjRu1Y/IsB/dQEsp2V1pm44Of6+LWvbLc9SDk1c2KhhDRDBUkQCYVWe6f26uJb3fOK8saWMgtX8IrMk3g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@unrs/resolver-binding-darwin-x64": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-darwin-x64/-/resolver-binding-darwin-x64-1.11.1.tgz",
      "integrity": "sha512-cFzP7rWKd3lZaCsDze07QX1SC24lO8mPty9vdP+YVa3MGdVgPmFc59317b2ioXtgCMKGiCLxJ4HQs62oz6GfRQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@unrs/resolver-binding-freebsd-x64": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-freebsd-x64/-/resolver-binding-freebsd-x64-1.11.1.tgz",
      "integrity": "sha512-fqtGgak3zX4DCB6PFpsH5+Kmt/8CIi4Bry4rb1ho6Av2QHTREM+47y282Uqiu3ZRF5IQioJQ5qWRV6jduA+iGw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-arm-gnueabihf": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm-gnueabihf/-/resolver-binding-linux-arm-gnueabihf-1.11.1.tgz",
      "integrity": "sha512-u92mvlcYtp9MRKmP+ZvMmtPN34+/3lMHlyMj7wXJDeXxuM0Vgzz0+PPJNsro1m3IZPYChIkn944wW8TYgGKFHw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-arm-musleabihf": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm-musleabihf/-/resolver-binding-linux-arm-musleabihf-1.11.1.tgz",
      "integrity": "sha512-cINaoY2z7LVCrfHkIcmvj7osTOtm6VVT16b5oQdS4beibX2SYBwgYLmqhBjA1t51CarSaBuX5YNsWLjsqfW5Cw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-arm64-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm64-gnu/-/resolver-binding-linux-arm64-gnu-1.11.1.tgz",
      "integrity": "sha512-34gw7PjDGB9JgePJEmhEqBhWvCiiWCuXsL9hYphDF7crW7UgI05gyBAi6MF58uGcMOiOqSJ2ybEeCvHcq0BCmQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-arm64-musl": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm64-musl/-/resolver-binding-linux-arm64-musl-1.11.1.tgz",
      "integrity": "sha512-RyMIx6Uf53hhOtJDIamSbTskA99sPHS96wxVE/bJtePJJtpdKGXO1wY90oRdXuYOGOTuqjT8ACccMc4K6QmT3w==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-ppc64-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-ppc64-gnu/-/resolver-binding-linux-ppc64-gnu-1.11.1.tgz",
      "integrity": "sha512-D8Vae74A4/a+mZH0FbOkFJL9DSK2R6TFPC9M+jCWYia/q2einCubX10pecpDiTmkJVUH+y8K3BZClycD8nCShA==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-riscv64-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-riscv64-gnu/-/resolver-binding-linux-riscv64-gnu-1.11.1.tgz",
      "integrity": "sha512-frxL4OrzOWVVsOc96+V3aqTIQl1O2TjgExV4EKgRY09AJ9leZpEg8Ak9phadbuX0BA4k8U5qtvMSQQGGmaJqcQ==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-riscv64-musl": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-riscv64-musl/-/resolver-binding-linux-riscv64-musl-1.11.1.tgz",
      "integrity": "sha512-mJ5vuDaIZ+l/acv01sHoXfpnyrNKOk/3aDoEdLO/Xtn9HuZlDD6jKxHlkN8ZhWyLJsRBxfv9GYM2utQ1SChKew==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-s390x-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-s390x-gnu/-/resolver-binding-linux-s390x-gnu-1.11.1.tgz",
      "integrity": "sha512-kELo8ebBVtb9sA7rMe1Cph4QHreByhaZ2QEADd9NzIQsYNQpt9UkM9iqr2lhGr5afh885d/cB5QeTXSbZHTYPg==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-x64-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-x64-gnu/-/resolver-binding-linux-x64-gnu-1.11.1.tgz",
      "integrity": "sha512-C3ZAHugKgovV5YvAMsxhq0gtXuwESUKc5MhEtjBpLoHPLYM+iuwSj3lflFwK3DPm68660rZ7G8BMcwSro7hD5w==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-x64-musl": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-x64-musl/-/resolver-binding-linux-x64-musl-1.11.1.tgz",
      "integrity": "sha512-rV0YSoyhK2nZ4vEswT/QwqzqQXw5I6CjoaYMOX0TqBlWhojUf8P94mvI7nuJTeaCkkds3QE4+zS8Ko+GdXuZtA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-wasm32-wasi": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-wasm32-wasi/-/resolver-binding-wasm32-wasi-1.11.1.tgz",
      "integrity": "sha512-5u4RkfxJm+Ng7IWgkzi3qrFOvLvQYnPBmjmZQ8+szTK/b31fQCnleNl1GgEt7nIsZRIf5PLhPwT0WM+q45x/UQ==",
      "cpu": [
        "wasm32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@napi-rs/wasm-runtime": "^0.2.11"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@unrs/resolver-binding-win32-arm64-msvc": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-arm64-msvc/-/resolver-binding-win32-arm64-msvc-1.11.1.tgz",
      "integrity": "sha512-nRcz5Il4ln0kMhfL8S3hLkxI85BXs3o8EYoattsJNdsX4YUU89iOkVn7g0VHSRxFuVMdM4Q1jEpIId1Ihim/Uw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@unrs/resolver-binding-win32-ia32-msvc": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-ia32-msvc/-/resolver-binding-win32-ia32-msvc-1.11.1.tgz",
      "integrity": "sha512-DCEI6t5i1NmAZp6pFonpD5m7i6aFrpofcp4LA2i8IIq60Jyo28hamKBxNrZcyOwVOZkgsRp9O2sXWBWP8MnvIQ==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@unrs/resolver-binding-win32-x64-msvc": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-x64-msvc/-/resolver-binding-win32-x64-msvc-1.11.1.tgz",
      "integrity": "sha512-lrW200hZdbfRtztbygyaq/6jP6AKE8qQN2KvPcJ+x7wiD038YtnYtZ82IMNJ69GJibV7bwL3y9FgK+5w/pYt6g==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@upstash/redis": {
      "version": "1.35.4",
      "resolved": "https://registry.npmjs.org/@upstash/redis/-/redis-1.35.4.tgz",
      "integrity": "sha512-WE1ZnhFyBiIjTDW13GbO6JjkiMVVjw5VsvS8ENmvvJsze/caMQ5paxVD44+U68IUVmkXcbsLSoE+VIYsHtbQEw==",
      "license": "MIT",
      "dependencies": {
        "uncrypto": "^0.1.3"
      }
    },
    "node_modules/@vercel/kv": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@vercel/kv/-/kv-3.0.0.tgz",
      "integrity": "sha512-pKT8fRnfyYk2MgvyB6fn6ipJPCdfZwiKDdw7vB+HL50rjboEBHDVBEcnwfkEpVSp2AjNtoaOUH7zG+bVC/rvSg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@upstash/redis": "^1.34.0"
      },
      "engines": {
        "node": ">=14.6"
      }
    },
    "node_modules/@webassemblyjs/ast": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.14.1.tgz",
      "integrity": "sha512-nuBEDgQfm1ccRp/8bCQrx1frohyufl4JlbMMZ4P1wpeOfDhF6FQkxZJ1b/e+PLwr6X1Nhw6OLme5usuBWYBvuQ==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/helper-numbers": "1.13.2",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2"
      }
    },
    "node_modules/@webassemblyjs/floating-point-hex-parser": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.13.2.tgz",
      "integrity": "sha512-6oXyTOzbKxGH4steLbLNOu71Oj+C8Lg34n6CqRvqfS2O71BxY6ByfMDRhBytzknj9yGUPVJ1qIKhRlAwO1AovA==",
      "dev": true,
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/helper-api-error": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-api-error/-/helper-api-error-1.13.2.tgz",
      "integrity": "sha512-U56GMYxy4ZQCbDZd6JuvvNV/WFildOjsaWD3Tzzvmw/mas3cXzRJPMjP83JqEsgSbyrmaGjBfDtV7KDXV9UzFQ==",
      "dev": true,
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/helper-buffer": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-buffer/-/helper-buffer-1.14.1.tgz",
      "integrity": "sha512-jyH7wtcHiKssDtFPRB+iQdxlDf96m0E39yb0k5uJVhFGleZFoNw1c4aeIcVUPPbXUVJ94wwnMOAqUHyzoEPVMA==",
      "dev": true,
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/helper-numbers": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-numbers/-/helper-numbers-1.13.2.tgz",
      "integrity": "sha512-FE8aCmS5Q6eQYcV3gI35O4J789wlQA+7JrqTTpJqn5emA4U2hvwJmvFRC0HODS+3Ye6WioDklgd6scJ3+PLnEA==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/floating-point-hex-parser": "1.13.2",
        "@webassemblyjs/helper-api-error": "1.13.2",
        "@xtuc/long": "4.2.2"
      }
    },
    "node_modules/@webassemblyjs/helper-wasm-bytecode": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-bytecode/-/helper-wasm-bytecode-1.13.2.tgz",
      "integrity": "sha512-3QbLKy93F0EAIXLh0ogEVR6rOubA9AoZ+WRYhNbFyuB70j3dRdwH9g+qXhLAO0kiYGlg3TxDV+I4rQTr/YNXkA==",
      "dev": true,
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/helper-wasm-section": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-section/-/helper-wasm-section-1.14.1.tgz",
      "integrity": "sha512-ds5mXEqTJ6oxRoqjhWDU83OgzAYjwsCV8Lo/N+oRsNDmx/ZDpqalmrtgOMkHwxsG0iI//3BwWAErYRHtgn0dZw==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-buffer": "1.14.1",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2",
        "@webassemblyjs/wasm-gen": "1.14.1"
      }
    },
    "node_modules/@webassemblyjs/ieee754": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/ieee754/-/ieee754-1.13.2.tgz",
      "integrity": "sha512-4LtOzh58S/5lX4ITKxnAK2USuNEvpdVV9AlgGQb8rJDHaLeHciwG4zlGr0j/SNWlr7x3vO1lDEsuePvtcDNCkw==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@xtuc/ieee754": "^1.2.0"
      }
    },
    "node_modules/@webassemblyjs/leb128": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/leb128/-/leb128-1.13.2.tgz",
      "integrity": "sha512-Lde1oNoIdzVzdkNEAWZ1dZ5orIbff80YPdHx20mrHwHrVNNTjNr8E3xz9BdpcGqRQbAEa+fkrCb+fRFTl/6sQw==",
      "dev": true,
      "license": "Apache-2.0",
      "peer": true,
      "dependencies": {
        "@xtuc/long": "4.2.2"
      }
    },
    "node_modules/@webassemblyjs/utf8": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/utf8/-/utf8-1.13.2.tgz",
      "integrity": "sha512-3NQWGjKTASY1xV5m7Hr0iPeXD9+RDobLll3T9d2AO+g3my8xy5peVyjSag4I50mR1bBSN/Ct12lo+R9tJk0NZQ==",
      "dev": true,
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/wasm-edit": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.14.1.tgz",
      "integrity": "sha512-RNJUIQH/J8iA/1NzlE4N7KtyZNHi3w7at7hDjvRNm5rcUXa00z1vRz3glZoULfJ5mpvYhLybmVcwcjGrC1pRrQ==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-buffer": "1.14.1",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2",
        "@webassemblyjs/helper-wasm-section": "1.14.1",
        "@webassemblyjs/wasm-gen": "1.14.1",
        "@webassemblyjs/wasm-opt": "1.14.1",
        "@webassemblyjs/wasm-parser": "1.14.1",
        "@webassemblyjs/wast-printer": "1.14.1"
      }
    },
    "node_modules/@webassemblyjs/wasm-gen": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-gen/-/wasm-gen-1.14.1.tgz",
      "integrity": "sha512-AmomSIjP8ZbfGQhumkNvgC33AY7qtMCXnN6bL2u2Js4gVCg8fp735aEiMSBbDR7UQIj90n4wKAFUSEd0QN2Ukg==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2",
        "@webassemblyjs/ieee754": "1.13.2",
        "@webassemblyjs/leb128": "1.13.2",
        "@webassemblyjs/utf8": "1.13.2"
      }
    },
    "node_modules/@webassemblyjs/wasm-opt": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-opt/-/wasm-opt-1.14.1.tgz",
      "integrity": "sha512-PTcKLUNvBqnY2U6E5bdOQcSM+oVP/PmrDY9NzowJjislEjwP/C4an2303MCVS2Mg9d3AJpIGdUFIQQWbPds0Sw==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-buffer": "1.14.1",
        "@webassemblyjs/wasm-gen": "1.14.1",
        "@webassemblyjs/wasm-parser": "1.14.1"
      }
    },
    "node_modules/@webassemblyjs/wasm-parser": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-parser/-/wasm-parser-1.14.1.tgz",
      "integrity": "sha512-JLBl+KZ0R5qB7mCnud/yyX08jWFw5MsoalJ1pQ4EdFlgj9VdXKGuENGsiCIjegI1W7p91rUlcB/LB5yRJKNTcQ==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-api-error": "1.13.2",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2",
        "@webassemblyjs/ieee754": "1.13.2",
        "@webassemblyjs/leb128": "1.13.2",
        "@webassemblyjs/utf8": "1.13.2"
      }
    },
    "node_modules/@webassemblyjs/wast-printer": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wast-printer/-/wast-printer-1.14.1.tgz",
      "integrity": "sha512-kPSSXE6De1XOR820C90RIo2ogvZG+c3KiHzqUoO/F34Y2shGzesfqv7o57xrxovZJH/MetF5UjroJ/R/3isoiw==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@xtuc/long": "4.2.2"
      }
    },
    "node_modules/@xtuc/ieee754": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@xtuc/ieee754/-/ieee754-1.2.0.tgz",
      "integrity": "sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==",
      "dev": true,
      "license": "BSD-3-Clause",
      "peer": true
    },
    "node_modules/@xtuc/long": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/@xtuc/long/-/long-4.2.2.tgz",
      "integrity": "sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ==",
      "dev": true,
      "license": "Apache-2.0",
      "peer": true
    },
    "node_modules/abort-controller": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/abort-controller/-/abort-controller-3.0.0.tgz",
      "integrity": "sha512-h8lQ8tacZYnR3vNQTgibj+tODHI5/+l06Au2Pcriv/Gmet0eaj4TwWH41sO9wnHDiQsEj19q0drzdWdeAHtweg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "event-target-shim": "^5.0.0"
      },
      "engines": {
        "node": ">=6.5"
      }
    },
    "node_modules/acorn": {
      "version": "8.15.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
      "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-import-phases": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/acorn-import-phases/-/acorn-import-phases-1.0.4.tgz",
      "integrity": "sha512-wKmbr/DDiIXzEOiWrTTUcDm24kQ2vGfZQvM2fwg2vXqR5uW6aapr7ObPtj1th32b9u90/Pf4AItvdTh42fBmVQ==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=10.13.0"
      },
      "peerDependencies": {
        "acorn": "^8.14.0"
      }
    },
    "node_modules/acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
      }
    },
    "node_modules/agent-base": {
      "version": "7.1.4",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-7.1.4.tgz",
      "integrity": "sha512-MnA+YT8fwfJPgBx3m60MNqakm30XOkyIoH1y6huTQvC0PwZG7ki8NacLBcrPbNoo8vEZy7Jpuk7+jMO+CUovTQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ajv-formats": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/ajv-formats/-/ajv-formats-2.1.1.tgz",
      "integrity": "sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "ajv": "^8.0.0"
      },
      "peerDependencies": {
        "ajv": "^8.0.0"
      },
      "peerDependenciesMeta": {
        "ajv": {
          "optional": true
        }
      }
    },
    "node_modules/ajv-formats/node_modules/ajv": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz",
      "integrity": "sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "fast-deep-equal": "^3.1.3",
        "fast-uri": "^3.0.1",
        "json-schema-traverse": "^1.0.0",
        "require-from-string": "^2.0.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ajv-formats/node_modules/json-schema-traverse": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz",
      "integrity": "sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==",
      "dev": true,
      "license": "MIT",
      "peer": true
    },
    "node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/any-promise": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
      "integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/anymatch/node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/arg": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
      "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "dev": true,
      "license": "Python-2.0"
    },
    "node_modules/aria-hidden": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/aria-hidden/-/aria-hidden-1.2.6.tgz",
      "integrity": "sha512-ik3ZgC9dY/lYVVM++OISsaYDeg1tb0VtP5uL3ouh1koGOaUMDPpbFIei4JkFimWUFPn90sbMNMXQAIVOlnYKJA==",
      "license": "MIT",
      "dependencies": {
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/aria-query": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/aria-query/-/aria-query-5.3.2.tgz",
      "integrity": "sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/arr-union": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz",
      "integrity": "sha512-sKpyeERZ02v1FeCZT8lrfJq5u6goHCtpTAzPwJYe7c8SPFOboNjNg1vz2L4VTn9T4PQxEx13TbXLmYUcS6Ug7Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/array-buffer-byte-length": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.2.tgz",
      "integrity": "sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "is-array-buffer": "^3.0.5"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array-includes": {
      "version": "3.1.9",
      "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.1.9.tgz",
      "integrity": "sha512-FmeCCAenzH0KH381SPT5FZmiA/TmpndpcaShhfgEN9eCVjnFBqq3l1xrI42y8+PPLI6hypzou4GXw00WHmPBLQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.24.0",
        "es-object-atoms": "^1.1.1",
        "get-intrinsic": "^1.3.0",
        "is-string": "^1.1.1",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array-union": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
      "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/array.prototype.findlast": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/array.prototype.findlast/-/array.prototype.findlast-1.2.5.tgz",
      "integrity": "sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.findlastindex": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/array.prototype.findlastindex/-/array.prototype.findlastindex-1.2.6.tgz",
      "integrity": "sha512-F/TKATkzseUExPlfvmwQKGITM3DGTK+vkAsCZoDc5daVygbJBnjEUCbgkAvVFsgfXfX4YIqZ/27G3k3tdXrTxQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.9",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "es-shim-unscopables": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.flat": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.3.tgz",
      "integrity": "sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.flatmap": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.3.tgz",
      "integrity": "sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.tosorted": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.4.tgz",
      "integrity": "sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.3",
        "es-errors": "^1.3.0",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/arraybuffer.prototype.slice": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.4.tgz",
      "integrity": "sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-buffer-byte-length": "^1.0.1",
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "is-array-buffer": "^3.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/arrify": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/arrify/-/arrify-2.0.1.tgz",
      "integrity": "sha512-3duEwti880xqi4eAMN8AyR4a0ByT90zoYdLlevfrvU43vb0YZwZVfxOgxWrLXXXpyugL0hNZc9G6BiB5B3nUug==",
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/assign-symbols": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/assign-symbols/-/assign-symbols-1.0.0.tgz",
      "integrity": "sha512-Q+JC7Whu8HhmTdBph/Tq59IoRtoy6KAm5zzPv00WdujX82lbAL8K7WVjne7vdCsAmbF4AYaDOPyO3k0kl8qIrw==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/ast-types-flow": {
      "version": "0.0.8",
      "resolved": "https://registry.npmjs.org/ast-types-flow/-/ast-types-flow-0.0.8.tgz",
      "integrity": "sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/async-function": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/async-function/-/async-function-1.0.0.tgz",
      "integrity": "sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/async-retry": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/async-retry/-/async-retry-1.3.3.tgz",
      "integrity": "sha512-wfr/jstw9xNi/0teMHrRW7dsz3Lt5ARhYNZ2ewpadnhaIp5mbALhOAP+EAdsC7t4Z6wqsDVv9+W6gm1Dk9mEyw==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "retry": "0.13.1"
      }
    },
    "node_modules/asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/autoprefixer": {
      "version": "10.4.21",
      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.21.tgz",
      "integrity": "sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/autoprefixer"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "browserslist": "^4.24.4",
        "caniuse-lite": "^1.0.30001702",
        "fraction.js": "^4.3.7",
        "normalize-range": "^0.1.2",
        "picocolors": "^1.1.1",
        "postcss-value-parser": "^4.2.0"
      },
      "bin": {
        "autoprefixer": "bin/autoprefixer"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      },
      "peerDependencies": {
        "postcss": "^8.1.0"
      }
    },
    "node_modules/available-typed-arrays": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
      "integrity": "sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "possible-typed-array-names": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/axe-core": {
      "version": "4.10.3",
      "resolved": "https://registry.npmjs.org/axe-core/-/axe-core-4.10.3.tgz",
      "integrity": "sha512-Xm7bpRXnDSX2YE2YFfBk2FnF0ep6tmG7xPh8iHee8MIcrgq762Nkce856dYtJYLkuIoYZvGfTs/PbZhideTcEg==",
      "dev": true,
      "license": "MPL-2.0",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/axobject-query": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/axobject-query/-/axobject-query-4.1.0.tgz",
      "integrity": "sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/babel-loader": {
      "version": "10.0.0",
      "resolved": "https://registry.npmjs.org/babel-loader/-/babel-loader-10.0.0.tgz",
      "integrity": "sha512-z8jt+EdS61AMw22nSfoNJAZ0vrtmhPRVi6ghL3rCeRZI8cdNYFiV5xeV3HbE7rlZZNmGH8BVccwWt8/ED0QOHA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "find-up": "^5.0.0"
      },
      "engines": {
        "node": "^18.20.0 || ^20.10.0 || >=22.0.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.12.0",
        "webpack": ">=5.61.0"
      }
    },
    "node_modules/babel-plugin-polyfill-corejs2": {
      "version": "0.4.14",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.4.14.tgz",
      "integrity": "sha512-Co2Y9wX854ts6U8gAAPXfn0GmAyctHuK8n0Yhfjd6t30g7yvKjspvvOo9yG+z52PZRgFErt7Ka2pYnXCjLKEpg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/compat-data": "^7.27.7",
        "@babel/helper-define-polyfill-provider": "^0.6.5",
        "semver": "^6.3.1"
      },
      "peerDependencies": {
        "@babel/core": "^7.4.0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/babel-plugin-polyfill-corejs2/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/babel-plugin-polyfill-corejs3": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.13.0.tgz",
      "integrity": "sha512-U+GNwMdSFgzVmfhNm8GJUX88AadB3uo9KpJqS3FaqNIPKgySuvMb+bHPsOmmuWyIcuqZj/pzt1RUIUZns4y2+A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-define-polyfill-provider": "^0.6.5",
        "core-js-compat": "^3.43.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.4.0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/babel-plugin-polyfill-regenerator": {
      "version": "0.6.5",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.6.5.tgz",
      "integrity": "sha512-ISqQ2frbiNU9vIJkzg7dlPpznPZ4jOiUQ1uSmB0fEHeowtN3COYRsXr/xexn64NpU13P06jc/L5TgiJXOgrbEg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-define-polyfill-provider": "^0.6.5"
      },
      "peerDependencies": {
        "@babel/core": "^7.4.0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/bail": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/bail/-/bail-2.0.2.tgz",
      "integrity": "sha512-0xO6mYd7JB2YesxDKplafRpsiOzPt9V02ddPCLbY1xYGPOX24NTyN50qnUxgCPcSoYMhKpAuBTjQoRZCAkUDRw==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/baseline-browser-mapping": {
      "version": "2.8.9",
      "resolved": "https://registry.npmjs.org/baseline-browser-mapping/-/baseline-browser-mapping-2.8.9.tgz",
      "integrity": "sha512-hY/u2lxLrbecMEWSB0IpGzGyDyeoMFQhCvZd2jGFSE5I17Fh01sYUBPCJtkWERw7zrac9+cIghxm/ytJa2X8iA==",
      "dev": true,
      "license": "Apache-2.0",
      "bin": {
        "baseline-browser-mapping": "dist/cli.js"
      }
    },
    "node_modules/bignumber.js": {
      "version": "9.3.1",
      "resolved": "https://registry.npmjs.org/bignumber.js/-/bignumber.js-9.3.1.tgz",
      "integrity": "sha512-Ko0uX15oIUS7wJ3Rb30Fs6SkVbLmPBAKdlm7q9+ak9bbIeFf0MwuBsQV6z7+X768/cHsfg+WlysDWJcmthjsjQ==",
      "license": "MIT",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/binary-extensions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/browserslist": {
      "version": "4.26.2",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.26.2.tgz",
      "integrity": "sha512-ECFzp6uFOSB+dcZ5BK/IBaGWssbSYBHvuMeMt3MMFyhI0Z8SqGgEkBLARgpRH3hutIgPVsALcMwbDrJqPxQ65A==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "baseline-browser-mapping": "^2.8.3",
        "caniuse-lite": "^1.0.30001741",
        "electron-to-chromium": "^1.5.218",
        "node-releases": "^2.0.21",
        "update-browserslist-db": "^1.1.3"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/buffer-equal-constant-time": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz",
      "integrity": "sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
      "dev": true,
      "license": "MIT",
      "peer": true
    },
    "node_modules/busboy": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/busboy/-/busboy-1.6.0.tgz",
      "integrity": "sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==",
      "dependencies": {
        "streamsearch": "^1.1.0"
      },
      "engines": {
        "node": ">=10.16.0"
      }
    },
    "node_modules/bytewise": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/bytewise/-/bytewise-1.1.0.tgz",
      "integrity": "sha512-rHuuseJ9iQ0na6UDhnrRVDh8YnWVlU6xM3VH6q/+yHDeUH2zIhUzP+2/h3LIrhLDBtTqzWpE3p3tP/boefskKQ==",
      "license": "MIT",
      "dependencies": {
        "bytewise-core": "^1.2.2",
        "typewise": "^1.0.3"
      }
    },
    "node_modules/bytewise-core": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/bytewise-core/-/bytewise-core-1.2.3.tgz",
      "integrity": "sha512-nZD//kc78OOxeYtRlVk8/zXqTB4gf/nlguL1ggWA8FuchMyOxcyHR4QPQZMUmA7czC+YnaBrPUCubqAWe50DaA==",
      "license": "MIT",
      "dependencies": {
        "typewise-core": "^1.2"
      }
    },
    "node_modules/call-bind": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz",
      "integrity": "sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.0",
        "es-define-property": "^1.0.0",
        "get-intrinsic": "^1.2.4",
        "set-function-length": "^1.2.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/call-bound": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
      "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "get-intrinsic": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/camelcase-css": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
      "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001745",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001745.tgz",
      "integrity": "sha512-ywt6i8FzvdgrrrGbr1jZVObnVv6adj+0if2/omv9cmR2oiZs30zL4DIyaptKcbOrBdOIc74QTMoJvSE2QHh5UQ==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "CC-BY-4.0"
    },
    "node_modules/ccount": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/ccount/-/ccount-2.0.1.tgz",
      "integrity": "sha512-eyrF0jiFpY+3drT6383f1qhkbGsLSifNAjA61IUjZjmLCWjItY6LB9ft9YhoDgwfmclB2zhu51Lc7+95b8NRAg==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/character-entities": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/character-entities/-/character-entities-2.0.2.tgz",
      "integrity": "sha512-shx7oQ0Awen/BRIdkjkvz54PnEEI/EjwXDSIZp86/KKdbafHh1Df/RYGBhn4hbe2+uKC9FnT5UCEdyPz3ai9hQ==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/character-entities-html4": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/character-entities-html4/-/character-entities-html4-2.1.0.tgz",
      "integrity": "sha512-1v7fgQRj6hnSwFpq1Eu0ynr/CDEw0rXo2B61qXrLNdHZmPKgb7fqS1a2JwF0rISo9q77jDI8VMEHoApn8qDoZA==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/character-entities-legacy": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/character-entities-legacy/-/character-entities-legacy-3.0.0.tgz",
      "integrity": "sha512-RpPp0asT/6ufRm//AJVwpViZbGM/MkjQFxJccQRHmISF/22NBtsHqAWmL+/pmkPWoIUJdWyeVleTl1wydHATVQ==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/character-reference-invalid": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/character-reference-invalid/-/character-reference-invalid-2.0.1.tgz",
      "integrity": "sha512-iBZ4F4wRbyORVsu0jPV7gXkOsGYjGHPmAyv+HiHG8gi5PtC9KI2j1+v8/tlibRvjoWX027ypmG/n0HtO5t7unw==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/cheap-ruler": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/cheap-ruler/-/cheap-ruler-4.0.0.tgz",
      "integrity": "sha512-0BJa8f4t141BYKQyn9NSQt1PguFQXMXwZiA5shfoaBYHAb2fFk2RAX+tiWMoQU+Agtzt3mdt0JtuyshAXqZ+Vw==",
      "license": "ISC"
    },
    "node_modules/chokidar": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/chokidar/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/chrome-trace-event": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.4.tgz",
      "integrity": "sha512-rNjApaLzuwaOTjCiT8lSDdGN1APCiqkChLMJxJPWLunPAt5fy8xgU9/jNOchV84wfIxrA0lRQB7oCT8jrn/wrQ==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=6.0"
      }
    },
    "node_modules/class-variance-authority": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/class-variance-authority/-/class-variance-authority-0.4.0.tgz",
      "integrity": "sha512-74enNN8O9ZNieycac/y8FxqgyzZhZbxmCitAtAeUrLPlxjSd5zA7LfpprmxEcOmQBnaGs5hYhiSGnJ0mqrtBLQ==",
      "funding": {
        "url": "https://joebell.co.uk"
      },
      "peerDependencies": {
        "typescript": ">= 4.5.5 < 5"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/client-only": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/client-only/-/client-only-0.0.1.tgz",
      "integrity": "sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==",
      "license": "MIT"
    },
    "node_modules/cliui": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.1",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/clone": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
      "integrity": "sha512-3Pe/CF1Nn94hyhIYpjtiLhdCoEoz0DqQ+988E9gmeEdQZlojxnOb74wctFyuwWQHzqyf9X7C7MG8juUpqBJT8w==",
      "license": "MIT",
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/clsx": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz",
      "integrity": "sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "license": "MIT"
    },
    "node_modules/combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "delayed-stream": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/comma-separated-tokens": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/comma-separated-tokens/-/comma-separated-tokens-2.0.3.tgz",
      "integrity": "sha512-Fu4hJdvzeylCfQPp9SGWidpzrMs7tTrlu6Vb8XGaRGck8QSNZJJp538Wrb60Lax4fPwR64ViY468OIUTbRlGZg==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/commander": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
      "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/convert-source-map": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/core-js-compat": {
      "version": "3.45.1",
      "resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.45.1.tgz",
      "integrity": "sha512-tqTt5T4PzsMIZ430XGviK4vzYSoeNJ6CXODi6c/voxOT6IZqBht5/EKaSNnYiEjjRYxjVz7DQIsOsY0XNi8PIA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "browserslist": "^4.25.3"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/core-js"
      }
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/csscolorparser": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/csscolorparser/-/csscolorparser-1.0.3.tgz",
      "integrity": "sha512-umPSgYwZkdFoUrH5hIq5kf0wPSXiro51nPw0j2K/c83KflkPSTBGMz6NJvMB+07VlL0y7VPo6QJcDjcgKTTm3w==",
      "license": "MIT"
    },
    "node_modules/cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "cssesc": "bin/cssesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/csstype": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
      "license": "MIT"
    },
    "node_modules/d3-array": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz",
      "integrity": "sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==",
      "license": "ISC",
      "dependencies": {
        "internmap": "1 - 2"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-color": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-color/-/d3-color-3.1.0.tgz",
      "integrity": "sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-ease": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-ease/-/d3-ease-3.0.1.tgz",
      "integrity": "sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-format": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-format/-/d3-format-3.1.0.tgz",
      "integrity": "sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-interpolate": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-interpolate/-/d3-interpolate-3.0.1.tgz",
      "integrity": "sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==",
      "license": "ISC",
      "dependencies": {
        "d3-color": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-path": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-path/-/d3-path-3.1.0.tgz",
      "integrity": "sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-scale": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/d3-scale/-/d3-scale-4.0.2.tgz",
      "integrity": "sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2.10.0 - 3",
        "d3-format": "1 - 3",
        "d3-interpolate": "1.2.0 - 3",
        "d3-time": "2.1.1 - 3",
        "d3-time-format": "2 - 4"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-shape": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/d3-shape/-/d3-shape-3.2.0.tgz",
      "integrity": "sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==",
      "license": "ISC",
      "dependencies": {
        "d3-path": "^3.1.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-time": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-time/-/d3-time-3.1.0.tgz",
      "integrity": "sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-time-format": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/d3-time-format/-/d3-time-format-4.1.0.tgz",
      "integrity": "sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==",
      "license": "ISC",
      "dependencies": {
        "d3-time": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-timer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-timer/-/d3-timer-3.0.1.tgz",
      "integrity": "sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/damerau-levenshtein": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/damerau-levenshtein/-/damerau-levenshtein-1.0.8.tgz",
      "integrity": "sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==",
      "dev": true,
      "license": "BSD-2-Clause"
    },
    "node_modules/data-view-buffer": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.2.tgz",
      "integrity": "sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/data-view-byte-length": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.2.tgz",
      "integrity": "sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/inspect-js"
      }
    },
    "node_modules/data-view-byte-offset": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.1.tgz",
      "integrity": "sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/debug": {
      "version": "4.4.3",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.3.tgz",
      "integrity": "sha512-RGwwWnwQvkVfavKVt22FGLw+xYSdzARwm0ru6DhTVA3umU5hZc28V3kO4stgYryrTlLpuvgI9GiijltAjNbcqA==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/decimal.js-light": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/decimal.js-light/-/decimal.js-light-2.5.1.tgz",
      "integrity": "sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==",
      "license": "MIT"
    },
    "node_modules/decode-named-character-reference": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decode-named-character-reference/-/decode-named-character-reference-1.2.0.tgz",
      "integrity": "sha512-c6fcElNV6ShtZXmsgNgFFV5tVX2PaV4g+MOAkb8eXHvn6sryJBrZa9r0zV6+dtTyoCKxtDy5tyQ5ZwQuidtd+Q==",
      "license": "MIT",
      "dependencies": {
        "character-entities": "^2.0.0"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/deep-equal": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/deep-equal/-/deep-equal-1.1.2.tgz",
      "integrity": "sha512-5tdhKF6DbU7iIzrIOa1AOUt39ZRm13cmL1cGEh//aqR8x9+tNfbywRf0n5FD/18OKMdo7DNEtrX2t22ZAkI+eg==",
      "license": "MIT",
      "dependencies": {
        "is-arguments": "^1.1.1",
        "is-date-object": "^1.0.5",
        "is-regex": "^1.1.4",
        "object-is": "^1.1.5",
        "object-keys": "^1.1.1",
        "regexp.prototype.flags": "^1.5.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/define-data-property": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0",
        "es-errors": "^1.3.0",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/define-properties": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz",
      "integrity": "sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==",
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.0.1",
        "has-property-descriptors": "^1.0.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/dequal": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/dequal/-/dequal-2.0.3.tgz",
      "integrity": "sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/detect-node-es": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/detect-node-es/-/detect-node-es-1.1.0.tgz",
      "integrity": "sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==",
      "license": "MIT"
    },
    "node_modules/devlop": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/devlop/-/devlop-1.1.0.tgz",
      "integrity": "sha512-RWmIqhcFf1lRYBvNmr7qTNuyCt/7/ns2jbpp1+PalgE/rDQcBT0fioSMUpJ93irlUhC5hrg4cYqe6U+0ImW0rA==",
      "license": "MIT",
      "dependencies": {
        "dequal": "^2.0.0"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/didyoumean": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
      "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
      "dev": true,
      "license": "Apache-2.0"
    },
    "node_modules/dir-glob": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz",
      "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "path-type": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/dlv": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
      "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/doctrine": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "esutils": "^2.0.2"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/duplexify": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/duplexify/-/duplexify-4.1.3.tgz",
      "integrity": "sha512-M3BmBhwJRZsSx38lZyhE53Csddgzl5R7xGJNk7CVddZD6CcmwMCH8J+7AprIrQKH7TonKxaCjcv27Qmf+sQ+oA==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "end-of-stream": "^1.4.1",
        "inherits": "^2.0.3",
        "readable-stream": "^3.1.1",
        "stream-shift": "^1.0.2"
      }
    },
    "node_modules/earcut": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/earcut/-/earcut-3.0.2.tgz",
      "integrity": "sha512-X7hshQbLyMJ/3RPhyObLARM2sNxxmRALLKx1+NVFFnQ9gKzmCrxm9+uLIAdBcvc8FNLpctqlQ2V6AE92Ol9UDQ==",
      "license": "ISC"
    },
    "node_modules/eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/ecdsa-sig-formatter": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz",
      "integrity": "sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.227",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.227.tgz",
      "integrity": "sha512-ITxuoPfJu3lsNWUi2lBM2PaBPYgH3uqmxut5vmBxgYvyI4AlJ6P3Cai1O76mOrkJCBzq0IxWg/NtqOrpu/0gKA==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/end-of-stream": {
      "version": "1.4.5",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.5.tgz",
      "integrity": "sha512-ooEGc6HP26xXq/N+GCGOT0JKCLDGrq2bQUZrQ7gyrJiZANJ/8YDTxTpQBXGMn+WbIQXNVpyWymm7KYVICQnyOg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "once": "^1.4.0"
      }
    },
    "node_modules/enhanced-resolve": {
      "version": "5.18.3",
      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.3.tgz",
      "integrity": "sha512-d4lC8xfavMeBjzGr2vECC3fsGXziXZQyJxD868h2M/mBI3PwAuODxAkLkq5HYuvrPYcUtiLzsTo8U3PgX3Ocww==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.2.0"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/es-abstract": {
      "version": "1.24.0",
      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.24.0.tgz",
      "integrity": "sha512-WSzPgsdLtTcQwm4CROfS5ju2Wa1QQcVeT37jFjYzdFz1r9ahadC8B8/a4qxJxM+09F18iumCdRmlr96ZYkQvEg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-buffer-byte-length": "^1.0.2",
        "arraybuffer.prototype.slice": "^1.0.4",
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "data-view-buffer": "^1.0.2",
        "data-view-byte-length": "^1.0.2",
        "data-view-byte-offset": "^1.0.1",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "es-set-tostringtag": "^2.1.0",
        "es-to-primitive": "^1.3.0",
        "function.prototype.name": "^1.1.8",
        "get-intrinsic": "^1.3.0",
        "get-proto": "^1.0.1",
        "get-symbol-description": "^1.1.0",
        "globalthis": "^1.0.4",
        "gopd": "^1.2.0",
        "has-property-descriptors": "^1.0.2",
        "has-proto": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "internal-slot": "^1.1.0",
        "is-array-buffer": "^3.0.5",
        "is-callable": "^1.2.7",
        "is-data-view": "^1.0.2",
        "is-negative-zero": "^2.0.3",
        "is-regex": "^1.2.1",
        "is-set": "^2.0.3",
        "is-shared-array-buffer": "^1.0.4",
        "is-string": "^1.1.1",
        "is-typed-array": "^1.1.15",
        "is-weakref": "^1.1.1",
        "math-intrinsics": "^1.1.0",
        "object-inspect": "^1.13.4",
        "object-keys": "^1.1.1",
        "object.assign": "^4.1.7",
        "own-keys": "^1.0.1",
        "regexp.prototype.flags": "^1.5.4",
        "safe-array-concat": "^1.1.3",
        "safe-push-apply": "^1.0.0",
        "safe-regex-test": "^1.1.0",
        "set-proto": "^1.0.0",
        "stop-iteration-iterator": "^1.1.0",
        "string.prototype.trim": "^1.2.10",
        "string.prototype.trimend": "^1.0.9",
        "string.prototype.trimstart": "^1.0.8",
        "typed-array-buffer": "^1.0.3",
        "typed-array-byte-length": "^1.0.3",
        "typed-array-byte-offset": "^1.0.4",
        "typed-array-length": "^1.0.7",
        "unbox-primitive": "^1.1.0",
        "which-typed-array": "^1.1.19"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-iterator-helpers": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/es-iterator-helpers/-/es-iterator-helpers-1.2.1.tgz",
      "integrity": "sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.6",
        "es-errors": "^1.3.0",
        "es-set-tostringtag": "^2.0.3",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.6",
        "globalthis": "^1.0.4",
        "gopd": "^1.2.0",
        "has-property-descriptors": "^1.0.2",
        "has-proto": "^1.2.0",
        "has-symbols": "^1.1.0",
        "internal-slot": "^1.1.0",
        "iterator.prototype": "^1.1.4",
        "safe-array-concat": "^1.1.3"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-module-lexer": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/es-module-lexer/-/es-module-lexer-1.7.0.tgz",
      "integrity": "sha512-jEQoCwk8hyb2AZziIOLhDqpm5+2ww5uIE6lkO/6jcOCusfk6LhMHpXXfBLXTZ7Ydyt0j4VoUQv6uGNYbdW+kBA==",
      "dev": true,
      "license": "MIT",
      "peer": true
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-set-tostringtag": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-shim-unscopables": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.1.0.tgz",
      "integrity": "sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-to-primitive": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.3.0.tgz",
      "integrity": "sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-callable": "^1.2.7",
        "is-date-object": "^1.0.5",
        "is-symbol": "^1.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/es-toolkit": {
      "version": "1.39.10",
      "resolved": "https://registry.npmjs.org/es-toolkit/-/es-toolkit-1.39.10.tgz",
      "integrity": "sha512-E0iGnTtbDhkeczB0T+mxmoVlT4YNweEKBLq7oaU4p11mecdsZpNWOglI4895Vh4usbQ+LsJiuLuI2L0Vdmfm2w==",
      "license": "MIT",
      "workspaces": [
        "docs",
        "benchmarks"
      ]
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/eslint": {
      "version": "8.57.1",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz",
      "integrity": "sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==",
      "deprecated": "This version is no longer supported. Please see https://eslint.org/version-support for other options.",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.2.0",
        "@eslint-community/regexpp": "^4.6.1",
        "@eslint/eslintrc": "^2.1.4",
        "@eslint/js": "8.57.1",
        "@humanwhocodes/config-array": "^0.13.0",
        "@humanwhocodes/module-importer": "^1.0.1",
        "@nodelib/fs.walk": "^1.2.8",
        "@ungap/structured-clone": "^1.2.0",
        "ajv": "^6.12.4",
        "chalk": "^4.0.0",
        "cross-spawn": "^7.0.2",
        "debug": "^4.3.2",
        "doctrine": "^3.0.0",
        "escape-string-regexp": "^4.0.0",
        "eslint-scope": "^7.2.2",
        "eslint-visitor-keys": "^3.4.3",
        "espree": "^9.6.1",
        "esquery": "^1.4.2",
        "esutils": "^2.0.2",
        "fast-deep-equal": "^3.1.3",
        "file-entry-cache": "^6.0.1",
        "find-up": "^5.0.0",
        "glob-parent": "^6.0.2",
        "globals": "^13.19.0",
        "graphemer": "^1.4.0",
        "ignore": "^5.2.0",
        "imurmurhash": "^0.1.4",
        "is-glob": "^4.0.0",
        "is-path-inside": "^3.0.3",
        "js-yaml": "^4.1.0",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "levn": "^0.4.1",
        "lodash.merge": "^4.6.2",
        "minimatch": "^3.1.2",
        "natural-compare": "^1.4.0",
        "optionator": "^0.9.3",
        "strip-ansi": "^6.0.1",
        "text-table": "^0.2.0"
      },
      "bin": {
        "eslint": "bin/eslint.js"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-config-next": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/eslint-config-next/-/eslint-config-next-14.0.0.tgz",
      "integrity": "sha512-jtXeE+/pGQ3h9n11QyyuPN50kO13GO5XvjU5ZRq6W+XTpOMjyobWmK2s7aowy0FtzA49krJzYzEU9s1RMwoJ6g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@next/eslint-plugin-next": "14.0.0",
        "@rushstack/eslint-patch": "^1.3.3",
        "@typescript-eslint/parser": "^5.4.2 || ^6.0.0",
        "eslint-import-resolver-node": "^0.3.6",
        "eslint-import-resolver-typescript": "^3.5.2",
        "eslint-plugin-import": "^2.28.1",
        "eslint-plugin-jsx-a11y": "^6.7.1",
        "eslint-plugin-react": "^7.33.2",
        "eslint-plugin-react-hooks": "^4.5.0 || 5.0.0-canary-7118f5dd7-20230705"
      },
      "peerDependencies": {
        "eslint": "^7.23.0 || ^8.0.0",
        "typescript": ">=3.3.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-import-resolver-node": {
      "version": "0.3.9",
      "resolved": "https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.9.tgz",
      "integrity": "sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "debug": "^3.2.7",
        "is-core-module": "^2.13.0",
        "resolve": "^1.22.4"
      }
    },
    "node_modules/eslint-import-resolver-node/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/eslint-import-resolver-typescript": {
      "version": "3.10.1",
      "resolved": "https://registry.npmjs.org/eslint-import-resolver-typescript/-/eslint-import-resolver-typescript-3.10.1.tgz",
      "integrity": "sha512-A1rHYb06zjMGAxdLSkN2fXPBwuSaQ0iO5M/hdyS0Ajj1VBaRp0sPD3dn1FhME3c/JluGFbwSxyCfqdSbtQLAHQ==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "@nolyfill/is-core-module": "1.0.39",
        "debug": "^4.4.0",
        "get-tsconfig": "^4.10.0",
        "is-bun-module": "^2.0.0",
        "stable-hash": "^0.0.5",
        "tinyglobby": "^0.2.13",
        "unrs-resolver": "^1.6.2"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint-import-resolver-typescript"
      },
      "peerDependencies": {
        "eslint": "*",
        "eslint-plugin-import": "*",
        "eslint-plugin-import-x": "*"
      },
      "peerDependenciesMeta": {
        "eslint-plugin-import": {
          "optional": true
        },
        "eslint-plugin-import-x": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-module-utils": {
      "version": "2.12.1",
      "resolved": "https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.12.1.tgz",
      "integrity": "sha512-L8jSWTze7K2mTg0vos/RuLRS5soomksDPoJLXIslC7c8Wmut3bx7CPpJijDcBZtxQ5lrbUdM+s0OlNbz0DCDNw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "debug": "^3.2.7"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependenciesMeta": {
        "eslint": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-module-utils/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/eslint-plugin-import": {
      "version": "2.32.0",
      "resolved": "https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.32.0.tgz",
      "integrity": "sha512-whOE1HFo/qJDyX4SnXzP4N6zOWn79WhnCUY/iDR0mPfQZO8wcYE4JClzI2oZrhBnnMUCBCHZhO6VQyoBU95mZA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@rtsao/scc": "^1.1.0",
        "array-includes": "^3.1.9",
        "array.prototype.findlastindex": "^1.2.6",
        "array.prototype.flat": "^1.3.3",
        "array.prototype.flatmap": "^1.3.3",
        "debug": "^3.2.7",
        "doctrine": "^2.1.0",
        "eslint-import-resolver-node": "^0.3.9",
        "eslint-module-utils": "^2.12.1",
        "hasown": "^2.0.2",
        "is-core-module": "^2.16.1",
        "is-glob": "^4.0.3",
        "minimatch": "^3.1.2",
        "object.fromentries": "^2.0.8",
        "object.groupby": "^1.0.3",
        "object.values": "^1.2.1",
        "semver": "^6.3.1",
        "string.prototype.trimend": "^1.0.9",
        "tsconfig-paths": "^3.15.0"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependencies": {
        "eslint": "^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9"
      }
    },
    "node_modules/eslint-plugin-import/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/eslint-plugin-import/node_modules/doctrine": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
      "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "esutils": "^2.0.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/eslint-plugin-import/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/eslint-plugin-jsx-a11y": {
      "version": "6.10.2",
      "resolved": "https://registry.npmjs.org/eslint-plugin-jsx-a11y/-/eslint-plugin-jsx-a11y-6.10.2.tgz",
      "integrity": "sha512-scB3nz4WmG75pV8+3eRUQOHZlNSUhFNq37xnpgRkCCELU3XMvXAxLk1eqWWyE22Ki4Q01Fnsw9BA3cJHDPgn2Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "aria-query": "^5.3.2",
        "array-includes": "^3.1.8",
        "array.prototype.flatmap": "^1.3.2",
        "ast-types-flow": "^0.0.8",
        "axe-core": "^4.10.0",
        "axobject-query": "^4.1.0",
        "damerau-levenshtein": "^1.0.8",
        "emoji-regex": "^9.2.2",
        "hasown": "^2.0.2",
        "jsx-ast-utils": "^3.3.5",
        "language-tags": "^1.0.9",
        "minimatch": "^3.1.2",
        "object.fromentries": "^2.0.8",
        "safe-regex-test": "^1.0.3",
        "string.prototype.includes": "^2.0.1"
      },
      "engines": {
        "node": ">=4.0"
      },
      "peerDependencies": {
        "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9"
      }
    },
    "node_modules/eslint-plugin-react": {
      "version": "7.37.5",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.37.5.tgz",
      "integrity": "sha512-Qteup0SqU15kdocexFNAJMvCJEfa2xUKNV4CC1xsVMrIIqEy3SQ/rqyxCWNzfrd3/ldy6HMlD2e0JDVpDg2qIA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-includes": "^3.1.8",
        "array.prototype.findlast": "^1.2.5",
        "array.prototype.flatmap": "^1.3.3",
        "array.prototype.tosorted": "^1.1.4",
        "doctrine": "^2.1.0",
        "es-iterator-helpers": "^1.2.1",
        "estraverse": "^5.3.0",
        "hasown": "^2.0.2",
        "jsx-ast-utils": "^2.4.1 || ^3.0.0",
        "minimatch": "^3.1.2",
        "object.entries": "^1.1.9",
        "object.fromentries": "^2.0.8",
        "object.values": "^1.2.1",
        "prop-types": "^15.8.1",
        "resolve": "^2.0.0-next.5",
        "semver": "^6.3.1",
        "string.prototype.matchall": "^4.0.12",
        "string.prototype.repeat": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependencies": {
        "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7"
      }
    },
    "node_modules/eslint-plugin-react-hooks": {
      "version": "5.0.0-canary-7118f5dd7-20230705",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-5.0.0-canary-7118f5dd7-20230705.tgz",
      "integrity": "sha512-AZYbMo/NW9chdL7vk6HQzQhT+PvTAEVqWk9ziruUoW2kAOcN5qNyelv70e0F1VNQAbvutOC9oc+xfWycI9FxDw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0"
      }
    },
    "node_modules/eslint-plugin-react/node_modules/doctrine": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
      "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "esutils": "^2.0.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/eslint-plugin-react/node_modules/resolve": {
      "version": "2.0.0-next.5",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.5.tgz",
      "integrity": "sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-core-module": "^2.13.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/eslint-plugin-react/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/eslint-scope": {
      "version": "7.2.2",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz",
      "integrity": "sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-visitor-keys": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/espree": {
      "version": "9.6.1",
      "resolved": "https://registry.npmjs.org/espree/-/espree-9.6.1.tgz",
      "integrity": "sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "acorn": "^8.9.0",
        "acorn-jsx": "^5.3.2",
        "eslint-visitor-keys": "^3.4.1"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/esquery": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "estraverse": "^5.1.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estree-util-is-identifier-name": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/estree-util-is-identifier-name/-/estree-util-is-identifier-name-3.0.0.tgz",
      "integrity": "sha512-hFtqIDZTIUZ9BXLb8y4pYGyk6+wekIivNVTcmvk8NoOh+VeRn5y6cEHzbURrWbfp1fIqdVipilzj+lfaadNZmg==",
      "license": "MIT",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/event-target-shim": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/event-target-shim/-/event-target-shim-5.0.1.tgz",
      "integrity": "sha512-i/2XbnSz/uxRCU6+NdVJgKWDTM427+MqYbkQzD321DuCQJUqOuJKIA0IM2+W2xtYHdKOmZ4dR6fExsd4SXL+WQ==",
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/eventemitter3": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-5.0.1.tgz",
      "integrity": "sha512-GWkBvjiSZK87ELrYOSESUYeVIc9mvLLf/nXalMOS5dYrgZq9o5OVkbZAVM06CVxYsCwH9BDZFPlQTlPA1j4ahA==",
      "license": "MIT"
    },
    "node_modules/events": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/events/-/events-3.3.0.tgz",
      "integrity": "sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=0.8.x"
      }
    },
    "node_modules/extend": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==",
      "license": "MIT"
    },
    "node_modules/extend-shallow": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
      "integrity": "sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==",
      "license": "MIT",
      "dependencies": {
        "is-extendable": "^0.1.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/farmhash-modern": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/farmhash-modern/-/farmhash-modern-1.1.0.tgz",
      "integrity": "sha512-6ypT4XfgqJk/F3Yuv4SX26I3doUjt0GTG4a+JgWxXQpxXzTBq8fPUeGHfcYMMDPHJHm3yPOSjaeBwBGAHWXCdA==",
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "license": "MIT"
    },
    "node_modules/fast-diff": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/fast-diff/-/fast-diff-1.1.2.tgz",
      "integrity": "sha512-KaJUt+M9t1qaIteSvjc6P3RbMdXsNhK61GRftR6SNxqmhthcd9MGIi4T+o0jD8LUSpSnSKXE20nLtJ3fOHxQig==",
      "license": "Apache-2.0"
    },
    "node_modules/fast-glob": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.8"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fast-glob/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-uri": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/fast-uri/-/fast-uri-3.1.0.tgz",
      "integrity": "sha512-iPeeDKJSWf4IEOasVVrknXpaBV0IApz/gp7S2bb7Z4Lljbl2MGJRqInZiUrQwV16cpzw/D3S5j5Julj/gT52AA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fastify"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/fastify"
        }
      ],
      "license": "BSD-3-Clause",
      "peer": true
    },
    "node_modules/fast-xml-parser": {
      "version": "4.5.3",
      "resolved": "https://registry.npmjs.org/fast-xml-parser/-/fast-xml-parser-4.5.3.tgz",
      "integrity": "sha512-RKihhV+SHsIUGXObeVy9AXiBbFwkVk7Syp8XgwN5U3JV416+Gwp/GO9i0JYKmikykgz/UHRrrV4ROuZEo/T0ig==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/NaturalIntelligence"
        }
      ],
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "strnum": "^1.1.1"
      },
      "bin": {
        "fxparser": "src/cli/cli.js"
      }
    },
    "node_modules/fastq": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/faye-websocket": {
      "version": "0.11.4",
      "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.11.4.tgz",
      "integrity": "sha512-CzbClwlXAuiRQAlUyfqPgvPoNKTckTPGfwZV4ZdAhVcP2lh9KUxJg2b5GkE7XbjKQ3YJnQ9z6D9ntLAlB+tP8g==",
      "license": "Apache-2.0",
      "dependencies": {
        "websocket-driver": ">=0.5.1"
      },
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/fdir": {
      "version": "6.5.0",
      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.5.0.tgz",
      "integrity": "sha512-tIbYtZbucOs0BRGqPJkshJUYdL+SDH7dVM8gjy+ERp3WAUjLEFJE+02kanyHtwjWOnwrKYBiwAmM0p4kLJAnXg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12.0.0"
      },
      "peerDependencies": {
        "picomatch": "^3 || ^4"
      },
      "peerDependenciesMeta": {
        "picomatch": {
          "optional": true
        }
      }
    },
    "node_modules/file-entry-cache": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz",
      "integrity": "sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flat-cache": "^3.0.4"
      },
      "engines": {
        "node": "^10.12.0 || >=12.0.0"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/find-up": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "locate-path": "^6.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/firebase": {
      "version": "10.14.1",
      "resolved": "https://registry.npmjs.org/firebase/-/firebase-10.14.1.tgz",
      "integrity": "sha512-0KZxU+Ela9rUCULqFsUUOYYkjh7OM1EWdIfG6///MtXd0t2/uUIf0iNV5i0KariMhRQ5jve/OY985nrAXFaZeQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/analytics": "0.10.8",
        "@firebase/analytics-compat": "0.2.14",
        "@firebase/app": "0.10.13",
        "@firebase/app-check": "0.8.8",
        "@firebase/app-check-compat": "0.3.15",
        "@firebase/app-compat": "0.2.43",
        "@firebase/app-types": "0.9.2",
        "@firebase/auth": "1.7.9",
        "@firebase/auth-compat": "0.5.14",
        "@firebase/data-connect": "0.1.0",
        "@firebase/database": "1.0.8",
        "@firebase/database-compat": "1.0.8",
        "@firebase/firestore": "4.7.3",
        "@firebase/firestore-compat": "0.3.38",
        "@firebase/functions": "0.11.8",
        "@firebase/functions-compat": "0.3.14",
        "@firebase/installations": "0.6.9",
        "@firebase/installations-compat": "0.2.9",
        "@firebase/messaging": "0.12.12",
        "@firebase/messaging-compat": "0.2.12",
        "@firebase/performance": "0.6.9",
        "@firebase/performance-compat": "0.2.9",
        "@firebase/remote-config": "0.4.9",
        "@firebase/remote-config-compat": "0.2.9",
        "@firebase/storage": "0.13.2",
        "@firebase/storage-compat": "0.3.12",
        "@firebase/util": "1.10.0",
        "@firebase/vertexai-preview": "0.0.4"
      }
    },
    "node_modules/firebase-admin": {
      "version": "13.5.0",
      "resolved": "https://registry.npmjs.org/firebase-admin/-/firebase-admin-13.5.0.tgz",
      "integrity": "sha512-QZOpv1DJRJpH8NcWiL1xXE10tw3L/bdPFlgjcWrqU3ufyOJDYfxB1MMtxiVTwxK16NlybQbEM6ciSich2uWEIQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@fastify/busboy": "^3.0.0",
        "@firebase/database-compat": "^2.0.0",
        "@firebase/database-types": "^1.0.6",
        "@types/node": "^22.8.7",
        "farmhash-modern": "^1.1.0",
        "fast-deep-equal": "^3.1.1",
        "google-auth-library": "^9.14.2",
        "jsonwebtoken": "^9.0.0",
        "jwks-rsa": "^3.1.0",
        "node-forge": "^1.3.1",
        "uuid": "^11.0.2"
      },
      "engines": {
        "node": ">=18"
      },
      "optionalDependencies": {
        "@google-cloud/firestore": "^7.11.0",
        "@google-cloud/storage": "^7.14.0"
      }
    },
    "node_modules/firebase-admin/node_modules/@firebase/app-check-interop-types": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/@firebase/app-check-interop-types/-/app-check-interop-types-0.3.3.tgz",
      "integrity": "sha512-gAlxfPLT2j8bTI/qfe3ahl2I2YcBQ8cFIBdhAQA4I2f3TndcO+22YizyGYuttLHPQEpWkhmpFW60VCFEPg4g5A==",
      "license": "Apache-2.0"
    },
    "node_modules/firebase-admin/node_modules/@firebase/app-types": {
      "version": "0.9.3",
      "resolved": "https://registry.npmjs.org/@firebase/app-types/-/app-types-0.9.3.tgz",
      "integrity": "sha512-kRVpIl4vVGJ4baogMDINbyrIOtOxqhkZQg4jTq3l8Lw6WSk0xfpEYzezFu+Kl4ve4fbPl79dvwRtaFqAC/ucCw==",
      "license": "Apache-2.0"
    },
    "node_modules/firebase-admin/node_modules/@firebase/auth-interop-types": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/@firebase/auth-interop-types/-/auth-interop-types-0.2.4.tgz",
      "integrity": "sha512-JPgcXKCuO+CWqGDnigBtvo09HeBs5u/Ktc2GaFj2m01hLarbxthLNm7Fk8iOP1aqAtXV+fnnGj7U28xmk7IwVA==",
      "license": "Apache-2.0"
    },
    "node_modules/firebase-admin/node_modules/@firebase/component": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.7.0.tgz",
      "integrity": "sha512-wR9En2A+WESUHexjmRHkqtaVH94WLNKt6rmeqZhSLBybg4Wyf0Umk04SZsS6sBq4102ZsDBFwoqMqJYj2IoDSg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/firebase-admin/node_modules/@firebase/database": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@firebase/database/-/database-1.1.0.tgz",
      "integrity": "sha512-gM6MJFae3pTyNLoc9VcJNuaUDej0ctdjn3cVtILo3D5lpp0dmUHHLFN/pUKe7ImyeB1KAvRlEYxvIHNF04Filg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check-interop-types": "0.3.3",
        "@firebase/auth-interop-types": "0.2.4",
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "faye-websocket": "0.11.4",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/firebase-admin/node_modules/@firebase/database-compat": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@firebase/database-compat/-/database-compat-2.1.0.tgz",
      "integrity": "sha512-8nYc43RqxScsePVd1qe1xxvWNf0OBnbwHxmXJ7MHSuuTVYFO3eLyLW3PiCKJ9fHnmIz4p4LbieXwz+qtr9PZDg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/database": "1.1.0",
        "@firebase/database-types": "1.0.16",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/firebase-admin/node_modules/@firebase/database-types": {
      "version": "1.0.16",
      "resolved": "https://registry.npmjs.org/@firebase/database-types/-/database-types-1.0.16.tgz",
      "integrity": "sha512-xkQLQfU5De7+SPhEGAXFBnDryUWhhlFXelEg2YeZOQMCdoe7dL64DDAd77SQsR+6uoXIZY5MB4y/inCs4GTfcw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-types": "0.9.3",
        "@firebase/util": "1.13.0"
      }
    },
    "node_modules/firebase-admin/node_modules/@firebase/logger": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.5.0.tgz",
      "integrity": "sha512-cGskaAvkrnh42b3BA3doDWeBmuHFO/Mx5A83rbRDYakPjO9bJtRL3dX7javzc2Rr/JHZf4HlterTW2lUkfeN4g==",
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/firebase-admin/node_modules/@firebase/util": {
      "version": "1.13.0",
      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.13.0.tgz",
      "integrity": "sha512-0AZUyYUfpMNcztR5l09izHwXkZpghLgCUaAGjtMwXnCg3bj4ml5VgiwqOMOxJ+Nw4qN/zJAaOQBcJ7KGkWStqQ==",
      "hasInstallScript": true,
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/firebase-admin/node_modules/@types/node": {
      "version": "22.18.8",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-22.18.8.tgz",
      "integrity": "sha512-pAZSHMiagDR7cARo/cch1f3rXy0AEXwsVsVH09FcyeJVAzCnGgmYis7P3JidtTUjyadhTeSo8TgRPswstghDaw==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~6.21.0"
      }
    },
    "node_modules/flat-cache": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz",
      "integrity": "sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flatted": "^3.2.9",
        "keyv": "^4.5.3",
        "rimraf": "^3.0.2"
      },
      "engines": {
        "node": "^10.12.0 || >=12.0.0"
      }
    },
    "node_modules/flatted": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
      "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/for-each": {
      "version": "0.3.5",
      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz",
      "integrity": "sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/foreground-child": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz",
      "integrity": "sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "cross-spawn": "^7.0.6",
        "signal-exit": "^4.0.1"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/form-data": {
      "version": "2.5.5",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.5.5.tgz",
      "integrity": "sha512-jqdObeR2rxZZbPSGL+3VckHMYtu+f9//KXBsVny6JSX/pa38Fy+bGjuG8eW/H6USNQWhLi8Num++cU2yOCNz4A==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "es-set-tostringtag": "^2.1.0",
        "hasown": "^2.0.2",
        "mime-types": "^2.1.35",
        "safe-buffer": "^5.2.1"
      },
      "engines": {
        "node": ">= 0.12"
      }
    },
    "node_modules/fraction.js": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz",
      "integrity": "sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "patreon",
        "url": "https://github.com/sponsors/rawify"
      }
    },
    "node_modules/framer-motion": {
      "version": "10.18.0",
      "resolved": "https://registry.npmjs.org/framer-motion/-/framer-motion-10.18.0.tgz",
      "integrity": "sha512-oGlDh1Q1XqYPksuTD/usb0I70hq95OUzmL9+6Zd+Hs4XV0oaISBa/UUMSjYiq6m8EUF32132mOJ8xVZS+I0S6w==",
      "license": "MIT",
      "dependencies": {
        "tslib": "^2.4.0"
      },
      "optionalDependencies": {
        "@emotion/is-prop-valid": "^0.8.2"
      },
      "peerDependencies": {
        "react": "^18.0.0",
        "react-dom": "^18.0.0"
      },
      "peerDependenciesMeta": {
        "react": {
          "optional": true
        },
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/function.prototype.name": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.8.tgz",
      "integrity": "sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "functions-have-names": "^1.2.3",
        "hasown": "^2.0.2",
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/functional-red-black-tree": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz",
      "integrity": "sha512-dsKNQNdj6xA3T+QlADDA7mOSlX0qiMINjn0cgr+eGHGsbSHzTabcIogz2+p/iqP1Xs6EP/sS2SbqH+brGTbq0g==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/functions-have-names": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gaxios": {
      "version": "6.7.1",
      "resolved": "https://registry.npmjs.org/gaxios/-/gaxios-6.7.1.tgz",
      "integrity": "sha512-LDODD4TMYx7XXdpwxAVRAIAuB0bzv0s+ywFonY46k126qzQHT9ygyoa9tncmOiQmmDrik65UYsEkv3lbfqQ3yQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "extend": "^3.0.2",
        "https-proxy-agent": "^7.0.1",
        "is-stream": "^2.0.0",
        "node-fetch": "^2.6.9",
        "uuid": "^9.0.1"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/gaxios/node_modules/uuid": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-9.0.1.tgz",
      "integrity": "sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/gcp-metadata": {
      "version": "6.1.1",
      "resolved": "https://registry.npmjs.org/gcp-metadata/-/gcp-metadata-6.1.1.tgz",
      "integrity": "sha512-a4tiq7E0/5fTjxPAaH4jpjkSv/uCaU2p5KC6HVGrvl0cDjA8iBZv4vv1gyzlmK0ZUKqwpOyQMKzZQe3lTit77A==",
      "license": "Apache-2.0",
      "dependencies": {
        "gaxios": "^6.1.1",
        "google-logging-utils": "^0.0.2",
        "json-bigint": "^1.0.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/geojson-vt": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/geojson-vt/-/geojson-vt-4.0.2.tgz",
      "integrity": "sha512-AV9ROqlNqoZEIJGfm1ncNjEXfkz2hdFlZf0qkVfmkwdKa8vj7H16YUOT81rJw1rdFhyEDlN2Tds91p/glzbl5A==",
      "license": "ISC"
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "license": "ISC",
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-nonce": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-nonce/-/get-nonce-1.0.1.tgz",
      "integrity": "sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/get-symbol-description": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.1.0.tgz",
      "integrity": "sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-tsconfig": {
      "version": "4.10.1",
      "resolved": "https://registry.npmjs.org/get-tsconfig/-/get-tsconfig-4.10.1.tgz",
      "integrity": "sha512-auHyJ4AgMz7vgS8Hp3N6HXSmlMdUyhSUrfBF16w153rxtLIEOE+HGqaBppczZvnHLqQJfiHotCYpNhl0lUROFQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "resolve-pkg-maps": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/privatenumber/get-tsconfig?sponsor=1"
      }
    },
    "node_modules/get-value": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/get-value/-/get-value-2.0.6.tgz",
      "integrity": "sha512-Ln0UQDlxH1BapMu3GPtf7CuYNwRZf2gwCuPqbyG6pB8WfmFpzqcy4xtAaAMUhnNqjMKTiCPZG2oMT3YSx8U2NA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/gl-matrix": {
      "version": "3.4.4",
      "resolved": "https://registry.npmjs.org/gl-matrix/-/gl-matrix-3.4.4.tgz",
      "integrity": "sha512-latSnyDNt/8zYUB6VIJ6PCh2jBjJX6gnDsoCZ7LyW7GkqrD51EWwa9qCoGixj8YqBtETQK/xY7OmpTF8xz1DdQ==",
      "license": "MIT"
    },
    "node_modules/glob": {
      "version": "7.1.7",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.7.tgz",
      "integrity": "sha512-OvD9ENzPLbegENnYP5UUfJIirTg4+XwMWGaQfQTY0JenxNvvIKP3U3/tAQSPIu/lHxXYSZmpXlUHeqAIdKzBLQ==",
      "deprecated": "Glob versions prior to v9 are no longer supported",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.0.4",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/glob-to-regexp": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.4.1.tgz",
      "integrity": "sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==",
      "license": "BSD-2-Clause"
    },
    "node_modules/globals": {
      "version": "13.24.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-13.24.0.tgz",
      "integrity": "sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "type-fest": "^0.20.2"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/globalthis": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
      "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-properties": "^1.2.1",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/globby": {
      "version": "11.1.0",
      "resolved": "https://registry.npmjs.org/globby/-/globby-11.1.0.tgz",
      "integrity": "sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-union": "^2.1.0",
        "dir-glob": "^3.0.1",
        "fast-glob": "^3.2.9",
        "ignore": "^5.2.0",
        "merge2": "^1.4.1",
        "slash": "^3.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/google-auth-library": {
      "version": "9.15.1",
      "resolved": "https://registry.npmjs.org/google-auth-library/-/google-auth-library-9.15.1.tgz",
      "integrity": "sha512-Jb6Z0+nvECVz+2lzSMt9u98UsoakXxA2HGHMCxh+so3n90XgYWkq5dur19JAJV7ONiJY22yBTyJB1TSkvPq9Ng==",
      "license": "Apache-2.0",
      "dependencies": {
        "base64-js": "^1.3.0",
        "ecdsa-sig-formatter": "^1.0.11",
        "gaxios": "^6.1.1",
        "gcp-metadata": "^6.1.0",
        "gtoken": "^7.0.0",
        "jws": "^4.0.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/google-gax": {
      "version": "4.6.1",
      "resolved": "https://registry.npmjs.org/google-gax/-/google-gax-4.6.1.tgz",
      "integrity": "sha512-V6eky/xz2mcKfAd1Ioxyd6nmA61gao3n01C+YeuIwu3vzM9EDR6wcVzMSIbLMDXWeoi9SHYctXuKYC5uJUT3eQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@grpc/grpc-js": "^1.10.9",
        "@grpc/proto-loader": "^0.7.13",
        "@types/long": "^4.0.0",
        "abort-controller": "^3.0.0",
        "duplexify": "^4.0.0",
        "google-auth-library": "^9.3.0",
        "node-fetch": "^2.7.0",
        "object-hash": "^3.0.0",
        "proto3-json-serializer": "^2.0.2",
        "protobufjs": "^7.3.2",
        "retry-request": "^7.0.0",
        "uuid": "^9.0.1"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/google-gax/node_modules/@grpc/grpc-js": {
      "version": "1.14.0",
      "resolved": "https://registry.npmjs.org/@grpc/grpc-js/-/grpc-js-1.14.0.tgz",
      "integrity": "sha512-N8Jx6PaYzcTRNzirReJCtADVoq4z7+1KQ4E70jTg/koQiMoUSN1kbNjPOqpPbhMFhfU1/l7ixspPl8dNY+FoUg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@grpc/proto-loader": "^0.8.0",
        "@js-sdsl/ordered-map": "^4.4.2"
      },
      "engines": {
        "node": ">=12.10.0"
      }
    },
    "node_modules/google-gax/node_modules/@grpc/grpc-js/node_modules/@grpc/proto-loader": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/@grpc/proto-loader/-/proto-loader-0.8.0.tgz",
      "integrity": "sha512-rc1hOQtjIWGxcxpb9aHAfLpIctjEnsDehj0DAiVfBlmT84uvR0uUtN2hEi/ecvWVjXUGf5qPF4qEgiLOx1YIMQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "lodash.camelcase": "^4.3.0",
        "long": "^5.0.0",
        "protobufjs": "^7.5.3",
        "yargs": "^17.7.2"
      },
      "bin": {
        "proto-loader-gen-types": "build/bin/proto-loader-gen-types.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/google-gax/node_modules/uuid": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-9.0.1.tgz",
      "integrity": "sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "optional": true,
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/google-logging-utils": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/google-logging-utils/-/google-logging-utils-0.0.2.tgz",
      "integrity": "sha512-NEgUnEcBiP5HrPzufUkBzJOD/Sxsco3rLNo1F1TNf7ieU8ryUzBhqba8r756CjLX7rn3fHl6iLEwPYuqpoKgQQ==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
      "license": "ISC"
    },
    "node_modules/graphemer": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
      "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/grid-index": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/grid-index/-/grid-index-1.1.0.tgz",
      "integrity": "sha512-HZRwumpOGUrHyxO5bqKZL0B0GlUpwtCAzZ42sgxUPniu33R1LSFH5yrIcBCHjkctCAh3mtWKcKd9J4vDDdeVHA==",
      "license": "ISC"
    },
    "node_modules/gtoken": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/gtoken/-/gtoken-7.1.0.tgz",
      "integrity": "sha512-pCcEwRi+TKpMlxAQObHDQ56KawURgyAf6jtIY046fJ5tIv3zDe/LEIubckAO8fj6JnAxLdmWkUfNyulQ2iKdEw==",
      "license": "MIT",
      "dependencies": {
        "gaxios": "^6.0.0",
        "jws": "^4.0.0"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/has-bigints": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz",
      "integrity": "sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/has-property-descriptors": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-proto": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.2.0.tgz",
      "integrity": "sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
      "license": "MIT",
      "dependencies": {
        "has-symbols": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/hast-util-to-jsx-runtime": {
      "version": "2.3.6",
      "resolved": "https://registry.npmjs.org/hast-util-to-jsx-runtime/-/hast-util-to-jsx-runtime-2.3.6.tgz",
      "integrity": "sha512-zl6s8LwNyo1P9uw+XJGvZtdFF1GdAkOg8ujOw+4Pyb76874fLps4ueHXDhXWdk6YHQ6OgUtinliG7RsYvCbbBg==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "@types/hast": "^3.0.0",
        "@types/unist": "^3.0.0",
        "comma-separated-tokens": "^2.0.0",
        "devlop": "^1.0.0",
        "estree-util-is-identifier-name": "^3.0.0",
        "hast-util-whitespace": "^3.0.0",
        "mdast-util-mdx-expression": "^2.0.0",
        "mdast-util-mdx-jsx": "^3.0.0",
        "mdast-util-mdxjs-esm": "^2.0.0",
        "property-information": "^7.0.0",
        "space-separated-tokens": "^2.0.0",
        "style-to-js": "^1.0.0",
        "unist-util-position": "^5.0.0",
        "vfile-message": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/hast-util-whitespace": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/hast-util-whitespace/-/hast-util-whitespace-3.0.0.tgz",
      "integrity": "sha512-88JUN06ipLwsnv+dVn+OIYOvAuvBMy/Qoi6O7mQHxdPXpjy+Cd6xRkWwux7DKO+4sYILtLBRIKgsdpS2gQc7qw==",
      "license": "MIT",
      "dependencies": {
        "@types/hast": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/html-entities": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/html-entities/-/html-entities-2.6.0.tgz",
      "integrity": "sha512-kig+rMn/QOVRvr7c86gQ8lWXq+Hkv6CbAH1hLu+RG338StTpE8Z0b44SDVaqVu7HGKf27frdmUYEs9hTUX/cLQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/mdevils"
        },
        {
          "type": "patreon",
          "url": "https://patreon.com/mdevils"
        }
      ],
      "license": "MIT",
      "optional": true
    },
    "node_modules/html-url-attributes": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/html-url-attributes/-/html-url-attributes-3.0.1.tgz",
      "integrity": "sha512-ol6UPyBWqsrO6EJySPz2O7ZSr856WDrEzM5zMqp+FJJLGMW35cLYmmZnl0vztAZxRUoNZJFTCohfjuIJ8I4QBQ==",
      "license": "MIT",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/http-parser-js": {
      "version": "0.5.10",
      "resolved": "https://registry.npmjs.org/http-parser-js/-/http-parser-js-0.5.10.tgz",
      "integrity": "sha512-Pysuw9XpUq5dVc/2SMHpuTY01RFl8fttgcyunjL7eEMhGM3cI4eOmiCycJDVCo/7O7ClfQD3SaI6ftDzqOXYMA==",
      "license": "MIT"
    },
    "node_modules/http-proxy-agent": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-5.0.0.tgz",
      "integrity": "sha512-n2hY8YdoRE1i7r6M0w9DIw5GgZN0G25P8zLCRQ8rjXtTU3vsNFBI/vWK/UIeE6g5MUUz6avwAPXmL6Fy9D/90w==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@tootallnate/once": "2",
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/http-proxy-agent/node_modules/agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "debug": "4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/https-proxy-agent": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.6.tgz",
      "integrity": "sha512-vK9P5/iUfdl95AI+JVyUuIcVtd4ofvtrOr3HNtM2yxC9bnMbEdp3x01OhQNnjb8IJYi38VlTE3mBXwcfvywuSw==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "^7.1.2",
        "debug": "4"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/idb": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/idb/-/idb-7.1.1.tgz",
      "integrity": "sha512-gchesWBzyvGHRO9W8tzUWFDycow5gwjvFKfyV9FF32Y7F50yZMp7mP+T2mJIWFx49zicqyC4uefHM17o6xKIVQ==",
      "license": "ISC"
    },
    "node_modules/ignore": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/immer": {
      "version": "10.1.3",
      "resolved": "https://registry.npmjs.org/immer/-/immer-10.1.3.tgz",
      "integrity": "sha512-tmjF/k8QDKydUlm3mZU+tjM6zeq9/fFpPqH9SzWmBnVVKsPBg/V66qsMwb3/Bo90cgUN+ghdVBess+hPsxUyRw==",
      "license": "MIT",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/immer"
      }
    },
    "node_modules/import-fresh": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
      "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "devOptional": true,
      "license": "ISC"
    },
    "node_modules/inline-style-parser": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/inline-style-parser/-/inline-style-parser-0.2.4.tgz",
      "integrity": "sha512-0aO8FkhNZlj/ZIbNi7Lxxr12obT7cL1moPfE4tg1LkX7LlLfC6DeX4l2ZEud1ukP9jNQyNnfzQVqwbwmAATY4Q==",
      "license": "MIT"
    },
    "node_modules/internal-slot": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz",
      "integrity": "sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "hasown": "^2.0.2",
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/internmap": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/internmap/-/internmap-2.0.3.tgz",
      "integrity": "sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/is-alphabetical": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-alphabetical/-/is-alphabetical-2.0.1.tgz",
      "integrity": "sha512-FWyyY60MeTNyeSRpkM2Iry0G9hpr7/9kD40mD/cGQEuilcZYS4okz8SN2Q6rLCJ8gbCt6fN+rC+6tMGS99LaxQ==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/is-alphanumerical": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-alphanumerical/-/is-alphanumerical-2.0.1.tgz",
      "integrity": "sha512-hmbYhX/9MUMF5uh7tOXyK/n0ZvWpad5caBA17GsC6vyuCqaWliRG5K1qS9inmUhEMaOBIW7/whAnSwveW/LtZw==",
      "license": "MIT",
      "dependencies": {
        "is-alphabetical": "^2.0.0",
        "is-decimal": "^2.0.0"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/is-arguments": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/is-arguments/-/is-arguments-1.2.0.tgz",
      "integrity": "sha512-7bVbi0huj/wrIAOzb8U1aszg9kdi3KN/CyU19CTI7tAoZYEZoL9yCDXpbXN+uPsuWnP02cyug1gleqq+TU+YCA==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-array-buffer": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz",
      "integrity": "sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-async-function": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-async-function/-/is-async-function-2.1.1.tgz",
      "integrity": "sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "async-function": "^1.0.0",
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.1",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-bigint": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.1.0.tgz",
      "integrity": "sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-bigints": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-boolean-object": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.2.tgz",
      "integrity": "sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-bun-module": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-bun-module/-/is-bun-module-2.0.0.tgz",
      "integrity": "sha512-gNCGbnnnnFAUGKeZ9PdbyeGYJqewpmc2aKHUEMO5nQPWU9lOmv7jcmQIv+qHD8fXW6W7qfuCwX4rY9LNRjXrkQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "semver": "^7.7.1"
      }
    },
    "node_modules/is-callable": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.16.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-data-view": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.2.tgz",
      "integrity": "sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "get-intrinsic": "^1.2.6",
        "is-typed-array": "^1.1.13"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-date-object": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.1.0.tgz",
      "integrity": "sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-decimal": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-decimal/-/is-decimal-2.0.1.tgz",
      "integrity": "sha512-AAB9hiomQs5DXWcRB1rqsxGUstbRroFOPPVAomNk/3XHR5JyEZChOyTWe2oayKnsSsr/kcGqF+z6yuH6HHpN0A==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/is-extendable": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz",
      "integrity": "sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-finalizationregistry": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.1.1.tgz",
      "integrity": "sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-generator-function": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.1.0.tgz",
      "integrity": "sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.0",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-hexadecimal": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-hexadecimal/-/is-hexadecimal-2.0.1.tgz",
      "integrity": "sha512-DgZQp241c8oO6cA1SbTEWiXeoxV42vlcJxgH+B3hi1AiqqKruZR3ZGF8In3fj4+/y/7rHvlOZLZtgJ/4ttYGZg==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/is-map": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz",
      "integrity": "sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-negative-zero": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.3.tgz",
      "integrity": "sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-number-object": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.1.1.tgz",
      "integrity": "sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-path-inside": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-plain-obj": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-4.1.0.tgz",
      "integrity": "sha512-+Pgi+vMuUNkJyExiMBt5IlFoMyKnr5zhJ4Uspz58WOhBF5QoIZkFyNHIbBAtHwzVAgk5RtndVNsDRN61/mmDqg==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-plain-object": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",
      "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",
      "license": "MIT",
      "dependencies": {
        "isobject": "^3.0.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-regex": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz",
      "integrity": "sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-set": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz",
      "integrity": "sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-shared-array-buffer": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.4.tgz",
      "integrity": "sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-stream": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz",
      "integrity": "sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-string": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz",
      "integrity": "sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-symbol": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.1.1.tgz",
      "integrity": "sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-symbols": "^1.1.0",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-typed-array": {
      "version": "1.1.15",
      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.15.tgz",
      "integrity": "sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakmap": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz",
      "integrity": "sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakref": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.1.tgz",
      "integrity": "sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakset": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.4.tgz",
      "integrity": "sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/isarray": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/isobject": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
      "integrity": "sha512-WhB9zCku7EGTj/HQQRz5aUQEUeoQZH2bWcltRErOpymJ4boYE6wL9Tbr23krRPSZ+C5zqNSrSw+Cc7sZZ4b7vg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/iterator.prototype": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.5.tgz",
      "integrity": "sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.6",
        "get-proto": "^1.0.0",
        "has-symbols": "^1.1.0",
        "set-function-name": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/jackspeak": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz",
      "integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
      "dev": true,
      "license": "BlueOak-1.0.0",
      "dependencies": {
        "@isaacs/cliui": "^8.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      },
      "optionalDependencies": {
        "@pkgjs/parseargs": "^0.11.0"
      }
    },
    "node_modules/jest-worker": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-27.5.1.tgz",
      "integrity": "sha512-7vuh85V5cdDofPyxn58nrPjBktZo0u9x1g8WtjQol+jZDaE+fhN+cIvTj11GndBnMnyfrUOG1sZQxCdjKh+DKg==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/node": "*",
        "merge-stream": "^2.0.0",
        "supports-color": "^8.0.0"
      },
      "engines": {
        "node": ">= 10.13.0"
      }
    },
    "node_modules/jest-worker/node_modules/supports-color": {
      "version": "8.1.1",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz",
      "integrity": "sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/supports-color?sponsor=1"
      }
    },
    "node_modules/jiti": {
      "version": "1.21.7",
      "resolved": "https://registry.npmjs.org/jiti/-/jiti-1.21.7.tgz",
      "integrity": "sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "jiti": "bin/jiti.js"
      }
    },
    "node_modules/jose": {
      "version": "4.15.9",
      "resolved": "https://registry.npmjs.org/jose/-/jose-4.15.9.tgz",
      "integrity": "sha512-1vUQX+IdDMVPj4k8kOxgUqlcK518yluMuGZwqlr44FS1ppZB/5GWh4rZG89erpOBOJjU/OBsnCVFfapsRz6nEA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/panva"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "license": "MIT"
    },
    "node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/jsesc": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/json-bigint": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/json-bigint/-/json-bigint-1.0.0.tgz",
      "integrity": "sha512-SiPv/8VpZuWbvLSMtTDU8hEfrZWg/mH/nV/b4o0CYbSxu1UIQPLdwKOCIyLQX+VIPO5vrLX3i8qtqFyhdPSUSQ==",
      "license": "MIT",
      "dependencies": {
        "bignumber.js": "^9.0.0"
      }
    },
    "node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==",
      "dev": true,
      "license": "MIT",
      "peer": true
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-stringify-pretty-compact": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/json-stringify-pretty-compact/-/json-stringify-pretty-compact-3.0.0.tgz",
      "integrity": "sha512-Rc2suX5meI0S3bfdZuA7JMFBGkJ875ApfVyq2WHELjBiiG22My/l7/8zPpH/CfFVQHuVLd8NLR0nv6vi0BYYKA==",
      "license": "MIT"
    },
    "node_modules/json5": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.2.tgz",
      "integrity": "sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "minimist": "^1.2.0"
      },
      "bin": {
        "json5": "lib/cli.js"
      }
    },
    "node_modules/jsonwebtoken": {
      "version": "9.0.2",
      "resolved": "https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz",
      "integrity": "sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==",
      "license": "MIT",
      "dependencies": {
        "jws": "^3.2.2",
        "lodash.includes": "^4.3.0",
        "lodash.isboolean": "^3.0.3",
        "lodash.isinteger": "^4.0.4",
        "lodash.isnumber": "^3.0.3",
        "lodash.isplainobject": "^4.0.6",
        "lodash.isstring": "^4.0.1",
        "lodash.once": "^4.0.0",
        "ms": "^2.1.1",
        "semver": "^7.5.4"
      },
      "engines": {
        "node": ">=12",
        "npm": ">=6"
      }
    },
    "node_modules/jsonwebtoken/node_modules/jwa": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/jwa/-/jwa-1.4.2.tgz",
      "integrity": "sha512-eeH5JO+21J78qMvTIDdBXidBd6nG2kZjg5Ohz/1fpa28Z4CcsWUzJ1ZZyFq/3z3N17aZy+ZuBoHljASbL1WfOw==",
      "license": "MIT",
      "dependencies": {
        "buffer-equal-constant-time": "^1.0.1",
        "ecdsa-sig-formatter": "1.0.11",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/jsonwebtoken/node_modules/jws": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/jws/-/jws-3.2.2.tgz",
      "integrity": "sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==",
      "license": "MIT",
      "dependencies": {
        "jwa": "^1.4.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/jsx-ast-utils": {
      "version": "3.3.5",
      "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz",
      "integrity": "sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-includes": "^3.1.6",
        "array.prototype.flat": "^1.3.1",
        "object.assign": "^4.1.4",
        "object.values": "^1.1.6"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/jwa": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/jwa/-/jwa-2.0.1.tgz",
      "integrity": "sha512-hRF04fqJIP8Abbkq5NKGN0Bbr3JxlQ+qhZufXVr0DvujKy93ZCbXZMHDL4EOtodSbCWxOqR8MS1tXA5hwqCXDg==",
      "license": "MIT",
      "dependencies": {
        "buffer-equal-constant-time": "^1.0.1",
        "ecdsa-sig-formatter": "1.0.11",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/jwks-rsa": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/jwks-rsa/-/jwks-rsa-3.2.0.tgz",
      "integrity": "sha512-PwchfHcQK/5PSydeKCs1ylNym0w/SSv8a62DgHJ//7x2ZclCoinlsjAfDxAAbpoTPybOum/Jgy+vkvMmKz89Ww==",
      "license": "MIT",
      "dependencies": {
        "@types/express": "^4.17.20",
        "@types/jsonwebtoken": "^9.0.4",
        "debug": "^4.3.4",
        "jose": "^4.15.4",
        "limiter": "^1.1.5",
        "lru-memoizer": "^2.2.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/jws": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/jws/-/jws-4.0.0.tgz",
      "integrity": "sha512-KDncfTmOZoOMTFG4mBlG0qUIOlc03fmzH+ru6RgYVZhPkyiy/92Owlt/8UEN+a4TXR1FQetfIpJE8ApdvdVxTg==",
      "license": "MIT",
      "dependencies": {
        "jwa": "^2.0.0",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/kdbush": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/kdbush/-/kdbush-4.0.2.tgz",
      "integrity": "sha512-WbCVYJ27Sz8zi9Q7Q0xHC+05iwkm3Znipc2XTlrnJbsHMYktW4hPhXUE8Ys1engBrvffoSCqbil1JQAa7clRpA==",
      "license": "ISC"
    },
    "node_modules/keyv": {
      "version": "4.5.4",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/language-subtag-registry": {
      "version": "0.3.23",
      "resolved": "https://registry.npmjs.org/language-subtag-registry/-/language-subtag-registry-0.3.23.tgz",
      "integrity": "sha512-0K65Lea881pHotoGEa5gDlMxt3pctLi2RplBb7Ezh4rRdLEOtgi7n4EwK9lamnUCkKBqaeKRVebTq6BAxSkpXQ==",
      "dev": true,
      "license": "CC0-1.0"
    },
    "node_modules/language-tags": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/language-tags/-/language-tags-1.0.9.tgz",
      "integrity": "sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "language-subtag-registry": "^0.3.20"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/levn": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1",
        "type-check": "~0.4.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/lilconfig": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-2.1.0.tgz",
      "integrity": "sha512-utWOt/GHzuUxnLKxB6dk81RoOeoNeHgbrXiuGk4yyF5qlRz+iIVWu56E2fqGHFrXz0QNUhLB/8nKqvRH66JKGQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/limiter": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/limiter/-/limiter-1.1.5.tgz",
      "integrity": "sha512-FWWMIEOxz3GwUI4Ts/IvgVy6LPvoMPgjMdQ185nN6psJyBJ4yOpzqm695/h5umdLJg2vW3GR5iG11MAkR2AzJA=="
    },
    "node_modules/lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/loader-runner": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/loader-runner/-/loader-runner-4.3.0.tgz",
      "integrity": "sha512-3R/1M+yS3j5ou80Me59j7F9IMs4PXs3VqRrm0TU3AbKPxlmpoY1TNscJV/oGJXo8qCatFGTfDbY6W6ipGOYXfg==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=6.11.5"
      }
    },
    "node_modules/locate-path": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-locate": "^5.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "license": "MIT"
    },
    "node_modules/lodash.camelcase": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/lodash.camelcase/-/lodash.camelcase-4.3.0.tgz",
      "integrity": "sha512-TwuEnCnxbc3rAvhf/LbG7tJUDzhqXyFnv3dtzLOPgCG/hODL7WFnsbwktkD7yUV0RrreP/l1PALq/YSg6VvjlA==",
      "license": "MIT"
    },
    "node_modules/lodash.clonedeep": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.clonedeep/-/lodash.clonedeep-4.5.0.tgz",
      "integrity": "sha512-H5ZhCF25riFd9uB5UCkVKo61m3S/xZk1x4wA6yp/L3RFP6Z/eHH1ymQcGLo7J3GMPfm0V/7m1tryHuGVxpqEBQ==",
      "license": "MIT"
    },
    "node_modules/lodash.debounce": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/lodash.debounce/-/lodash.debounce-4.0.8.tgz",
      "integrity": "sha512-FT1yDzDYEoYWhnSGnpE/4Kj1fLZkDFyqRb7fNt6FdYOSxlUWAtp42Eh6Wb0rGIv/m9Bgo7x4GhQbm5Ys4SG5ow==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lodash.includes": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz",
      "integrity": "sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==",
      "license": "MIT"
    },
    "node_modules/lodash.isboolean": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz",
      "integrity": "sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==",
      "license": "MIT"
    },
    "node_modules/lodash.isinteger": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz",
      "integrity": "sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==",
      "license": "MIT"
    },
    "node_modules/lodash.isnumber": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz",
      "integrity": "sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==",
      "license": "MIT"
    },
    "node_modules/lodash.isplainobject": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==",
      "license": "MIT"
    },
    "node_modules/lodash.isstring": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",
      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==",
      "license": "MIT"
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lodash.once": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz",
      "integrity": "sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==",
      "license": "MIT"
    },
    "node_modules/long": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/long/-/long-5.3.2.tgz",
      "integrity": "sha512-mNAgZ1GmyNhD7AuqnTG3/VQ26o760+ZYBPKjPvugO8+nLbYfX6TVpJPseBvopbdY+qpZ/lKUnmEc1LeZYS3QAA==",
      "license": "Apache-2.0"
    },
    "node_modules/longest-streak": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/longest-streak/-/longest-streak-3.1.0.tgz",
      "integrity": "sha512-9Ri+o0JYgehTaVBBDoMqIl8GXtbWg711O3srftcHhZ0dqnETqLaoIK0x17fUw9rFSlK/0NlsKe0Ahhyl5pXE2g==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "license": "MIT",
      "dependencies": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      },
      "bin": {
        "loose-envify": "cli.js"
      }
    },
    "node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/lru-memoizer": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/lru-memoizer/-/lru-memoizer-2.3.0.tgz",
      "integrity": "sha512-GXn7gyHAMhO13WSKrIiNfztwxodVsP8IoZ3XfrJV4yH2x0/OeTO/FIaAHTY5YekdGgW94njfuKmyyt1E0mR6Ug==",
      "license": "MIT",
      "dependencies": {
        "lodash.clonedeep": "^4.5.0",
        "lru-cache": "6.0.0"
      }
    },
    "node_modules/lru-memoizer/node_modules/lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "license": "ISC",
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/lru-memoizer/node_modules/yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
      "license": "ISC"
    },
    "node_modules/lucide-react": {
      "version": "0.294.0",
      "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.294.0.tgz",
      "integrity": "sha512-V7o0/VECSGbLHn3/1O67FUgBwWB+hmzshrgDVRJQhMh8uj5D3HBuIvhuAmQTtlupILSplwIZg5FTc4tTKMA2SA==",
      "license": "ISC",
      "peerDependencies": {
        "react": "^16.5.1 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/mapbox-gl": {
      "version": "3.15.0",
      "resolved": "https://registry.npmjs.org/mapbox-gl/-/mapbox-gl-3.15.0.tgz",
      "integrity": "sha512-I42ffZpiXwt0PG3PO6gMYQnoz+AInkirLe/+zoHjcfBTFoFkKYtu5gFwT1WGeSvNrVTqG2Bwp9zUjPw0PFGY+w==",
      "license": "SEE LICENSE IN LICENSE.txt",
      "workspaces": [
        "src/style-spec",
        "test/build/typings"
      ],
      "dependencies": {
        "@mapbox/jsonlint-lines-primitives": "^2.0.2",
        "@mapbox/mapbox-gl-supported": "^3.0.0",
        "@mapbox/point-geometry": "^1.1.0",
        "@mapbox/tiny-sdf": "^2.0.6",
        "@mapbox/unitbezier": "^0.0.1",
        "@mapbox/vector-tile": "^2.0.4",
        "@mapbox/whoots-js": "^3.1.0",
        "@types/geojson": "^7946.0.16",
        "@types/geojson-vt": "^3.2.5",
        "@types/mapbox__point-geometry": "^0.1.4",
        "@types/pbf": "^3.0.5",
        "@types/supercluster": "^7.1.3",
        "cheap-ruler": "^4.0.0",
        "csscolorparser": "~1.0.3",
        "earcut": "^3.0.1",
        "geojson-vt": "^4.0.2",
        "gl-matrix": "^3.4.4",
        "grid-index": "^1.1.0",
        "kdbush": "^4.0.2",
        "martinez-polygon-clipping": "^0.7.4",
        "murmurhash-js": "^1.0.0",
        "pbf": "^4.0.1",
        "potpack": "^2.0.0",
        "quickselect": "^3.0.0",
        "serialize-to-js": "^3.1.2",
        "supercluster": "^8.0.1",
        "tinyqueue": "^3.0.0"
      }
    },
    "node_modules/markdown-table": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/markdown-table/-/markdown-table-3.0.4.tgz",
      "integrity": "sha512-wiYz4+JrLyb/DqW2hkFJxP7Vd7JuTDm77fvbM8VfEQdmSMqcImWeeRbHwZjBjIFki/VaMK2BhFi7oUUZeM5bqw==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/martinez-polygon-clipping": {
      "version": "0.7.4",
      "resolved": "https://registry.npmjs.org/martinez-polygon-clipping/-/martinez-polygon-clipping-0.7.4.tgz",
      "integrity": "sha512-jBEwrKtA0jTagUZj2bnmb4Yg2s4KnJGRePStgI7bAVjtcipKiF39R4LZ2V/UT61jMYWrTcBhPazexeqd6JAVtw==",
      "license": "MIT",
      "dependencies": {
        "robust-predicates": "^2.0.4",
        "splaytree": "^0.1.4",
        "tinyqueue": "^1.2.0"
      }
    },
    "node_modules/martinez-polygon-clipping/node_modules/tinyqueue": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/tinyqueue/-/tinyqueue-1.2.3.tgz",
      "integrity": "sha512-Qz9RgWuO9l8lT+Y9xvbzhPT2efIUIFd69N7eF7tJ9lnQl0iLj1M7peK7IoUGZL9DJHw9XftqLreccfxcQgYLxA==",
      "license": "ISC"
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/mdast-util-find-and-replace": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/mdast-util-find-and-replace/-/mdast-util-find-and-replace-3.0.2.tgz",
      "integrity": "sha512-Tmd1Vg/m3Xz43afeNxDIhWRtFZgM2VLyaf4vSTYwudTyeuTneoL3qtWMA5jeLyz/O1vDJmmV4QuScFCA2tBPwg==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "escape-string-regexp": "^5.0.0",
        "unist-util-is": "^6.0.0",
        "unist-util-visit-parents": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-5.0.0.tgz",
      "integrity": "sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/mdast-util-from-markdown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/mdast-util-from-markdown/-/mdast-util-from-markdown-2.0.2.tgz",
      "integrity": "sha512-uZhTV/8NBuw0WHkPTrCqDOl0zVe1BIng5ZtHoDk49ME1qqcjYmmLmOf0gELgcRMxN4w2iuIeVso5/6QymSrgmA==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "@types/unist": "^3.0.0",
        "decode-named-character-reference": "^1.0.0",
        "devlop": "^1.0.0",
        "mdast-util-to-string": "^4.0.0",
        "micromark": "^4.0.0",
        "micromark-util-decode-numeric-character-reference": "^2.0.0",
        "micromark-util-decode-string": "^2.0.0",
        "micromark-util-normalize-identifier": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0",
        "unist-util-stringify-position": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-gfm": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/mdast-util-gfm/-/mdast-util-gfm-3.1.0.tgz",
      "integrity": "sha512-0ulfdQOM3ysHhCJ1p06l0b0VKlhU0wuQs3thxZQagjcjPrlFRqY215uZGHHJan9GEAXd9MbfPjFJz+qMkVR6zQ==",
      "license": "MIT",
      "dependencies": {
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-gfm-autolink-literal": "^2.0.0",
        "mdast-util-gfm-footnote": "^2.0.0",
        "mdast-util-gfm-strikethrough": "^2.0.0",
        "mdast-util-gfm-table": "^2.0.0",
        "mdast-util-gfm-task-list-item": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-gfm-autolink-literal": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/mdast-util-gfm-autolink-literal/-/mdast-util-gfm-autolink-literal-2.0.1.tgz",
      "integrity": "sha512-5HVP2MKaP6L+G6YaxPNjuL0BPrq9orG3TsrZ9YXbA3vDw/ACI4MEsnoDpn6ZNm7GnZgtAcONJyPhOP8tNJQavQ==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "ccount": "^2.0.0",
        "devlop": "^1.0.0",
        "mdast-util-find-and-replace": "^3.0.0",
        "micromark-util-character": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-gfm-footnote": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mdast-util-gfm-footnote/-/mdast-util-gfm-footnote-2.1.0.tgz",
      "integrity": "sha512-sqpDWlsHn7Ac9GNZQMeUzPQSMzR6Wv0WKRNvQRg0KqHh02fpTz69Qc1QSseNX29bhz1ROIyNyxExfawVKTm1GQ==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "devlop": "^1.1.0",
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0",
        "micromark-util-normalize-identifier": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-gfm-strikethrough": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/mdast-util-gfm-strikethrough/-/mdast-util-gfm-strikethrough-2.0.0.tgz",
      "integrity": "sha512-mKKb915TF+OC5ptj5bJ7WFRPdYtuHv0yTRxK2tJvi+BDqbkiG7h7u/9SI89nRAYcmap2xHQL9D+QG/6wSrTtXg==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-gfm-table": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/mdast-util-gfm-table/-/mdast-util-gfm-table-2.0.0.tgz",
      "integrity": "sha512-78UEvebzz/rJIxLvE7ZtDd/vIQ0RHv+3Mh5DR96p7cS7HsBhYIICDBCu8csTNWNO6tBWfqXPWekRuj2FNOGOZg==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "devlop": "^1.0.0",
        "markdown-table": "^3.0.0",
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-gfm-task-list-item": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/mdast-util-gfm-task-list-item/-/mdast-util-gfm-task-list-item-2.0.0.tgz",
      "integrity": "sha512-IrtvNvjxC1o06taBAVJznEnkiHxLFTzgonUdy8hzFVeDun0uTjxxrRGVaNFqkU1wJR3RBPEfsxmU6jDWPofrTQ==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "devlop": "^1.0.0",
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-mdx-expression": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/mdast-util-mdx-expression/-/mdast-util-mdx-expression-2.0.1.tgz",
      "integrity": "sha512-J6f+9hUp+ldTZqKRSg7Vw5V6MqjATc+3E4gf3CFNcuZNWD8XdyI6zQ8GqH7f8169MM6P7hMBRDVGnn7oHB9kXQ==",
      "license": "MIT",
      "dependencies": {
        "@types/estree-jsx": "^1.0.0",
        "@types/hast": "^3.0.0",
        "@types/mdast": "^4.0.0",
        "devlop": "^1.0.0",
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-mdx-jsx": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/mdast-util-mdx-jsx/-/mdast-util-mdx-jsx-3.2.0.tgz",
      "integrity": "sha512-lj/z8v0r6ZtsN/cGNNtemmmfoLAFZnjMbNyLzBafjzikOM+glrjNHPlf6lQDOTccj9n5b0PPihEBbhneMyGs1Q==",
      "license": "MIT",
      "dependencies": {
        "@types/estree-jsx": "^1.0.0",
        "@types/hast": "^3.0.0",
        "@types/mdast": "^4.0.0",
        "@types/unist": "^3.0.0",
        "ccount": "^2.0.0",
        "devlop": "^1.1.0",
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0",
        "parse-entities": "^4.0.0",
        "stringify-entities": "^4.0.0",
        "unist-util-stringify-position": "^4.0.0",
        "vfile-message": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-mdxjs-esm": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/mdast-util-mdxjs-esm/-/mdast-util-mdxjs-esm-2.0.1.tgz",
      "integrity": "sha512-EcmOpxsZ96CvlP03NghtH1EsLtr0n9Tm4lPUJUBccV9RwUOneqSycg19n5HGzCf+10LozMRSObtVr3ee1WoHtg==",
      "license": "MIT",
      "dependencies": {
        "@types/estree-jsx": "^1.0.0",
        "@types/hast": "^3.0.0",
        "@types/mdast": "^4.0.0",
        "devlop": "^1.0.0",
        "mdast-util-from-markdown": "^2.0.0",
        "mdast-util-to-markdown": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-phrasing": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/mdast-util-phrasing/-/mdast-util-phrasing-4.1.0.tgz",
      "integrity": "sha512-TqICwyvJJpBwvGAMZjj4J2n0X8QWp21b9l0o7eXyVJ25YNWYbJDVIyD1bZXE6WtV6RmKJVYmQAKWa0zWOABz2w==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "unist-util-is": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-to-hast": {
      "version": "13.2.0",
      "resolved": "https://registry.npmjs.org/mdast-util-to-hast/-/mdast-util-to-hast-13.2.0.tgz",
      "integrity": "sha512-QGYKEuUsYT9ykKBCMOEDLsU5JRObWQusAolFMeko/tYPufNkRffBAQjIE+99jbA87xv6FgmjLtwjh9wBWajwAA==",
      "license": "MIT",
      "dependencies": {
        "@types/hast": "^3.0.0",
        "@types/mdast": "^4.0.0",
        "@ungap/structured-clone": "^1.0.0",
        "devlop": "^1.0.0",
        "micromark-util-sanitize-uri": "^2.0.0",
        "trim-lines": "^3.0.0",
        "unist-util-position": "^5.0.0",
        "unist-util-visit": "^5.0.0",
        "vfile": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-to-markdown": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/mdast-util-to-markdown/-/mdast-util-to-markdown-2.1.2.tgz",
      "integrity": "sha512-xj68wMTvGXVOKonmog6LwyJKrYXZPvlwabaryTjLh9LuvovB/KAH+kvi8Gjj+7rJjsFi23nkUxRQv1KqSroMqA==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "@types/unist": "^3.0.0",
        "longest-streak": "^3.0.0",
        "mdast-util-phrasing": "^4.0.0",
        "mdast-util-to-string": "^4.0.0",
        "micromark-util-classify-character": "^2.0.0",
        "micromark-util-decode-string": "^2.0.0",
        "unist-util-visit": "^5.0.0",
        "zwitch": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/mdast-util-to-string": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/mdast-util-to-string/-/mdast-util-to-string-4.0.0.tgz",
      "integrity": "sha512-0H44vDimn51F0YwvxSJSm0eCDOJTRlmN0R1yBh4HLj9wiV1Dn0QoXGbvFAWj2hSItVTlCmBF1hqKlIyUBVFLPg==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/merge-stream": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
      "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==",
      "dev": true,
      "license": "MIT",
      "peer": true
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/micromark": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/micromark/-/micromark-4.0.2.tgz",
      "integrity": "sha512-zpe98Q6kvavpCr1NPVSCMebCKfD7CA2NqZ+rykeNhONIJBpc1tFKt9hucLGwha3jNTNI8lHpctWJWoimVF4PfA==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@types/debug": "^4.0.0",
        "debug": "^4.0.0",
        "decode-named-character-reference": "^1.0.0",
        "devlop": "^1.0.0",
        "micromark-core-commonmark": "^2.0.0",
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-chunked": "^2.0.0",
        "micromark-util-combine-extensions": "^2.0.0",
        "micromark-util-decode-numeric-character-reference": "^2.0.0",
        "micromark-util-encode": "^2.0.0",
        "micromark-util-normalize-identifier": "^2.0.0",
        "micromark-util-resolve-all": "^2.0.0",
        "micromark-util-sanitize-uri": "^2.0.0",
        "micromark-util-subtokenize": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-core-commonmark": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/micromark-core-commonmark/-/micromark-core-commonmark-2.0.3.tgz",
      "integrity": "sha512-RDBrHEMSxVFLg6xvnXmb1Ayr2WzLAWjeSATAoxwKYJV94TeNavgoIdA0a9ytzDSVzBy2YKFK+emCPOEibLeCrg==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "decode-named-character-reference": "^1.0.0",
        "devlop": "^1.0.0",
        "micromark-factory-destination": "^2.0.0",
        "micromark-factory-label": "^2.0.0",
        "micromark-factory-space": "^2.0.0",
        "micromark-factory-title": "^2.0.0",
        "micromark-factory-whitespace": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-chunked": "^2.0.0",
        "micromark-util-classify-character": "^2.0.0",
        "micromark-util-html-tag-name": "^2.0.0",
        "micromark-util-normalize-identifier": "^2.0.0",
        "micromark-util-resolve-all": "^2.0.0",
        "micromark-util-subtokenize": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-extension-gfm": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-gfm/-/micromark-extension-gfm-3.0.0.tgz",
      "integrity": "sha512-vsKArQsicm7t0z2GugkCKtZehqUm31oeGBV/KVSorWSy8ZlNAv7ytjFhvaryUiCUJYqs+NoE6AFhpQvBTM6Q4w==",
      "license": "MIT",
      "dependencies": {
        "micromark-extension-gfm-autolink-literal": "^2.0.0",
        "micromark-extension-gfm-footnote": "^2.0.0",
        "micromark-extension-gfm-strikethrough": "^2.0.0",
        "micromark-extension-gfm-table": "^2.0.0",
        "micromark-extension-gfm-tagfilter": "^2.0.0",
        "micromark-extension-gfm-task-list-item": "^2.0.0",
        "micromark-util-combine-extensions": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-gfm-autolink-literal": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-gfm-autolink-literal/-/micromark-extension-gfm-autolink-literal-2.1.0.tgz",
      "integrity": "sha512-oOg7knzhicgQ3t4QCjCWgTmfNhvQbDDnJeVu9v81r7NltNCVmhPy1fJRX27pISafdjL+SVc4d3l48Gb6pbRypw==",
      "license": "MIT",
      "dependencies": {
        "micromark-util-character": "^2.0.0",
        "micromark-util-sanitize-uri": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-gfm-footnote": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-gfm-footnote/-/micromark-extension-gfm-footnote-2.1.0.tgz",
      "integrity": "sha512-/yPhxI1ntnDNsiHtzLKYnE3vf9JZ6cAisqVDauhp4CEHxlb4uoOTxOCJ+9s51bIB8U1N1FJ1RXOKTIlD5B/gqw==",
      "license": "MIT",
      "dependencies": {
        "devlop": "^1.0.0",
        "micromark-core-commonmark": "^2.0.0",
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-normalize-identifier": "^2.0.0",
        "micromark-util-sanitize-uri": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-gfm-strikethrough": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-gfm-strikethrough/-/micromark-extension-gfm-strikethrough-2.1.0.tgz",
      "integrity": "sha512-ADVjpOOkjz1hhkZLlBiYA9cR2Anf8F4HqZUO6e5eDcPQd0Txw5fxLzzxnEkSkfnD0wziSGiv7sYhk/ktvbf1uw==",
      "license": "MIT",
      "dependencies": {
        "devlop": "^1.0.0",
        "micromark-util-chunked": "^2.0.0",
        "micromark-util-classify-character": "^2.0.0",
        "micromark-util-resolve-all": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-gfm-table": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/micromark-extension-gfm-table/-/micromark-extension-gfm-table-2.1.1.tgz",
      "integrity": "sha512-t2OU/dXXioARrC6yWfJ4hqB7rct14e8f7m0cbI5hUmDyyIlwv5vEtooptH8INkbLzOatzKuVbQmAYcbWoyz6Dg==",
      "license": "MIT",
      "dependencies": {
        "devlop": "^1.0.0",
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-gfm-tagfilter": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-gfm-tagfilter/-/micromark-extension-gfm-tagfilter-2.0.0.tgz",
      "integrity": "sha512-xHlTOmuCSotIA8TW1mDIM6X2O1SiX5P9IuDtqGonFhEK0qgRI4yeC6vMxEV2dgyr2TiD+2PQ10o+cOhdVAcwfg==",
      "license": "MIT",
      "dependencies": {
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-extension-gfm-task-list-item": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/micromark-extension-gfm-task-list-item/-/micromark-extension-gfm-task-list-item-2.1.0.tgz",
      "integrity": "sha512-qIBZhqxqI6fjLDYFTBIa4eivDMnP+OZqsNwmQ3xNLE4Cxwc+zfQEfbs6tzAo2Hjq+bh6q5F+Z8/cksrLFYWQQw==",
      "license": "MIT",
      "dependencies": {
        "devlop": "^1.0.0",
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/micromark-factory-destination": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-factory-destination/-/micromark-factory-destination-2.0.1.tgz",
      "integrity": "sha512-Xe6rDdJlkmbFRExpTOmRj9N3MaWmbAgdpSrBQvCFqhezUn4AHqJHbaEnfbVYYiexVSs//tqOdY/DxhjdCiJnIA==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-character": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-factory-label": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-factory-label/-/micromark-factory-label-2.0.1.tgz",
      "integrity": "sha512-VFMekyQExqIW7xIChcXn4ok29YE3rnuyveW3wZQWWqF4Nv9Wk5rgJ99KzPvHjkmPXF93FXIbBp6YdW3t71/7Vg==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "devlop": "^1.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-factory-space": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-factory-space/-/micromark-factory-space-2.0.1.tgz",
      "integrity": "sha512-zRkxjtBxxLd2Sc0d+fbnEunsTj46SWXgXciZmHq0kDYGnck/ZSGj9/wULTV95uoeYiK5hRXP2mJ98Uo4cq/LQg==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-character": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-factory-title": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-factory-title/-/micromark-factory-title-2.0.1.tgz",
      "integrity": "sha512-5bZ+3CjhAd9eChYTHsjy6TGxpOFSKgKKJPJxr293jTbfry2KDoWkhBb6TcPVB4NmzaPhMs1Frm9AZH7OD4Cjzw==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-factory-whitespace": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-factory-whitespace/-/micromark-factory-whitespace-2.0.1.tgz",
      "integrity": "sha512-Ob0nuZ3PKt/n0hORHyvoD9uZhr+Za8sFoP+OnMcnWK5lngSzALgQYKMr9RJVOWLqQYuyn6ulqGWSXdwf6F80lQ==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-factory-space": "^2.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-util-character": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/micromark-util-character/-/micromark-util-character-2.1.1.tgz",
      "integrity": "sha512-wv8tdUTJ3thSFFFJKtpYKOYiGP2+v96Hvk4Tu8KpCAsTMs6yi+nVmGh1syvSCsaxz45J6Jbw+9DD6g97+NV67Q==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-util-chunked": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-chunked/-/micromark-util-chunked-2.0.1.tgz",
      "integrity": "sha512-QUNFEOPELfmvv+4xiNg2sRYeS/P84pTW0TCgP5zc9FpXetHY0ab7SxKyAQCNCc1eK0459uoLI1y5oO5Vc1dbhA==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-symbol": "^2.0.0"
      }
    },
    "node_modules/micromark-util-classify-character": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-classify-character/-/micromark-util-classify-character-2.0.1.tgz",
      "integrity": "sha512-K0kHzM6afW/MbeWYWLjoHQv1sgg2Q9EccHEDzSkxiP/EaagNzCm7T/WMKZ3rjMbvIpvBiZgwR3dKMygtA4mG1Q==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-character": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-util-combine-extensions": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-combine-extensions/-/micromark-util-combine-extensions-2.0.1.tgz",
      "integrity": "sha512-OnAnH8Ujmy59JcyZw8JSbK9cGpdVY44NKgSM7E9Eh7DiLS2E9RNQf0dONaGDzEG9yjEl5hcqeIsj4hfRkLH/Bg==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-chunked": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-util-decode-numeric-character-reference": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/micromark-util-decode-numeric-character-reference/-/micromark-util-decode-numeric-character-reference-2.0.2.tgz",
      "integrity": "sha512-ccUbYk6CwVdkmCQMyr64dXz42EfHGkPQlBj5p7YVGzq8I7CtjXZJrubAYezf7Rp+bjPseiROqe7G6foFd+lEuw==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-symbol": "^2.0.0"
      }
    },
    "node_modules/micromark-util-decode-string": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-decode-string/-/micromark-util-decode-string-2.0.1.tgz",
      "integrity": "sha512-nDV/77Fj6eH1ynwscYTOsbK7rR//Uj0bZXBwJZRfaLEJ1iGBR6kIfNmlNqaqJf649EP0F3NWNdeJi03elllNUQ==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "decode-named-character-reference": "^1.0.0",
        "micromark-util-character": "^2.0.0",
        "micromark-util-decode-numeric-character-reference": "^2.0.0",
        "micromark-util-symbol": "^2.0.0"
      }
    },
    "node_modules/micromark-util-encode": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-encode/-/micromark-util-encode-2.0.1.tgz",
      "integrity": "sha512-c3cVx2y4KqUnwopcO9b/SCdo2O67LwJJ/UyqGfbigahfegL9myoEFoDYZgkT7f36T0bLrM9hZTAaAyH+PCAXjw==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT"
    },
    "node_modules/micromark-util-html-tag-name": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-html-tag-name/-/micromark-util-html-tag-name-2.0.1.tgz",
      "integrity": "sha512-2cNEiYDhCWKI+Gs9T0Tiysk136SnR13hhO8yW6BGNyhOC4qYFnwF1nKfD3HFAIXA5c45RrIG1ub11GiXeYd1xA==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT"
    },
    "node_modules/micromark-util-normalize-identifier": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-normalize-identifier/-/micromark-util-normalize-identifier-2.0.1.tgz",
      "integrity": "sha512-sxPqmo70LyARJs0w2UclACPUUEqltCkJ6PhKdMIDuJ3gSf/Q+/GIe3WKl0Ijb/GyH9lOpUkRAO2wp0GVkLvS9Q==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-symbol": "^2.0.0"
      }
    },
    "node_modules/micromark-util-resolve-all": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-resolve-all/-/micromark-util-resolve-all-2.0.1.tgz",
      "integrity": "sha512-VdQyxFWFT2/FGJgwQnJYbe1jjQoNTS4RjglmSjTUlpUMa95Htx9NHeYW4rGDJzbjvCsl9eLjMQwGeElsqmzcHg==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-util-sanitize-uri": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-sanitize-uri/-/micromark-util-sanitize-uri-2.0.1.tgz",
      "integrity": "sha512-9N9IomZ/YuGGZZmQec1MbgxtlgougxTodVwDzzEouPKo3qFWvymFHWcnDi2vzV1ff6kas9ucW+o3yzJK9YB1AQ==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "micromark-util-character": "^2.0.0",
        "micromark-util-encode": "^2.0.0",
        "micromark-util-symbol": "^2.0.0"
      }
    },
    "node_modules/micromark-util-subtokenize": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/micromark-util-subtokenize/-/micromark-util-subtokenize-2.1.0.tgz",
      "integrity": "sha512-XQLu552iSctvnEcgXw6+Sx75GflAPNED1qx7eBJ+wydBb2KCbRZe+NwvIEEMM83uml1+2WSXpBAcp9IUCgCYWA==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "devlop": "^1.0.0",
        "micromark-util-chunked": "^2.0.0",
        "micromark-util-symbol": "^2.0.0",
        "micromark-util-types": "^2.0.0"
      }
    },
    "node_modules/micromark-util-symbol": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/micromark-util-symbol/-/micromark-util-symbol-2.0.1.tgz",
      "integrity": "sha512-vs5t8Apaud9N28kgCrRUdEed4UJ+wWNvicHLPxCa9ENlYuAY31M0ETy5y1vA33YoNPDFTghEbnh6efaE8h4x0Q==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT"
    },
    "node_modules/micromark-util-types": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/micromark-util-types/-/micromark-util-types-2.0.2.tgz",
      "integrity": "sha512-Yw0ECSpJoViF1qTU4DC6NwtC4aWGt1EkzaQB8KPPyCRR8z9TWeV0HbEFGTO+ZY1wB22zmxnJqhPyTpOVCpeHTA==",
      "funding": [
        {
          "type": "GitHub Sponsors",
          "url": "https://github.com/sponsors/unifiedjs"
        },
        {
          "type": "OpenCollective",
          "url": "https://opencollective.com/unified"
        }
      ],
      "license": "MIT"
    },
    "node_modules/micromatch": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "braces": "^3.0.3",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/micromatch/node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/mime": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-3.0.0.tgz",
      "integrity": "sha512-jSCU7/VB1loIWBZe14aEYHU/+1UMEHoaO7qxCOVJOw9GgH72VAWppxNcjU+x9a2k3GSIBXNKxXQFqRvvZ7vr3A==",
      "license": "MIT",
      "optional": true,
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "devOptional": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/minimist": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/minipass": {
      "version": "7.1.2",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/murmurhash-js": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/murmurhash-js/-/murmurhash-js-1.0.0.tgz",
      "integrity": "sha512-TvmkNhkv8yct0SVBSy+o8wYzXjE4Zz3PCesbfs8HiCXXdcTuocApFv11UWlNFWKYsP2okqrhb7JNlSm9InBhIw==",
      "license": "MIT"
    },
    "node_modules/mz": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
      "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "any-promise": "^1.0.0",
        "object-assign": "^4.0.1",
        "thenify-all": "^1.0.0"
      }
    },
    "node_modules/nanoid": {
      "version": "3.3.11",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/napi-postinstall": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/napi-postinstall/-/napi-postinstall-0.3.3.tgz",
      "integrity": "sha512-uTp172LLXSxuSYHv/kou+f6KW3SMppU9ivthaVTXian9sOt3XM/zHYHpRZiLgQoxeWfYUnslNWQHF1+G71xcow==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "napi-postinstall": "lib/cli.js"
      },
      "engines": {
        "node": "^12.20.0 || ^14.18.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/napi-postinstall"
      }
    },
    "node_modules/natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/neo-async": {
      "version": "2.6.2",
      "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.2.tgz",
      "integrity": "sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==",
      "dev": true,
      "license": "MIT",
      "peer": true
    },
    "node_modules/next": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/next/-/next-14.0.0.tgz",
      "integrity": "sha512-J0jHKBJpB9zd4+c153sair0sz44mbaCHxggs8ryVXSFBuBqJ8XdE9/ozoV85xGh2VnSjahwntBZZgsihL9QznA==",
      "license": "MIT",
      "dependencies": {
        "@next/env": "14.0.0",
        "@swc/helpers": "0.5.2",
        "busboy": "1.6.0",
        "caniuse-lite": "^1.0.30001406",
        "postcss": "8.4.31",
        "styled-jsx": "5.1.1",
        "watchpack": "2.4.0"
      },
      "bin": {
        "next": "dist/bin/next"
      },
      "engines": {
        "node": ">=18.17.0"
      },
      "optionalDependencies": {
        "@next/swc-darwin-arm64": "14.0.0",
        "@next/swc-darwin-x64": "14.0.0",
        "@next/swc-linux-arm64-gnu": "14.0.0",
        "@next/swc-linux-arm64-musl": "14.0.0",
        "@next/swc-linux-x64-gnu": "14.0.0",
        "@next/swc-linux-x64-musl": "14.0.0",
        "@next/swc-win32-arm64-msvc": "14.0.0",
        "@next/swc-win32-ia32-msvc": "14.0.0",
        "@next/swc-win32-x64-msvc": "14.0.0"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.1.0",
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "sass": "^1.3.0"
      },
      "peerDependenciesMeta": {
        "@opentelemetry/api": {
          "optional": true
        },
        "sass": {
          "optional": true
        }
      }
    },
    "node_modules/node-fetch": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
      "license": "MIT",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/node-forge": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/node-forge/-/node-forge-1.3.1.tgz",
      "integrity": "sha512-dPEtOeMvF9VMcYV/1Wb8CPoVAXtp6MKMlcbAt4ddqmGqUJ6fQZFXkNZNkNlfevtNkGtaSoXf/vNNNSvgrdXwtA==",
      "license": "(BSD-3-Clause OR GPL-2.0)",
      "engines": {
        "node": ">= 6.13.0"
      }
    },
    "node_modules/node-releases": {
      "version": "2.0.21",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.21.tgz",
      "integrity": "sha512-5b0pgg78U3hwXkCM8Z9b2FJdPZlr9Psr9V2gQPESdGHqbntyFJKFW4r5TeWGFzafGY3hzs1JC62VEQMbl1JFkw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/normalize-range": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
      "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-hash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
      "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
      "devOptional": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/object-inspect": {
      "version": "1.13.4",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
      "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object-is": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/object-is/-/object-is-1.1.6.tgz",
      "integrity": "sha512-F8cZ+KfGlSGi09lJT7/Nd6KJZ9ygtvYC0/UYYLI9nmQKLMnydpB9yvbv9K1uSkEu7FU9vYPmVwLg328tX+ot3Q==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.assign": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.7.tgz",
      "integrity": "sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0",
        "has-symbols": "^1.1.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object.entries": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/object.entries/-/object.entries-1.1.9.tgz",
      "integrity": "sha512-8u/hfXFRBD1O0hPUjioLhoWFHRmt6tKA4/vZPyckBr18l1KE9uHrFaFaUi8MDRTpi4uak2goyPTSNJLXX2k2Hw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.fromentries": {
      "version": "2.0.8",
      "resolved": "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz",
      "integrity": "sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object.groupby": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/object.groupby/-/object.groupby-1.0.3.tgz",
      "integrity": "sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.values": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.2.1.tgz",
      "integrity": "sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/odash": {
      "version": "0.0.1-security",
      "resolved": "https://registry.npmjs.org/odash/-/odash-0.0.1-security.tgz",
      "integrity": "sha512-1Hjt9r5jub62u+kk5xs1LLB56DOLiNRTedeveJyXwMazJHcSE0XQoSY4eBd4BaXvFcwlsiA3u6zhs/Q2h5uvqQ=="
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "devOptional": true,
      "license": "ISC",
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/openai": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/openai/-/openai-6.0.1.tgz",
      "integrity": "sha512-Xf9k3/Ezckp0aQmkU7LTXPg9dTxo3uspuJqxotHF3Jscq0r7EU0KEoqesQVxoQ6YeAzd/jlm7kxayZufpYRJUQ==",
      "license": "Apache-2.0",
      "bin": {
        "openai": "bin/cli"
      },
      "peerDependencies": {
        "ws": "^8.18.0",
        "zod": "^3.25 || ^4.0"
      },
      "peerDependenciesMeta": {
        "ws": {
          "optional": true
        },
        "zod": {
          "optional": true
        }
      }
    },
    "node_modules/optionator": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "deep-is": "^0.1.3",
        "fast-levenshtein": "^2.0.6",
        "levn": "^0.4.1",
        "prelude-ls": "^1.2.1",
        "type-check": "^0.4.0",
        "word-wrap": "^1.2.5"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/own-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/own-keys/-/own-keys-1.0.1.tgz",
      "integrity": "sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "get-intrinsic": "^1.2.6",
        "object-keys": "^1.1.1",
        "safe-push-apply": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/p-limit": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "yocto-queue": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-limit": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/package-json-from-dist": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
      "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
      "dev": true,
      "license": "BlueOak-1.0.0"
    },
    "node_modules/parchment": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/parchment/-/parchment-1.1.4.tgz",
      "integrity": "sha512-J5FBQt/pM2inLzg4hEWmzQx/8h8D0CiDxaG3vyp9rKrQRSDgBlhjdP5jQGgosEajXPSQouXGHOmVdgo7QmJuOg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/parse-entities": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/parse-entities/-/parse-entities-4.0.2.tgz",
      "integrity": "sha512-GG2AQYWoLgL877gQIKeRPGO1xF9+eG1ujIb5soS5gPvLQ1y2o8FL90w2QWNdf9I361Mpp7726c+lj3U0qK1uGw==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^2.0.0",
        "character-entities-legacy": "^3.0.0",
        "character-reference-invalid": "^2.0.0",
        "decode-named-character-reference": "^1.0.0",
        "is-alphanumerical": "^2.0.0",
        "is-decimal": "^2.0.0",
        "is-hexadecimal": "^2.0.0"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/parse-entities/node_modules/@types/unist": {
      "version": "2.0.11",
      "resolved": "https://registry.npmjs.org/@types/unist/-/unist-2.0.11.tgz",
      "integrity": "sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==",
      "license": "MIT"
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/path-scurry": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
      "integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
      "dev": true,
      "license": "BlueOak-1.0.0",
      "dependencies": {
        "lru-cache": "^10.2.0",
        "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
      },
      "engines": {
        "node": ">=16 || 14 >=14.18"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/pbf": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/pbf/-/pbf-4.0.1.tgz",
      "integrity": "sha512-SuLdBvS42z33m8ejRbInMapQe8n0D3vN/Xd5fmWM3tufNgRQFBpaW2YVJxQZV4iPNqb0vEFvssMEo5w9c6BTIA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "resolve-protobuf-schema": "^2.1.0"
      },
      "bin": {
        "pbf": "bin/pbf"
      }
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "license": "ISC"
    },
    "node_modules/picomatch": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
      "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pify": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
      "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/pirates": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz",
      "integrity": "sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/possible-typed-array-names": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz",
      "integrity": "sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/postcss": {
      "version": "8.4.31",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz",
      "integrity": "sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.6",
        "picocolors": "^1.0.0",
        "source-map-js": "^1.0.2"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-import": {
      "version": "14.1.0",
      "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-14.1.0.tgz",
      "integrity": "sha512-flwI+Vgm4SElObFVPpTIT7SU7R3qk2L7PyduMcokiaVKuWv9d/U+Gm/QAd8NDLuykTWTkcrjOeD2Pp1rMeBTGw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "postcss-value-parser": "^4.0.0",
        "read-cache": "^1.0.0",
        "resolve": "^1.1.7"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "postcss": "^8.0.0"
      }
    },
    "node_modules/postcss-js": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.1.0.tgz",
      "integrity": "sha512-oIAOTqgIo7q2EOwbhb8UalYePMvYoIeRY2YKntdpFQXNosSu3vLrniGgmH9OKs/qAkfoj5oB3le/7mINW1LCfw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "camelcase-css": "^2.0.1"
      },
      "engines": {
        "node": "^12 || ^14 || >= 16"
      },
      "peerDependencies": {
        "postcss": "^8.4.21"
      }
    },
    "node_modules/postcss-nested": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.0.0.tgz",
      "integrity": "sha512-0DkamqrPcmkBDsLn+vQDIrtkSbNkv5AD/M322ySo9kqFkCIYklym2xEmWkwo+Y3/qZo34tzEPNUw4y7yMCdv5w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "postcss-selector-parser": "^6.0.10"
      },
      "engines": {
        "node": ">=12.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      },
      "peerDependencies": {
        "postcss": "^8.2.14"
      }
    },
    "node_modules/postcss-selector-parser": {
      "version": "6.1.2",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
      "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/potpack": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/potpack/-/potpack-2.1.0.tgz",
      "integrity": "sha512-pcaShQc1Shq0y+E7GqJqvZj8DTthWV1KeHGdi0Z6IAin2Oi3JnLCOfwnCo84qc+HAp52wT9nK9H7FAJp5a44GQ==",
      "license": "ISC"
    },
    "node_modules/prelude-ls": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/prop-types": {
      "version": "15.8.1",
      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.4.0",
        "object-assign": "^4.1.1",
        "react-is": "^16.13.1"
      }
    },
    "node_modules/property-information": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/property-information/-/property-information-7.1.0.tgz",
      "integrity": "sha512-TwEZ+X+yCJmYfL7TPUOcvBZ4QfoT5YenQiJuX//0th53DE6w0xxLEtfK3iyryQFddXuvkIk51EEgrJQ0WJkOmQ==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/proto3-json-serializer": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/proto3-json-serializer/-/proto3-json-serializer-2.0.2.tgz",
      "integrity": "sha512-SAzp/O4Yh02jGdRc+uIrGoe87dkN/XtwxfZ4ZyafJHymd79ozp5VG5nyZ7ygqPM5+cpLDjjGnYFUkngonyDPOQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "protobufjs": "^7.2.5"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/protobufjs": {
      "version": "7.5.4",
      "resolved": "https://registry.npmjs.org/protobufjs/-/protobufjs-7.5.4.tgz",
      "integrity": "sha512-CvexbZtbov6jW2eXAvLukXjXUW1TzFaivC46BpWc/3BpcCysb5Vffu+B3XHMm8lVEuy2Mm4XGex8hBSg1yapPg==",
      "hasInstallScript": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "@protobufjs/aspromise": "^1.1.2",
        "@protobufjs/base64": "^1.1.2",
        "@protobufjs/codegen": "^2.0.4",
        "@protobufjs/eventemitter": "^1.1.0",
        "@protobufjs/fetch": "^1.1.0",
        "@protobufjs/float": "^1.0.2",
        "@protobufjs/inquire": "^1.1.0",
        "@protobufjs/path": "^1.1.2",
        "@protobufjs/pool": "^1.1.0",
        "@protobufjs/utf8": "^1.1.0",
        "@types/node": ">=13.7.0",
        "long": "^5.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/protocol-buffers-schema": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/protocol-buffers-schema/-/protocol-buffers-schema-3.6.0.tgz",
      "integrity": "sha512-TdDRD+/QNdrCGCE7v8340QyuXd4kIWIgapsE2+n/SaGiSSbomYl4TjHlvIoCWRpE7wFt02EpB35VVA2ImcBVqw==",
      "license": "MIT"
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/quick-lru": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz",
      "integrity": "sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/quickselect": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/quickselect/-/quickselect-3.0.0.tgz",
      "integrity": "sha512-XdjUArbK4Bm5fLLvlm5KpTFOiOThgfWWI4axAZDWg4E/0mKdZyI9tNEfds27qCi1ze/vwTR16kvmmGhRra3c2g==",
      "license": "ISC"
    },
    "node_modules/quill": {
      "version": "1.3.7",
      "resolved": "https://registry.npmjs.org/quill/-/quill-1.3.7.tgz",
      "integrity": "sha512-hG/DVzh/TiknWtE6QmWAF/pxoZKYxfe3J/d/+ShUWkDvvkZQVTPeVmUJVu1uE6DDooC4fWTiCLh84ul89oNz5g==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "clone": "^2.1.1",
        "deep-equal": "^1.0.1",
        "eventemitter3": "^2.0.3",
        "extend": "^3.0.2",
        "parchment": "^1.1.4",
        "quill-delta": "^3.6.2"
      }
    },
    "node_modules/quill-delta": {
      "version": "3.6.3",
      "resolved": "https://registry.npmjs.org/quill-delta/-/quill-delta-3.6.3.tgz",
      "integrity": "sha512-wdIGBlcX13tCHOXGMVnnTVFtGRLoP0imqxM696fIPwIf5ODIYUHIvHbZcyvGlZFiFhK5XzDC2lpjbxRhnM05Tg==",
      "license": "MIT",
      "dependencies": {
        "deep-equal": "^1.0.1",
        "extend": "^3.0.2",
        "fast-diff": "1.1.2"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/quill/node_modules/eventemitter3": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-2.0.3.tgz",
      "integrity": "sha512-jLN68Dx5kyFHaePoXWPsCGW5qdyZQtLYHkxkg02/Mz6g0kYpDx4FyP6XfArhQdlOC4b8Mv+EMxPo/8La7Tzghg==",
      "license": "MIT"
    },
    "node_modules/randombytes": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "safe-buffer": "^5.1.0"
      }
    },
    "node_modules/react": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/react/-/react-18.3.1.tgz",
      "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-dom": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
      "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0",
        "scheduler": "^0.23.2"
      },
      "peerDependencies": {
        "react": "^18.3.1"
      }
    },
    "node_modules/react-is": {
      "version": "16.13.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
      "license": "MIT"
    },
    "node_modules/react-map-gl": {
      "version": "7.1.9",
      "resolved": "https://registry.npmjs.org/react-map-gl/-/react-map-gl-7.1.9.tgz",
      "integrity": "sha512-KsCc8Gyn05wVGlHZoopaiiCr0RCAQ6LDISo5sEy1/pV/d7RlozkF946tiX7IgyijJQMRujHol5QdwUPESjh73w==",
      "license": "MIT",
      "dependencies": {
        "@maplibre/maplibre-gl-style-spec": "^19.2.1",
        "@types/mapbox-gl": ">=1.0.0"
      },
      "peerDependencies": {
        "mapbox-gl": ">=1.13.0",
        "maplibre-gl": ">=1.13.0 <5.0.0",
        "react": ">=16.3.0",
        "react-dom": ">=16.3.0"
      },
      "peerDependenciesMeta": {
        "mapbox-gl": {
          "optional": true
        },
        "maplibre-gl": {
          "optional": true
        }
      }
    },
    "node_modules/react-markdown": {
      "version": "10.1.0",
      "resolved": "https://registry.npmjs.org/react-markdown/-/react-markdown-10.1.0.tgz",
      "integrity": "sha512-qKxVopLT/TyA6BX3Ue5NwabOsAzm0Q7kAPwq6L+wWDwisYs7R8vZ0nRXqq6rkueboxpkjvLGU9fWifiX/ZZFxQ==",
      "license": "MIT",
      "dependencies": {
        "@types/hast": "^3.0.0",
        "@types/mdast": "^4.0.0",
        "devlop": "^1.0.0",
        "hast-util-to-jsx-runtime": "^2.0.0",
        "html-url-attributes": "^3.0.0",
        "mdast-util-to-hast": "^13.0.0",
        "remark-parse": "^11.0.0",
        "remark-rehype": "^11.0.0",
        "unified": "^11.0.0",
        "unist-util-visit": "^5.0.0",
        "vfile": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      },
      "peerDependencies": {
        "@types/react": ">=18",
        "react": ">=18"
      }
    },
    "node_modules/react-quill": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/react-quill/-/react-quill-2.0.0.tgz",
      "integrity": "sha512-4qQtv1FtCfLgoD3PXAur5RyxuUbPXQGOHgTlFie3jtxp43mXDtzCKaOgQ3mLyZfi1PUlyjycfivKelFhy13QUg==",
      "license": "MIT",
      "dependencies": {
        "@types/quill": "^1.3.10",
        "lodash": "^4.17.4",
        "quill": "^1.3.7"
      },
      "peerDependencies": {
        "react": "^16 || ^17 || ^18",
        "react-dom": "^16 || ^17 || ^18"
      }
    },
    "node_modules/react-redux": {
      "version": "9.2.0",
      "resolved": "https://registry.npmjs.org/react-redux/-/react-redux-9.2.0.tgz",
      "integrity": "sha512-ROY9fvHhwOD9ySfrF0wmvu//bKCQ6AeZZq1nJNtbDC+kk5DuSuNX/n6YWYF/SYy7bSba4D4FSz8DJeKY/S/r+g==",
      "license": "MIT",
      "dependencies": {
        "@types/use-sync-external-store": "^0.0.6",
        "use-sync-external-store": "^1.4.0"
      },
      "peerDependencies": {
        "@types/react": "^18.2.25 || ^19",
        "react": "^18.0 || ^19",
        "redux": "^5.0.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "redux": {
          "optional": true
        }
      }
    },
    "node_modules/react-remove-scroll": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/react-remove-scroll/-/react-remove-scroll-2.7.1.tgz",
      "integrity": "sha512-HpMh8+oahmIdOuS5aFKKY6Pyog+FNaZV/XyJOq7b4YFwsFHe5yYfdbIalI4k3vU2nSDql7YskmUseHsRrJqIPA==",
      "license": "MIT",
      "dependencies": {
        "react-remove-scroll-bar": "^2.3.7",
        "react-style-singleton": "^2.2.3",
        "tslib": "^2.1.0",
        "use-callback-ref": "^1.3.3",
        "use-sidecar": "^1.1.3"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/react-remove-scroll-bar": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/react-remove-scroll-bar/-/react-remove-scroll-bar-2.3.8.tgz",
      "integrity": "sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==",
      "license": "MIT",
      "dependencies": {
        "react-style-singleton": "^2.2.2",
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/react-style-singleton": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/react-style-singleton/-/react-style-singleton-2.2.3.tgz",
      "integrity": "sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==",
      "license": "MIT",
      "dependencies": {
        "get-nonce": "^1.0.0",
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/read-cache": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
      "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "pify": "^2.3.0"
      }
    },
    "node_modules/readable-stream": {
      "version": "3.6.2",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
      "integrity": "sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/readdirp/node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/recharts": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/recharts/-/recharts-3.2.1.tgz",
      "integrity": "sha512-0JKwHRiFZdmLq/6nmilxEZl3pqb4T+aKkOkOi/ZISRZwfBhVMgInxzlYU9D4KnCH3KINScLy68m/OvMXoYGZUw==",
      "license": "MIT",
      "dependencies": {
        "@reduxjs/toolkit": "1.x.x || 2.x.x",
        "clsx": "^2.1.1",
        "decimal.js-light": "^2.5.1",
        "es-toolkit": "^1.39.3",
        "eventemitter3": "^5.0.1",
        "immer": "^10.1.1",
        "react-redux": "8.x.x || 9.x.x",
        "reselect": "5.1.1",
        "tiny-invariant": "^1.3.3",
        "use-sync-external-store": "^1.2.2",
        "victory-vendor": "^37.0.2"
      },
      "engines": {
        "node": ">=18"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-dom": "^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-is": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/redux": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/redux/-/redux-5.0.1.tgz",
      "integrity": "sha512-M9/ELqF6fy8FwmkpnF0S3YKOqMyoWJ4+CS5Efg2ct3oY9daQvd/Pc71FpGZsVsbl3Cpb+IIcjBDUnnyBdQbq4w==",
      "license": "MIT"
    },
    "node_modules/redux-thunk": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/redux-thunk/-/redux-thunk-3.1.0.tgz",
      "integrity": "sha512-NW2r5T6ksUKXCabzhL9z+h206HQw/NJkcLm1GPImRQ8IzfXwRGqjVhKJGauHirT0DAuyy6hjdnMZaRoAcy0Klw==",
      "license": "MIT",
      "peerDependencies": {
        "redux": "^5.0.0"
      }
    },
    "node_modules/reflect.getprototypeof": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.10.tgz",
      "integrity": "sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.9",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.7",
        "get-proto": "^1.0.1",
        "which-builtin-type": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/regenerate": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.2.tgz",
      "integrity": "sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/regenerate-unicode-properties": {
      "version": "10.2.2",
      "resolved": "https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-10.2.2.tgz",
      "integrity": "sha512-m03P+zhBeQd1RGnYxrGyDAPpWX/epKirLrp8e3qevZdVkKtnCrjjWczIbYc8+xd6vcTStVlqfycTx1KR4LOr0g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "regenerate": "^1.4.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/regexp.prototype.flags": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.4.tgz",
      "integrity": "sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-errors": "^1.3.0",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "set-function-name": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/regexpu-core": {
      "version": "6.4.0",
      "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-6.4.0.tgz",
      "integrity": "sha512-0ghuzq67LI9bLXpOX/ISfve/Mq33a4aFRzoQYhnnok1JOFpmE/A2TBGkNVenOGEeSBCjIiWcc6MVOG5HEQv0sA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "regenerate": "^1.4.2",
        "regenerate-unicode-properties": "^10.2.2",
        "regjsgen": "^0.8.0",
        "regjsparser": "^0.13.0",
        "unicode-match-property-ecmascript": "^2.0.0",
        "unicode-match-property-value-ecmascript": "^2.2.1"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/regjsgen": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.8.0.tgz",
      "integrity": "sha512-RvwtGe3d7LvWiDQXeQw8p5asZUmfU1G/l6WbUXeHta7Y2PEIvBTwH6E2EfmYUK8pxcxEdEmaomqyp0vZZ7C+3Q==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/regjsparser": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.13.0.tgz",
      "integrity": "sha512-NZQZdC5wOE/H3UT28fVGL+ikOZcEzfMGk/c3iN9UGxzWHMa1op7274oyiUVrAG4B2EuFhus8SvkaYnhvW92p9Q==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "jsesc": "~3.1.0"
      },
      "bin": {
        "regjsparser": "bin/parser"
      }
    },
    "node_modules/remark-gfm": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/remark-gfm/-/remark-gfm-4.0.1.tgz",
      "integrity": "sha512-1quofZ2RQ9EWdeN34S79+KExV1764+wCUGop5CPL1WGdD0ocPpu91lzPGbwWMECpEpd42kJGQwzRfyov9j4yNg==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "mdast-util-gfm": "^3.0.0",
        "micromark-extension-gfm": "^3.0.0",
        "remark-parse": "^11.0.0",
        "remark-stringify": "^11.0.0",
        "unified": "^11.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/remark-parse": {
      "version": "11.0.0",
      "resolved": "https://registry.npmjs.org/remark-parse/-/remark-parse-11.0.0.tgz",
      "integrity": "sha512-FCxlKLNGknS5ba/1lmpYijMUzX2esxW5xQqjWxw2eHFfS2MSdaHVINFmhjo+qN1WhZhNimq0dZATN9pH0IDrpA==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "mdast-util-from-markdown": "^2.0.0",
        "micromark-util-types": "^2.0.0",
        "unified": "^11.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/remark-rehype": {
      "version": "11.1.2",
      "resolved": "https://registry.npmjs.org/remark-rehype/-/remark-rehype-11.1.2.tgz",
      "integrity": "sha512-Dh7l57ianaEoIpzbp0PC9UKAdCSVklD8E5Rpw7ETfbTl3FqcOOgq5q2LVDhgGCkaBv7p24JXikPdvhhmHvKMsw==",
      "license": "MIT",
      "dependencies": {
        "@types/hast": "^3.0.0",
        "@types/mdast": "^4.0.0",
        "mdast-util-to-hast": "^13.0.0",
        "unified": "^11.0.0",
        "vfile": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/remark-stringify": {
      "version": "11.0.0",
      "resolved": "https://registry.npmjs.org/remark-stringify/-/remark-stringify-11.0.0.tgz",
      "integrity": "sha512-1OSmLd3awB/t8qdoEOMazZkNsfVTeY4fTsgzcQFdXNq8ToTN4ZGwrMnlda4K6smTFKD+GRV6O48i6Z4iKgPPpw==",
      "license": "MIT",
      "dependencies": {
        "@types/mdast": "^4.0.0",
        "mdast-util-to-markdown": "^2.0.0",
        "unified": "^11.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/require-from-string": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz",
      "integrity": "sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/reselect": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/reselect/-/reselect-5.1.1.tgz",
      "integrity": "sha512-K/BG6eIky/SBpzfHZv/dd+9JBFiS4SWV7FIujVyJRux6e45+73RaUHXLmIR1f7WOMaQ0U1km6qwklRQxpJJY0w==",
      "license": "MIT"
    },
    "node_modules/resolve": {
      "version": "1.22.10",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-core-module": "^2.16.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/resolve-pkg-maps": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/resolve-pkg-maps/-/resolve-pkg-maps-1.0.0.tgz",
      "integrity": "sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://github.com/privatenumber/resolve-pkg-maps?sponsor=1"
      }
    },
    "node_modules/resolve-protobuf-schema": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/resolve-protobuf-schema/-/resolve-protobuf-schema-2.1.0.tgz",
      "integrity": "sha512-kI5ffTiZWmJaS/huM8wZfEMer1eRd7oJQhDuxeCLe3t7N7mX3z94CN0xPxBQxFYQTSNz9T0i+v6inKqSdK8xrQ==",
      "license": "MIT",
      "dependencies": {
        "protocol-buffers-schema": "^3.3.1"
      }
    },
    "node_modules/retry": {
      "version": "0.13.1",
      "resolved": "https://registry.npmjs.org/retry/-/retry-0.13.1.tgz",
      "integrity": "sha512-XQBQ3I8W1Cge0Seh+6gjj03LbmRFWuoszgK9ooCpwYIrhhoO80pfq4cUkU5DkknwfOfFteRwlZ56PYOGYyFWdg==",
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/retry-request": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/retry-request/-/retry-request-7.0.2.tgz",
      "integrity": "sha512-dUOvLMJ0/JJYEn8NrpOaGNE7X3vpI5XlZS/u0ANjqtcZVKnIxP7IgCFwrKTxENw29emmwug53awKtaMm4i9g5w==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@types/request": "^2.48.8",
        "extend": "^3.0.2",
        "teeny-request": "^9.0.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/reusify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "deprecated": "Rimraf versions prior to v4 are no longer supported",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/robust-predicates": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/robust-predicates/-/robust-predicates-2.0.4.tgz",
      "integrity": "sha512-l4NwboJM74Ilm4VKfbAtFeGq7aEjWL+5kVFcmgFA2MrdnQWx9iE/tUGvxY5HyMI7o/WpSIUFLbC5fbeaHgSCYg==",
      "license": "Unlicense"
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/rw": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/rw/-/rw-1.3.3.tgz",
      "integrity": "sha512-PdhdWy89SiZogBLaw42zdeqtRJ//zFd2PgQavcICDUgJT5oW10QCRKbJ6bg4r0/UY2M6BWd5tkxuGFRvCkgfHQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/safe-array-concat": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.3.tgz",
      "integrity": "sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "get-intrinsic": "^1.2.6",
        "has-symbols": "^1.1.0",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">=0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/safe-push-apply": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz",
      "integrity": "sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-regex-test": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz",
      "integrity": "sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-regex": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/scheduler": {
      "version": "0.23.2",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz",
      "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      }
    },
    "node_modules/schema-utils": {
      "version": "4.3.2",
      "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-4.3.2.tgz",
      "integrity": "sha512-Gn/JaSk/Mt9gYubxTtSn/QCV4em9mpAPiR1rqy/Ocu19u/G9J5WWdNoUT4SiV6mFC3y6cxyFcFwdzPM3FgxGAQ==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/json-schema": "^7.0.9",
        "ajv": "^8.9.0",
        "ajv-formats": "^2.1.1",
        "ajv-keywords": "^5.1.0"
      },
      "engines": {
        "node": ">= 10.13.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/webpack"
      }
    },
    "node_modules/schema-utils/node_modules/ajv": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz",
      "integrity": "sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "fast-deep-equal": "^3.1.3",
        "fast-uri": "^3.0.1",
        "json-schema-traverse": "^1.0.0",
        "require-from-string": "^2.0.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/schema-utils/node_modules/ajv-keywords": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-5.1.0.tgz",
      "integrity": "sha512-YCS/JNFAUyr5vAuhk1DWm1CBxRHW9LbJ2ozWeemrIqpbsqKjHVxYPyi5GC0rjZIT5JxJ3virVTS8wk4i/Z+krw==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "fast-deep-equal": "^3.1.3"
      },
      "peerDependencies": {
        "ajv": "^8.8.2"
      }
    },
    "node_modules/schema-utils/node_modules/json-schema-traverse": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz",
      "integrity": "sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==",
      "dev": true,
      "license": "MIT",
      "peer": true
    },
    "node_modules/semver": {
      "version": "7.7.2",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/serialize-javascript": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.2.tgz",
      "integrity": "sha512-Saa1xPByTTq2gdeFZYLLo+RFE35NHZkAbqZeWNd3BpzppeVisAqpDjcp8dyf6uIvEqJRd46jemmyA4iFIeVk8g==",
      "dev": true,
      "license": "BSD-3-Clause",
      "peer": true,
      "dependencies": {
        "randombytes": "^2.1.0"
      }
    },
    "node_modules/serialize-to-js": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/serialize-to-js/-/serialize-to-js-3.1.2.tgz",
      "integrity": "sha512-owllqNuDDEimQat7EPG0tH7JjO090xKNzUtYz6X+Sk2BXDnOCilDdNLwjWeFywG9xkJul1ULvtUQa9O4pUaY0w==",
      "license": "MIT",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/set-function-length": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.4",
        "gopd": "^1.0.1",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-function-name": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz",
      "integrity": "sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==",
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "functions-have-names": "^1.2.3",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-proto": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/set-proto/-/set-proto-1.0.0.tgz",
      "integrity": "sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-value": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/set-value/-/set-value-2.0.1.tgz",
      "integrity": "sha512-JxHc1weCN68wRY0fhCoXpyK55m/XPHafOmK4UWD7m2CI14GMcFypt4w/0+NV5f/ZMby2F6S2wwA7fgynh9gWSw==",
      "license": "MIT",
      "dependencies": {
        "extend-shallow": "^2.0.1",
        "is-extendable": "^0.1.1",
        "is-plain-object": "^2.0.3",
        "split-string": "^3.0.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/side-channel": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3",
        "side-channel-list": "^1.0.0",
        "side-channel-map": "^1.0.1",
        "side-channel-weakmap": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-list": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-map": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-weakmap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3",
        "side-channel-map": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/signal-exit": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/sort-asc": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/sort-asc/-/sort-asc-0.2.0.tgz",
      "integrity": "sha512-umMGhjPeHAI6YjABoSTrFp2zaBtXBej1a0yKkuMUyjjqu6FJsTF+JYwCswWDg+zJfk/5npWUUbd33HH/WLzpaA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/sort-desc": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/sort-desc/-/sort-desc-0.2.0.tgz",
      "integrity": "sha512-NqZqyvL4VPW+RAxxXnB8gvE1kyikh8+pR+T+CXLksVRN9eiQqkQlPwqWYU0mF9Jm7UnctShlxLyAt1CaBOTL1w==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/sort-object": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/sort-object/-/sort-object-3.0.3.tgz",
      "integrity": "sha512-nK7WOY8jik6zaG9CRwZTaD5O7ETWDLZYMM12pqY8htll+7dYeqGfEUPcUBHOpSJg2vJOrvFIY2Dl5cX2ih1hAQ==",
      "license": "MIT",
      "dependencies": {
        "bytewise": "^1.1.0",
        "get-value": "^2.0.2",
        "is-extendable": "^0.1.1",
        "sort-asc": "^0.2.0",
        "sort-desc": "^0.2.0",
        "union-value": "^1.0.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "dev": true,
      "license": "BSD-3-Clause",
      "peer": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "node_modules/space-separated-tokens": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/space-separated-tokens/-/space-separated-tokens-2.0.2.tgz",
      "integrity": "sha512-PEGlAwrG8yXGXRjW32fGbg66JAlOAwbObuqVoJpv/mRgoWDQfgH1wDPvtzWyUSNAXBGSk8h755YDbbcEy3SH2Q==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/splaytree": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/splaytree/-/splaytree-0.1.4.tgz",
      "integrity": "sha512-D50hKrjZgBzqD3FT2Ek53f2dcDLAQT8SSGrzj3vidNH5ISRgceeGVJ2dQIthKOuayqFXfFjXheHNo4bbt9LhRQ==",
      "license": "MIT"
    },
    "node_modules/split-string": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/split-string/-/split-string-3.1.0.tgz",
      "integrity": "sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==",
      "license": "MIT",
      "dependencies": {
        "extend-shallow": "^3.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/split-string/node_modules/extend-shallow": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-3.0.2.tgz",
      "integrity": "sha512-BwY5b5Ql4+qZoefgMj2NUmx+tehVTH/Kf4k1ZEtOHNFcm2wSxMRo992l6X3TIgni2eZVTZ85xMOjF31fwZAj6Q==",
      "license": "MIT",
      "dependencies": {
        "assign-symbols": "^1.0.0",
        "is-extendable": "^1.0.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/split-string/node_modules/is-extendable": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
      "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
      "license": "MIT",
      "dependencies": {
        "is-plain-object": "^2.0.4"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/stable-hash": {
      "version": "0.0.5",
      "resolved": "https://registry.npmjs.org/stable-hash/-/stable-hash-0.0.5.tgz",
      "integrity": "sha512-+L3ccpzibovGXFK+Ap/f8LOS0ahMrHTf3xu7mMLSpEGU0EO9ucaysSylKo9eRDFNhWve/y275iPmIZ4z39a9iA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/stop-iteration-iterator": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/stop-iteration-iterator/-/stop-iteration-iterator-1.1.0.tgz",
      "integrity": "sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "internal-slot": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/stream-events": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/stream-events/-/stream-events-1.0.5.tgz",
      "integrity": "sha512-E1GUzBSgvct8Jsb3v2X15pjzN1tYebtbLaMg+eBOUOAxgbLoSbT2NS91ckc5lJD1KfLjId+jXJRgo0qnV5Nerg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "stubs": "^3.0.0"
      }
    },
    "node_modules/stream-shift": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/stream-shift/-/stream-shift-1.0.3.tgz",
      "integrity": "sha512-76ORR0DO1o1hlKwTbi/DM3EXWGf3ZJYO8cXX5RJwnul2DEg2oyoZyjLNoQM8WsvZiFKCRfC1O0J7iCvie3RZmQ==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/streamsearch": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/streamsearch/-/streamsearch-1.1.0.tgz",
      "integrity": "sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==",
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "safe-buffer": "~5.2.0"
      }
    },
    "node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs": {
      "name": "string-width",
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/string-width/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/string.prototype.includes": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/string.prototype.includes/-/string.prototype.includes-2.0.1.tgz",
      "integrity": "sha512-o7+c9bW6zpAdJHTtujeePODAhkuicdAryFsfVKwA+wGw89wJ4GTY484WTucM9hLtDEOpOvI+aHnzqnC5lHp4Rg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.3"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/string.prototype.matchall": {
      "version": "4.0.12",
      "resolved": "https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.12.tgz",
      "integrity": "sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.6",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.6",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "internal-slot": "^1.1.0",
        "regexp.prototype.flags": "^1.5.3",
        "set-function-name": "^2.0.2",
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.repeat": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/string.prototype.repeat/-/string.prototype.repeat-1.0.0.tgz",
      "integrity": "sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-properties": "^1.1.3",
        "es-abstract": "^1.17.5"
      }
    },
    "node_modules/string.prototype.trim": {
      "version": "1.2.10",
      "resolved": "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.10.tgz",
      "integrity": "sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "define-data-property": "^1.1.4",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-object-atoms": "^1.0.0",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimend": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.9.tgz",
      "integrity": "sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimstart": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz",
      "integrity": "sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/stringify-entities": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/stringify-entities/-/stringify-entities-4.0.4.tgz",
      "integrity": "sha512-IwfBptatlO+QCJUo19AqvrPNqlVMpW9YEL2LIVY+Rpv2qsjCGxaDLNRgeGsQWJhfItebuJhsGSLjaBbNSQ+ieg==",
      "license": "MIT",
      "dependencies": {
        "character-entities-html4": "^2.0.0",
        "character-entities-legacy": "^3.0.0"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi-cjs": {
      "name": "strip-ansi",
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-bom": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
      "integrity": "sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/strnum": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/strnum/-/strnum-1.1.2.tgz",
      "integrity": "sha512-vrN+B7DBIoTTZjnPNewwhx6cBA/H+IS7rfW68n7XxC1y7uoiGQBxaKzqucGUgavX15dJgiGztLJ8vxuEzwqBdA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/NaturalIntelligence"
        }
      ],
      "license": "MIT",
      "optional": true
    },
    "node_modules/stubs": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/stubs/-/stubs-3.0.0.tgz",
      "integrity": "sha512-PdHt7hHUJKxvTCgbKX9C1V/ftOcjJQgz8BZwNfV5c4B6dcGqlpelTbJ999jBGZ2jYiPAwcX5dP6oBwVlBlUbxw==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/style-to-js": {
      "version": "1.1.18",
      "resolved": "https://registry.npmjs.org/style-to-js/-/style-to-js-1.1.18.tgz",
      "integrity": "sha512-JFPn62D4kJaPTnhFUI244MThx+FEGbi+9dw1b9yBBQ+1CZpV7QAT8kUtJ7b7EUNdHajjF/0x8fT+16oLJoojLg==",
      "license": "MIT",
      "dependencies": {
        "style-to-object": "1.0.11"
      }
    },
    "node_modules/style-to-object": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/style-to-object/-/style-to-object-1.0.11.tgz",
      "integrity": "sha512-5A560JmXr7wDyGLK12Nq/EYS38VkGlglVzkis1JEdbGWSnbQIEhZzTJhzURXN5/8WwwFCs/f/VVcmkTppbXLow==",
      "license": "MIT",
      "dependencies": {
        "inline-style-parser": "0.2.4"
      }
    },
    "node_modules/styled-jsx": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/styled-jsx/-/styled-jsx-5.1.1.tgz",
      "integrity": "sha512-pW7uC1l4mBZ8ugbiZrcIsiIvVx1UmTfw7UkC3Um2tmfUq9Bhk8IiyEIPl6F8agHgjzku6j0xQEZbfA5uSgSaCw==",
      "license": "MIT",
      "dependencies": {
        "client-only": "0.0.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "peerDependencies": {
        "react": ">= 16.8.0 || 17.x.x || ^18.0.0-0"
      },
      "peerDependenciesMeta": {
        "@babel/core": {
          "optional": true
        },
        "babel-plugin-macros": {
          "optional": true
        }
      }
    },
    "node_modules/sucrase": {
      "version": "3.35.0",
      "resolved": "https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz",
      "integrity": "sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.2",
        "commander": "^4.0.0",
        "glob": "^10.3.10",
        "lines-and-columns": "^1.1.6",
        "mz": "^2.7.0",
        "pirates": "^4.0.1",
        "ts-interface-checker": "^0.1.9"
      },
      "bin": {
        "sucrase": "bin/sucrase",
        "sucrase-node": "bin/sucrase-node"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/sucrase/node_modules/brace-expansion": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/sucrase/node_modules/glob": {
      "version": "10.4.5",
      "resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
      "integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "foreground-child": "^3.1.0",
        "jackspeak": "^3.1.2",
        "minimatch": "^9.0.4",
        "minipass": "^7.1.2",
        "package-json-from-dist": "^1.0.0",
        "path-scurry": "^1.11.1"
      },
      "bin": {
        "glob": "dist/esm/bin.mjs"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/sucrase/node_modules/minimatch": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/supercluster": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/supercluster/-/supercluster-8.0.1.tgz",
      "integrity": "sha512-IiOea5kJ9iqzD2t7QJq/cREyLHTtSmUT6gQsweojg9WH2sYJqZK9SswTu6jrscO6D1G5v5vYZ9ru/eq85lXeZQ==",
      "license": "ISC",
      "dependencies": {
        "kdbush": "^4.0.2"
      }
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/tailwind-merge": {
      "version": "1.14.0",
      "resolved": "https://registry.npmjs.org/tailwind-merge/-/tailwind-merge-1.14.0.tgz",
      "integrity": "sha512-3mFKyCo/MBcgyOTlrY8T7odzZFx+w+qKSMAmdFzRvqBfLlSigU6TZnlFHK0lkMwj9Bj8OYU+9yW9lmGuS0QEnQ==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/dcastil"
      }
    },
    "node_modules/tailwindcss": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.3.0.tgz",
      "integrity": "sha512-hOXlFx+YcklJ8kXiCAfk/FMyr4Pm9ck477G0m/us2344Vuj355IpoEDB5UmGAsSpTBmr+4ZhjzW04JuFXkb/fw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "arg": "^5.0.2",
        "chokidar": "^3.5.3",
        "color-name": "^1.1.4",
        "didyoumean": "^1.2.2",
        "dlv": "^1.1.3",
        "fast-glob": "^3.2.12",
        "glob-parent": "^6.0.2",
        "is-glob": "^4.0.3",
        "jiti": "^1.17.2",
        "lilconfig": "^2.0.6",
        "micromatch": "^4.0.5",
        "normalize-path": "^3.0.0",
        "object-hash": "^3.0.0",
        "picocolors": "^1.0.0",
        "postcss": "^8.0.9",
        "postcss-import": "^14.1.0",
        "postcss-js": "^4.0.0",
        "postcss-load-config": "^3.1.4",
        "postcss-nested": "6.0.0",
        "postcss-selector-parser": "^6.0.11",
        "postcss-value-parser": "^4.2.0",
        "quick-lru": "^5.1.1",
        "resolve": "^1.22.1",
        "sucrase": "^3.29.0"
      },
      "bin": {
        "tailwind": "lib/cli.js",
        "tailwindcss": "lib/cli.js"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "peerDependencies": {
        "postcss": "^8.0.9"
      }
    },
    "node_modules/tailwindcss/node_modules/postcss": {
      "version": "8.5.6",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
      "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.11",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/tailwindcss/node_modules/postcss-load-config": {
      "version": "3.1.4",
      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-3.1.4.tgz",
      "integrity": "sha512-6DiM4E7v4coTE4uzA8U//WhtPwyhiim3eyjEMFCnUpzbrkK9wJHgKDT2mR+HbtSrd/NubVaYTOpSpjUl8NQeRg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "lilconfig": "^2.0.5",
        "yaml": "^1.10.2"
      },
      "engines": {
        "node": ">= 10"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      },
      "peerDependencies": {
        "postcss": ">=8.0.9",
        "ts-node": ">=9.0.0"
      },
      "peerDependenciesMeta": {
        "postcss": {
          "optional": true
        },
        "ts-node": {
          "optional": true
        }
      }
    },
    "node_modules/tapable": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.3.tgz",
      "integrity": "sha512-ZL6DDuAlRlLGghwcfmSn9sK3Hr6ArtyudlSAiCqQ6IfE+b+HHbydbYDIG15IfS5do+7XQQBdBiubF/cV2dnDzg==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/webpack"
      }
    },
    "node_modules/teeny-request": {
      "version": "9.0.0",
      "resolved": "https://registry.npmjs.org/teeny-request/-/teeny-request-9.0.0.tgz",
      "integrity": "sha512-resvxdc6Mgb7YEThw6G6bExlXKkv6+YbuzGg9xuXxSgxJF7Ozs+o8Y9+2R3sArdWdW8nOokoQb1yrpFB0pQK2g==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "http-proxy-agent": "^5.0.0",
        "https-proxy-agent": "^5.0.0",
        "node-fetch": "^2.6.9",
        "stream-events": "^1.0.5",
        "uuid": "^9.0.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/teeny-request/node_modules/agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "debug": "4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/teeny-request/node_modules/https-proxy-agent": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.1.tgz",
      "integrity": "sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/teeny-request/node_modules/uuid": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-9.0.1.tgz",
      "integrity": "sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "optional": true,
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/terser": {
      "version": "5.44.0",
      "resolved": "https://registry.npmjs.org/terser/-/terser-5.44.0.tgz",
      "integrity": "sha512-nIVck8DK+GM/0Frwd+nIhZ84pR/BX7rmXMfYwyg+Sri5oGVE99/E3KvXqpC2xHFxyqXyGHTKBSioxxplrO4I4w==",
      "dev": true,
      "license": "BSD-2-Clause",
      "peer": true,
      "dependencies": {
        "@jridgewell/source-map": "^0.3.3",
        "acorn": "^8.15.0",
        "commander": "^2.20.0",
        "source-map-support": "~0.5.20"
      },
      "bin": {
        "terser": "bin/terser"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/terser-webpack-plugin": {
      "version": "5.3.14",
      "resolved": "https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-5.3.14.tgz",
      "integrity": "sha512-vkZjpUjb6OMS7dhV+tILUW6BhpDR7P2L/aQSAv+Uwk+m8KATX9EccViHTJR2qDtACKPIYndLGCyl3FMo+r2LMw==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@jridgewell/trace-mapping": "^0.3.25",
        "jest-worker": "^27.4.5",
        "schema-utils": "^4.3.0",
        "serialize-javascript": "^6.0.2",
        "terser": "^5.31.1"
      },
      "engines": {
        "node": ">= 10.13.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/webpack"
      },
      "peerDependencies": {
        "webpack": "^5.1.0"
      },
      "peerDependenciesMeta": {
        "@swc/core": {
          "optional": true
        },
        "esbuild": {
          "optional": true
        },
        "uglify-js": {
          "optional": true
        }
      }
    },
    "node_modules/terser/node_modules/commander": {
      "version": "2.20.3",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
      "dev": true,
      "license": "MIT",
      "peer": true
    },
    "node_modules/text-table": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
      "integrity": "sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/thenify": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
      "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "any-promise": "^1.0.0"
      }
    },
    "node_modules/thenify-all": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
      "integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "thenify": ">= 3.1.0 < 4"
      },
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/tiny-invariant": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.3.tgz",
      "integrity": "sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==",
      "license": "MIT"
    },
    "node_modules/tinyglobby": {
      "version": "0.2.15",
      "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.15.tgz",
      "integrity": "sha512-j2Zq4NyQYG5XMST4cbs02Ak8iJUdxRM0XI5QyxXuZOzKOINmWurp3smXu3y5wDcJrptwpSjgXHzIQxR0omXljQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fdir": "^6.5.0",
        "picomatch": "^4.0.3"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/SuperchupuDev"
      }
    },
    "node_modules/tinyqueue": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/tinyqueue/-/tinyqueue-3.0.0.tgz",
      "integrity": "sha512-gRa9gwYU3ECmQYv3lslts5hxuIa90veaEcxDYuu3QGOIAEM2mOZkVHp48ANJuu1CURtRdHKUBY5Lm1tHV+sD4g==",
      "license": "ISC"
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
      "license": "MIT"
    },
    "node_modules/trim-lines": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/trim-lines/-/trim-lines-3.0.1.tgz",
      "integrity": "sha512-kRj8B+YHZCc9kQYdWfJB2/oUl9rA99qbowYYBtr4ui4mZyAQ2JpvVBd/6U2YloATfqBhBTSMhTpgBHtU0Mf3Rg==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/trough": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/trough/-/trough-2.2.0.tgz",
      "integrity": "sha512-tmMpK00BjZiUyVyvrBK7knerNgmgvcV/KLVyuma/SC+TQN167GrMRciANTz09+k3zW8L8t60jWO1GpfkZdjTaw==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/ts-api-utils": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.4.3.tgz",
      "integrity": "sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=16"
      },
      "peerDependencies": {
        "typescript": ">=4.2.0"
      }
    },
    "node_modules/ts-interface-checker": {
      "version": "0.1.13",
      "resolved": "https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz",
      "integrity": "sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==",
      "dev": true,
      "license": "Apache-2.0"
    },
    "node_modules/tsconfig-paths": {
      "version": "3.15.0",
      "resolved": "https://registry.npmjs.org/tsconfig-paths/-/tsconfig-paths-3.15.0.tgz",
      "integrity": "sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/json5": "^0.0.29",
        "json5": "^1.0.2",
        "minimist": "^1.2.6",
        "strip-bom": "^3.0.0"
      }
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/type-check": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/type-fest": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
      "dev": true,
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/typed-array-buffer": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.3.tgz",
      "integrity": "sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/typed-array-byte-length": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.3.tgz",
      "integrity": "sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-proto": "^1.2.0",
        "is-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-byte-offset": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.4.tgz",
      "integrity": "sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-proto": "^1.2.0",
        "is-typed-array": "^1.1.15",
        "reflect.getprototypeof": "^1.0.9"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-length": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.7.tgz",
      "integrity": "sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "is-typed-array": "^1.1.13",
        "possible-typed-array-names": "^1.0.0",
        "reflect.getprototypeof": "^1.0.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typescript": {
      "version": "5.9.2",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.9.2.tgz",
      "integrity": "sha512-CWBzXQrc/qOkhidw1OzBTQuYRbfyxDXJMVJ1XNwUHGROVmuaeiEm3OslpZ1RV96d7SKKjZKrSJu3+t/xlw3R9A==",
      "devOptional": true,
      "license": "Apache-2.0",
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/typewise": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typewise/-/typewise-1.0.3.tgz",
      "integrity": "sha512-aXofE06xGhaQSPzt8hlTY+/YWQhm9P0jYUp1f2XtmW/3Bk0qzXcyFWAtPoo2uTGQj1ZwbDuSyuxicq+aDo8lCQ==",
      "license": "MIT",
      "dependencies": {
        "typewise-core": "^1.2.0"
      }
    },
    "node_modules/typewise-core": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/typewise-core/-/typewise-core-1.2.0.tgz",
      "integrity": "sha512-2SCC/WLzj2SbUwzFOzqMCkz5amXLlxtJqDKTICqg30x+2DZxcfZN2MvQZmGfXWKNWaKK9pBPsvkcwv8bF/gxKg==",
      "license": "MIT"
    },
    "node_modules/unbox-primitive": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.1.0.tgz",
      "integrity": "sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-bigints": "^1.0.2",
        "has-symbols": "^1.1.0",
        "which-boxed-primitive": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/uncrypto": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/uncrypto/-/uncrypto-0.1.3.tgz",
      "integrity": "sha512-Ql87qFHB3s/De2ClA9e0gsnS6zXG27SkTiSJwjCc9MebbfapQfuPzumMIUMi38ezPZVNFcHI9sUIepeQfw8J8Q==",
      "license": "MIT"
    },
    "node_modules/undici": {
      "version": "6.19.7",
      "resolved": "https://registry.npmjs.org/undici/-/undici-6.19.7.tgz",
      "integrity": "sha512-HR3W/bMGPSr90i8AAp2C4DM3wChFdJPLrWYpIS++LxS8K+W535qftjt+4MyjNYHeWabMj1nvtmLIi7l++iq91A==",
      "license": "MIT",
      "engines": {
        "node": ">=18.17"
      }
    },
    "node_modules/undici-types": {
      "version": "6.21.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz",
      "integrity": "sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==",
      "license": "MIT"
    },
    "node_modules/unicode-canonical-property-names-ecmascript": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-2.0.1.tgz",
      "integrity": "sha512-dA8WbNeb2a6oQzAQ55YlT5vQAWGV9WXOsi3SskE3bcCdM0P4SDd+24zS/OCacdRq5BkdsRj9q3Pg6YyQoxIGqg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-match-property-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-2.0.0.tgz",
      "integrity": "sha512-5kaZCrbp5mmbz5ulBkDkbY0SsPOjKqVS35VpL9ulMPfSl0J0Xsm+9Evphv9CoIZFwre7aJoa94AY6seMKGVN5Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "unicode-canonical-property-names-ecmascript": "^2.0.0",
        "unicode-property-aliases-ecmascript": "^2.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-match-property-value-ecmascript": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-2.2.1.tgz",
      "integrity": "sha512-JQ84qTuMg4nVkx8ga4A16a1epI9H6uTXAknqxkGF/aFfRLw1xC/Bp24HNLaZhHSkWd3+84t8iXnp1J0kYcZHhg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-property-aliases-ecmascript": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-2.2.0.tgz",
      "integrity": "sha512-hpbDzxUY9BFwX+UeBnxv3Sh1q7HFxj48DTmXchNgRa46lO8uj3/1iEn3MiNUYTg1g9ctIqXCCERn8gYZhHC5lQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unified": {
      "version": "11.0.5",
      "resolved": "https://registry.npmjs.org/unified/-/unified-11.0.5.tgz",
      "integrity": "sha512-xKvGhPWw3k84Qjh8bI3ZeJjqnyadK+GEFtazSfZv/rKeTkTjOJho6mFqh2SM96iIcZokxiOpg78GazTSg8+KHA==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0",
        "bail": "^2.0.0",
        "devlop": "^1.0.0",
        "extend": "^3.0.0",
        "is-plain-obj": "^4.0.0",
        "trough": "^2.0.0",
        "vfile": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/union-value": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/union-value/-/union-value-1.0.1.tgz",
      "integrity": "sha512-tJfXmxMeWYnczCVs7XAEvIV7ieppALdyepWMkHkwciRpZraG/xwT+s2JN8+pr1+8jCRf80FFzvr+MpQeeoF4Xg==",
      "license": "MIT",
      "dependencies": {
        "arr-union": "^3.1.0",
        "get-value": "^2.0.6",
        "is-extendable": "^0.1.1",
        "set-value": "^2.0.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/unist-util-is": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/unist-util-is/-/unist-util-is-6.0.0.tgz",
      "integrity": "sha512-2qCTHimwdxLfz+YzdGfkqNlH0tLi9xjTnHddPmJwtIG9MGsdbutfTc4P+haPD7l7Cjxf/WZj+we5qfVPvvxfYw==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/unist-util-position": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/unist-util-position/-/unist-util-position-5.0.0.tgz",
      "integrity": "sha512-fucsC7HjXvkB5R3kTCO7kUjRdrS0BJt3M/FPxmHMBOm8JQi2BsHAHFsy27E0EolP8rp0NzXsJ+jNPyDWvOJZPA==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/unist-util-stringify-position": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/unist-util-stringify-position/-/unist-util-stringify-position-4.0.0.tgz",
      "integrity": "sha512-0ASV06AAoKCDkS2+xw5RXJywruurpbC4JZSm7nr7MOt1ojAzvyyaO+UxZf18j8FCF6kmzCZKcAgN/yu2gm2XgQ==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/unist-util-visit": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/unist-util-visit/-/unist-util-visit-5.0.0.tgz",
      "integrity": "sha512-MR04uvD+07cwl/yhVuVWAtw+3GOR/knlL55Nd/wAdblk27GCVt3lqpTivy/tkJcZoNPzTwS1Y+KMojlLDhoTzg==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0",
        "unist-util-is": "^6.0.0",
        "unist-util-visit-parents": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/unist-util-visit-parents": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/unist-util-visit-parents/-/unist-util-visit-parents-6.0.1.tgz",
      "integrity": "sha512-L/PqWzfTP9lzzEa6CKs0k2nARxTdZduw3zyh8d2NVBnsyvHjSX4TWse388YrrQKbvI8w20fGjGlhgT96WwKykw==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0",
        "unist-util-is": "^6.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/unrs-resolver": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/unrs-resolver/-/unrs-resolver-1.11.1.tgz",
      "integrity": "sha512-bSjt9pjaEBnNiGgc9rUiHGKv5l4/TGzDmYw3RhnkJGtLhbnnA/5qJj7x3dNDCRx/PJxu774LlH8lCOlB4hEfKg==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "dependencies": {
        "napi-postinstall": "^0.3.0"
      },
      "funding": {
        "url": "https://opencollective.com/unrs-resolver"
      },
      "optionalDependencies": {
        "@unrs/resolver-binding-android-arm-eabi": "1.11.1",
        "@unrs/resolver-binding-android-arm64": "1.11.1",
        "@unrs/resolver-binding-darwin-arm64": "1.11.1",
        "@unrs/resolver-binding-darwin-x64": "1.11.1",
        "@unrs/resolver-binding-freebsd-x64": "1.11.1",
        "@unrs/resolver-binding-linux-arm-gnueabihf": "1.11.1",
        "@unrs/resolver-binding-linux-arm-musleabihf": "1.11.1",
        "@unrs/resolver-binding-linux-arm64-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-arm64-musl": "1.11.1",
        "@unrs/resolver-binding-linux-ppc64-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-riscv64-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-riscv64-musl": "1.11.1",
        "@unrs/resolver-binding-linux-s390x-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-x64-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-x64-musl": "1.11.1",
        "@unrs/resolver-binding-wasm32-wasi": "1.11.1",
        "@unrs/resolver-binding-win32-arm64-msvc": "1.11.1",
        "@unrs/resolver-binding-win32-ia32-msvc": "1.11.1",
        "@unrs/resolver-binding-win32-x64-msvc": "1.11.1"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/use-callback-ref": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/use-callback-ref/-/use-callback-ref-1.3.3.tgz",
      "integrity": "sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==",
      "license": "MIT",
      "dependencies": {
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/use-sidecar": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/use-sidecar/-/use-sidecar-1.1.3.tgz",
      "integrity": "sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==",
      "license": "MIT",
      "dependencies": {
        "detect-node-es": "^1.1.0",
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/use-sync-external-store": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.6.0.tgz",
      "integrity": "sha512-Pp6GSwGP/NrPIrxVFAIkOQeyw8lFenOHijQWkUTrDvrF4ALqylP2C/KCkeS9dpUM3KvYRQhna5vt7IL95+ZQ9w==",
      "license": "MIT",
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/uuid": {
      "version": "11.1.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-11.1.0.tgz",
      "integrity": "sha512-0/A9rDy9P7cJ+8w1c9WD9V//9Wj15Ce2MPz8Ri6032usz+NfePxx5AcN3bN+r6ZL6jEo066/yNYB3tn4pQEx+A==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "bin": {
        "uuid": "dist/esm/bin/uuid"
      }
    },
    "node_modules/vfile": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/vfile/-/vfile-6.0.3.tgz",
      "integrity": "sha512-KzIbH/9tXat2u30jf+smMwFCsno4wHVdNmzFyL+T/L3UGqqk6JKfVqOFOZEpZSHADH1k40ab6NUIXZq422ov3Q==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0",
        "vfile-message": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/vfile-message": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/vfile-message/-/vfile-message-4.0.3.tgz",
      "integrity": "sha512-QTHzsGd1EhbZs4AsQ20JX1rC3cOlt/IWJruk893DfLRr57lcnOeMaWG4K0JrRta4mIJZKth2Au3mM3u03/JWKw==",
      "license": "MIT",
      "dependencies": {
        "@types/unist": "^3.0.0",
        "unist-util-stringify-position": "^4.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/unified"
      }
    },
    "node_modules/victory-vendor": {
      "version": "37.3.6",
      "resolved": "https://registry.npmjs.org/victory-vendor/-/victory-vendor-37.3.6.tgz",
      "integrity": "sha512-SbPDPdDBYp+5MJHhBCAyI7wKM3d5ivekigc2Dk2s7pgbZ9wIgIBYGVw4zGHBml/qTFbexrofXW6Gu4noGxrOwQ==",
      "license": "MIT AND ISC",
      "dependencies": {
        "@types/d3-array": "^3.0.3",
        "@types/d3-ease": "^3.0.0",
        "@types/d3-interpolate": "^3.0.1",
        "@types/d3-scale": "^4.0.2",
        "@types/d3-shape": "^3.1.0",
        "@types/d3-time": "^3.0.0",
        "@types/d3-timer": "^3.0.0",
        "d3-array": "^3.1.6",
        "d3-ease": "^3.0.1",
        "d3-interpolate": "^3.0.1",
        "d3-scale": "^4.0.2",
        "d3-shape": "^3.1.0",
        "d3-time": "^3.0.0",
        "d3-timer": "^3.0.1"
      }
    },
    "node_modules/watchpack": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/watchpack/-/watchpack-2.4.0.tgz",
      "integrity": "sha512-Lcvm7MGST/4fup+ifyKi2hjyIAwcdI4HRgtvTpIUxBRhB+RFtUh8XtDOxUfctVCnhVi+QQj49i91OyvzkJl6cg==",
      "license": "MIT",
      "dependencies": {
        "glob-to-regexp": "^0.4.1",
        "graceful-fs": "^4.1.2"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
      "license": "BSD-2-Clause"
    },
    "node_modules/webpack": {
      "version": "5.101.3",
      "resolved": "https://registry.npmjs.org/webpack/-/webpack-5.101.3.tgz",
      "integrity": "sha512-7b0dTKR3Ed//AD/6kkx/o7duS8H3f1a4w3BYpIriX4BzIhjkn4teo05cptsxvLesHFKK5KObnadmCHBwGc+51A==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/eslint-scope": "^3.7.7",
        "@types/estree": "^1.0.8",
        "@types/json-schema": "^7.0.15",
        "@webassemblyjs/ast": "^1.14.1",
        "@webassemblyjs/wasm-edit": "^1.14.1",
        "@webassemblyjs/wasm-parser": "^1.14.1",
        "acorn": "^8.15.0",
        "acorn-import-phases": "^1.0.3",
        "browserslist": "^4.24.0",
        "chrome-trace-event": "^1.0.2",
        "enhanced-resolve": "^5.17.3",
        "es-module-lexer": "^1.2.1",
        "eslint-scope": "5.1.1",
        "events": "^3.2.0",
        "glob-to-regexp": "^0.4.1",
        "graceful-fs": "^4.2.11",
        "json-parse-even-better-errors": "^2.3.1",
        "loader-runner": "^4.2.0",
        "mime-types": "^2.1.27",
        "neo-async": "^2.6.2",
        "schema-utils": "^4.3.2",
        "tapable": "^2.1.1",
        "terser-webpack-plugin": "^5.3.11",
        "watchpack": "^2.4.1",
        "webpack-sources": "^3.3.3"
      },
      "bin": {
        "webpack": "bin/webpack.js"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/webpack"
      },
      "peerDependenciesMeta": {
        "webpack-cli": {
          "optional": true
        }
      }
    },
    "node_modules/webpack-sources": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/webpack-sources/-/webpack-sources-3.3.3.tgz",
      "integrity": "sha512-yd1RBzSGanHkitROoPFd6qsrxt+oFhg/129YzheDGqeustzX0vTZJZsSsQjVQC4yzBQ56K55XU8gaNCtIzOnTg==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/webpack/node_modules/eslint-scope": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz",
      "integrity": "sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==",
      "dev": true,
      "license": "BSD-2-Clause",
      "peer": true,
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^4.1.1"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/webpack/node_modules/estraverse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
      "integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==",
      "dev": true,
      "license": "BSD-2-Clause",
      "peer": true,
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/webpack/node_modules/watchpack": {
      "version": "2.4.4",
      "resolved": "https://registry.npmjs.org/watchpack/-/watchpack-2.4.4.tgz",
      "integrity": "sha512-c5EGNOiyxxV5qmTtAB7rbiXxi1ooX1pQKMLX/MIabJjRA0SJBQOjKF+KSVfHkr9U1cADPon0mRiVe/riyaiDUA==",
      "dev": true,
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "glob-to-regexp": "^0.4.1",
        "graceful-fs": "^4.1.2"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/websocket-driver": {
      "version": "0.7.4",
      "resolved": "https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.7.4.tgz",
      "integrity": "sha512-b17KeDIQVjvb0ssuSDF2cYXSg2iztliJ4B9WdsuB6J952qCPKmnVq4DyW5motImXHDC1cBT/1UezrJVsKw5zjg==",
      "license": "Apache-2.0",
      "dependencies": {
        "http-parser-js": ">=0.5.1",
        "safe-buffer": ">=5.1.0",
        "websocket-extensions": ">=0.1.1"
      },
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/websocket-extensions": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.4.tgz",
      "integrity": "sha512-OqedPIGOfsDlo31UNwYbCFMSaO9m9G/0faIHj5/dZFDMFqPTcx6UwqyOy3COEaEOg/9VsGIpdqn62W5KhoKSpg==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "license": "MIT",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/which-boxed-primitive": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.1.1.tgz",
      "integrity": "sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-bigint": "^1.1.0",
        "is-boolean-object": "^1.2.1",
        "is-number-object": "^1.1.1",
        "is-string": "^1.1.1",
        "is-symbol": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-builtin-type": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.2.1.tgz",
      "integrity": "sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "function.prototype.name": "^1.1.6",
        "has-tostringtag": "^1.0.2",
        "is-async-function": "^2.0.0",
        "is-date-object": "^1.1.0",
        "is-finalizationregistry": "^1.1.0",
        "is-generator-function": "^1.0.10",
        "is-regex": "^1.2.1",
        "is-weakref": "^1.0.2",
        "isarray": "^2.0.5",
        "which-boxed-primitive": "^1.1.0",
        "which-collection": "^1.0.2",
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-collection": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz",
      "integrity": "sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-map": "^2.0.3",
        "is-set": "^2.0.3",
        "is-weakmap": "^2.0.2",
        "is-weakset": "^2.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-typed-array": {
      "version": "1.1.19",
      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.19.tgz",
      "integrity": "sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "for-each": "^0.3.5",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/word-wrap": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs": {
      "name": "wrap-ansi",
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
      "devOptional": true,
      "license": "ISC"
    },
    "node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "license": "ISC",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/yaml": {
      "version": "1.10.2",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-1.10.2.tgz",
      "integrity": "sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/yargs": {
      "version": "17.7.2",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz",
      "integrity": "sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==",
      "license": "MIT",
      "dependencies": {
        "cliui": "^8.0.1",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yocto-queue": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
      "devOptional": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/zwitch": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/zwitch/-/zwitch-2.0.4.tgz",
      "integrity": "sha512-bXE4cR/kVZhKZX/RjPEflHaKVhUVl85noU3v6b8apfQEc1x4A+zBxjZ4lN8LqGd6WZ3dl98pY4o717VFmoPp+A==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    }
  }
}
{
  "name": "spokoj-w-glowie",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@google/generative-ai": "^0.24.1",
    "@next/font": "^14.2.15",
    "@radix-ui/react-dialog": "^1.0.5",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-slider": "^1.0.4",
    "@radix-ui/react-slot": "^1.0.2",
    "@vercel/kv": "^3.0.0",
    "class-variance-authority": "^0.4.0",
    "clsx": "^2.1.1",
    "firebase": "^10.14.1",
    "firebase-admin": "^13.5.0",
    "framer-motion": "^10.16.4",
    "lodash": "^4.17.21",
    "lucide-react": "^0.294.0",
    "mapbox-gl": "^3.15.0",
    "next": "14.0.0",
    "odash": "^0.0.1-security",
    "openai": "^6.0.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-map-gl": "^7.1.9",
    "react-markdown": "^10.1.0",
    "react-quill": "^2.0.0",
    "recharts": "^3.2.1",
    "remark-gfm": "^4.0.1",
    "tailwind-merge": "^1.14.0"
  },
  "devDependencies": {
    "@babel/core": "^7.28.4",
    "@babel/preset-env": "^7.28.3",
    "@types/leaflet": "^1.9.20",
    "@types/node": "^20.0.0",
    "@types/react": "^18.3.25",
    "@types/react-dom": "^18.0.0",
    "autoprefixer": "^10.4.21",
    "babel-loader": "^10.0.0",
    "eslint": "^8.0.0",
    "eslint-config-next": "14.0.0",
    "tailwindcss": "^3.3.0",
    "typescript": "^5.0.0"
  }
}
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  }
}// src/types/user.ts
export interface UserProfile {
  uid: string
  email: string
  displayName: string
  bio?: string
  avatarUrl?: string
  userCode: string // 6-cyfrowy unikalny kod
  createdAt: Date
  updatedAt: Date
  moodEntries?: MoodEntry[]
  friends: string[] // array of userCodes
  friendRequests: FriendRequest[]
}

export interface FriendRequest {
  id: string
  fromUserId: string
  toUserId: string
  status: 'pending' | 'accepted' | 'rejected'
  createdAt: Date
}

export interface MoodEntry {
  id: string
  mood: number
  note?: string
  timestamp: Date
  date: string
}// src/app/(auth)/register/page.tsx
'use client'
import { useState, useEffect } from 'react'
import { useAuth } from '@/components/providers/auth-provider'
import { authService } from '@/lib/auth-service'
import { useRouter } from 'next/navigation'
import Link from 'next/link'
import { Loader2 } from 'lucide-react'

export default function RegisterPage() {
  const [formData, setFormData] = useState({
    firstName: '',
    lastName: '',
    email: '',
    password: '',
    confirmPassword: ''
  })
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')
  const router = useRouter()
  const { user, loading: authLoading } = useAuth()

  // Je≈õli u≈ºytkownik jest ju≈º zalogowany, przekieruj do dashboard
  useEffect(() => {
    if (user && !authLoading) {
      router.push('/dashboard')
    }
  }, [user, authLoading, router])

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setFormData(prev => ({
      ...prev,
      [e.target.name]: e.target.value
    }))
  }

  const handleRegister = async (e: React.FormEvent) => {
    e.preventDefault()
    setLoading(true)
    setError('')

    // Walidacja
    if (formData.password !== formData.confirmPassword) {
      setError('Has≈Ça nie sƒÖ identyczne')
      setLoading(false)
      return
    }

    if (formData.password.length < 6) {
      setError('Has≈Ço musi mieƒá co najmniej 6 znak√≥w')
      setLoading(false)
      return
    }

    try {
      await authService.register(
        formData.email, 
        formData.password, 
        {
          firstName: formData.firstName,
          lastName: formData.lastName
        }
      )
      // Przekierowanie nastƒÖpi automatycznie przez AuthProvider
    } catch (error: any) {
      setError(error.message)
    } finally {
      setLoading(false)
    }
  }

  if (authLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-100 flex items-center justify-center">
        <div className="text-center">
          <Loader2 className="h-12 w-12 animate-spin text-blue-500 mx-auto mb-4" />
          <p className="text-gray-600">≈Åadowanie...</p>
        </div>
      </div>
    )
  }

  if (user) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-100 flex items-center justify-center">
        <div className="text-center">
          <Loader2 className="h-12 w-12 animate-spin text-blue-500 mx-auto mb-4" />
          <p className="text-gray-600">Przekierowywanie...</p>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-100 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-md w-full space-y-8">
        <div className="bg-white rounded-2xl shadow-xl p-8">
          <div className="text-center mb-8">
            <div className="mx-auto w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center mb-4">
              <span className="text-white text-2xl font-bold">M</span>
            </div>
            <h1 className="text-3xl font-bold text-gray-900">Do≈ÇƒÖcz do nas</h1>
            <p className="text-gray-600 mt-2">Stw√≥rz swoje konto i zacznij ≈õledziƒá sw√≥j nastr√≥j</p>
          </div>

          <form onSubmit={handleRegister} className="space-y-6">
            {error && (
              <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg text-sm">
                {error}
              </div>
            )}

            <div className="grid grid-cols-2 gap-4">
              <div>
                <label htmlFor="firstName" className="block text-sm font-medium text-gray-700 mb-2">
                  Imiƒô
                </label>
                <input
                  id="firstName"
                  name="firstName"
                  type="text"
                  value={formData.firstName}
                  onChange={handleChange}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
                  required
                  placeholder="Twoje imiƒô"
                />
              </div>

              <div>
                <label htmlFor="lastName" className="block text-sm font-medium text-gray-700 mb-2">
                  Nazwisko
                </label>
                <input
                  id="lastName"
                  name="lastName"
                  type="text"
                  value={formData.lastName}
                  onChange={handleChange}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
                  required
                  placeholder="Twoje nazwisko"
                />
              </div>
            </div>

            <div>
              <label htmlFor="email" className="block text-sm font-medium text-gray-700 mb-2">
                Email
              </label>
              <input
                id="email"
                name="email"
                type="email"
                value={formData.email}
                onChange={handleChange}
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
                required
                placeholder="tw√≥j@email.com"
              />
            </div>

            <div>
              <label htmlFor="password" className="block text-sm font-medium text-gray-700 mb-2">
                Has≈Ço
              </label>
              <input
                id="password"
                name="password"
                type="password"
                value={formData.password}
                onChange={handleChange}
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
                required
                minLength={6}
                placeholder="Minimum 6 znak√≥w"
              />
            </div>

            <div>
              <label htmlFor="confirmPassword" className="block text-sm font-medium text-gray-700 mb-2">
                Potwierd≈∫ has≈Ço
              </label>
              <input
                id="confirmPassword"
                name="confirmPassword"
                type="password"
                value={formData.confirmPassword}
                onChange={handleChange}
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
                required
                minLength={6}
                placeholder="Powt√≥rz has≈Ço"
              />
            </div>

            <button
              type="submit"
              disabled={loading}
              className="w-full bg-gradient-to-r from-blue-500 to-purple-500 text-white py-3 px-4 rounded-lg hover:from-blue-600 hover:to-purple-600 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 transition-all duration-200 font-medium"
            >
              {loading ? (
                <div className="flex items-center justify-center">
                  <Loader2 className="h-5 w-5 animate-spin mr-2" />
                  Rejestracja...
                </div>
              ) : (
                'Zarejestruj siƒô'
              )}
            </button>
          </form>

          <div className="mt-6 text-center">
            <p className="text-gray-600">
              Masz ju≈º konto?{' '}
              <Link 
                href="/auth/login" 
                className="text-blue-600 hover:text-blue-700 font-medium transition-colors"
              >
                Zaloguj siƒô
              </Link>
            </p>
          </div>

          <div className="mt-6 p-4 bg-blue-50 rounded-lg">
            <p className="text-sm text-blue-700 text-center">
              üí° Po rejestracji otrzymasz sw√≥j unikalny kod, kt√≥rym mo≈ºesz dzieliƒá siƒô ze znajomymi!
            </p>
          </div>
        </div>
      </div>
    </div>
  )
}import Link from 'next/link'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Sparkles, ArrowLeft } from 'lucide-react'

export default function ForgotPasswordPage() {
  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-500/5 to-purple-600/5 flex items-center justify-center p-4">
      <div className="w-full max-w-md">
        {/* Logo */}
        <div className="text-center mb-8">
          <div className="flex items-center justify-center gap-2 mb-4">
            <div className="flex h-12 w-12 items-center justify-center rounded-xl bg-gradient-to-br from-blue-500 to-purple-600">
              <Sparkles className="h-6 w-6 text-white" />
            </div>
          </div>
          <h1 className="text-2xl font-bold text-gray-900">Spok√≥j w g≈Çowie</h1>
          <p className="text-gray-600 mt-2">Resetowanie has≈Ça</p>
        </div>

        {/* Forgot Password Form */}
        <Card className="bg-white/80 backdrop-blur-md border border-gray-200/50">
          <CardHeader className="text-center">
            <CardTitle className="text-xl">Zapomnia≈Çe≈õ has≈Ça?</CardTitle>
            <CardDescription>
              Wprowad≈∫ sw√≥j email, a wy≈õlemy Ci link do resetowania has≈Ça
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-2">
              <label htmlFor="email" className="text-sm font-medium text-gray-700">
                Adres email
              </label>
              <Input
                id="email"
                type="email"
                placeholder="wprowad≈∫@email.com"
                className="w-full"
              />
            </div>

            <Button className="w-full" size="lg">
              Wy≈õlij link resetujƒÖcy
            </Button>

            <div className="text-center">
              <Link 
                href="/auth/login" 
                className="inline-flex items-center text-sm text-blue-600 hover:text-blue-500 font-medium"
              >
                <ArrowLeft className="h-4 w-4 mr-1" />
                Wr√≥ƒá do logowania
              </Link>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}// src/app/(auth)/layout.tsx
export default function AuthLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-100 flex items-center justify-center p-4">
      <div className="w-full max-w-md">
        {children}
      </div>
    </div>
  )
}// src/app/(auth)/login/page.tsx - POPRAWIONE
'use client'
import { useState } from 'react'
import { useAuth } from '@/components/providers/auth-provider'
import { authService } from '@/lib/auth-service'
import { useRouter } from 'next/navigation'
import Link from 'next/link'

export default function LoginPage() {
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')
  const router = useRouter()
  const { user } = useAuth()

  // Je≈õli u≈ºytkownik jest ju≈º zalogowany, przekieruj do dashboard
  if (user) {
    router.push('/dashboard')
  }

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault()
    setLoading(true)
    setError('')

    try {
      await authService.login(email, password)
      router.push('/dashboard')
    } catch (error: any) {
      setError('B≈ÇƒÖd logowania: ' + error.message)
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="bg-white rounded-2xl shadow-xl p-8">
      <div className="text-center mb-8">
        <h1 className="text-3xl font-bold text-gray-900">Zaloguj siƒô</h1>
        <p className="text-gray-600 mt-2">Witaj z powrotem!</p>
      </div>

      <form onSubmit={handleLogin} className="space-y-6">
        {error && (
          <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg text-sm">
            {error}
          </div>
        )}

        <div>
          <label htmlFor="email" className="block text-sm font-medium text-gray-700 mb-2">
            Email
          </label>
          <input
            id="email"
            type="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            required
          />
        </div>

        <div>
          <label htmlFor="password" className="block text-sm font-medium text-gray-700 mb-2">
            Has≈Ço
          </label>
          <input
            id="password"
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            required
          />
        </div>

        <button
          type="submit"
          disabled={loading}
          className="w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50"
        >
          {loading ? 'Logowanie...' : 'Zaloguj siƒô'}
        </button>
      </form>

      <div className="mt-6 text-center">
        <p className="text-gray-600">
          Nie masz konta?{' '}
          <Link href="/auth/register" className="text-blue-600 hover:text-blue-700 font-medium">
            Zarejestruj siƒô
          </Link>
        </p>
      </div>
    </div>
  )
}// src/app/articles/[id]/page.tsx
'use client'

import { useEffect, useState } from 'react'
import { useParams, useRouter } from 'next/navigation'
import { db } from '@/lib/firebase'
import { doc, getDoc, updateDoc, increment } from 'firebase/firestore'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { ArrowLeft, BookOpen, Clock, Eye, Calendar } from 'lucide-react'
import Link from 'next/link'
import Header from '@/components/layout/header'
import { useAuth } from '@/components/providers/auth-provider'

export default function ArticleDetailPage() {
  const router = useRouter()
  const params = useParams()
  const articleId = params.id as string
  const { user } = useAuth()

  const [article, setArticle] = useState<any>(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)

  useEffect(() => {
    const fetchArticle = async () => {
      if (!articleId) return

      try {
        const docRef = doc(db, 'articles', articleId)
        const docSnap = await getDoc(docRef)

        if (docSnap.exists()) {
          const data = docSnap.data()
          
          // ‚úÖ POPRAWIONE: Admin widzi wszystko, user tylko published
          if (data.status === 'published' || user?.role === 'admin') {
            setArticle({ id: docSnap.id, ...data })
            
            // Zwiƒôksz licznik wy≈õwietle≈Ñ (tylko dla opublikowanych)
            if (data.status === 'published') {
              await updateDoc(docRef, {
                views: increment(1)
              })
            }
          } else {
            setError('Artyku≈Ç nie jest jeszcze opublikowany.')
          }
        } else {
          setError('Artyku≈Ç nie zosta≈Ç znaleziony.')
        }
      } catch (err) {
        console.error('B≈ÇƒÖd ≈Çadowania artyku≈Çu:', err)
        setError('Nie uda≈Ço siƒô za≈Çadowaƒá artyku≈Çu.')
      } finally {
        setLoading(false)
      }
    }

    if (user !== undefined) { // Czekaj a≈º user siƒô za≈Çaduje
      fetchArticle()
    }
  }, [articleId, user])

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/20 to-purple-50/10 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <p className="text-gray-600">≈Åadowanie artyku≈Çu...</p>
        </div>
      </div>
    )
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/20 to-purple-50/10 flex items-center justify-center">
        <Card className="w-full max-w-md p-6 text-center">
          <BookOpen className="h-16 w-16 text-gray-400 mx-auto mb-4" />
          <h2 className="text-xl font-bold text-gray-900 mb-2">Nie znaleziono artyku≈Çu</h2>
          <p className="text-gray-600 mb-6">{error}</p>
          <Button onClick={() => router.push('/articles')}>
            <ArrowLeft className="mr-2 h-4 w-4" />
            Wr√≥ƒá do listy
          </Button>
        </Card>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/20 to-purple-50/10">
      <Header />
      <div className="container mx-auto px-4 py-8 max-w-4xl">
        <Button
          variant="ghost"
          onClick={() => router.back()}
          className="mb-6 flex items-center gap-2"
        >
          <ArrowLeft className="h-4 w-4" />
          Wr√≥ƒá do artyku≈Ç√≥w
        </Button>

        {/* Status badge dla admina */}
        {user?.role === 'admin' && article.status !== 'published' && (
          <div className="mb-4 p-3 bg-amber-100 border border-amber-300 rounded-lg text-amber-800 text-sm font-medium">
            üöß Tryb podglƒÖdu: Ten artyku≈Ç ma status "{article.status}" i nie jest widoczny dla zwyk≈Çych u≈ºytkownik√≥w.
          </div>
        )}

        <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm">
          <CardHeader>
            <div className="flex items-center gap-2 text-sm text-gray-500 mb-2">
              <span className="px-2 py-1 bg-blue-100 text-blue-700 rounded-full text-xs font-medium">
                {article.category}
              </span>
              <span>‚Ä¢</span>
              <div className="flex items-center gap-1">
                <Calendar className="h-4 w-4" />
                <span>{article.createdAt?.toDate().toLocaleDateString('pl-PL')}</span>
              </div>
              {user?.role === 'admin' && (
                <>
                  <span>‚Ä¢</span>
                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                    article.status === 'published' 
                      ? 'bg-green-100 text-green-700' 
                      : 'bg-gray-100 text-gray-700'
                  }`}>
                    {article.status === 'published' ? 'Opublikowany' : 'Szkic'}
                  </span>
                </>
              )}
            </div>
            <CardTitle className="text-3xl font-bold text-gray-900">{article.title}</CardTitle>
            <p className="text-gray-600 mt-2 text-lg">{article.excerpt}</p>
          </CardHeader>
          <CardContent>
            <div className="prose prose-lg max-w-none mb-6">
              <div
                className="article-content text-gray-800 leading-relaxed"
                dangerouslySetInnerHTML={{ __html: article.content || '' }}
              />
            </div>

            {/* XP info - tylko dla opublikowanych artyku≈Ç√≥w */}
            {article.status === 'published' && (
              <div className="p-4 bg-green-50 border border-green-200 rounded-lg text-center mb-6">
                <div className="inline-flex items-center gap-2 text-green-700 font-medium">
                  <BookOpen className="h-5 w-5" />
                  Za przeczytanie tego artyku≈Çu otrzymujesz <strong>10 XP</strong>
                </div>
              </div>
            )}

            {/* Meta */}
            <div className="flex flex-wrap gap-4 text-sm text-gray-500 border-t border-gray-100 pt-4">
              <div className="flex items-center gap-1">
                <Clock className="h-4 w-4" />
                {article.readTime} min czytania
              </div>
              <div className="flex items-center gap-1">
                <Eye className="h-4 w-4" />
                {article.views || 0} wy≈õwietle≈Ñ
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}// src/app/articles/page.tsx
'use client'

import { useEffect, useState } from 'react'
import { useAuth } from '@/components/providers/auth-provider'
import { useArticles } from '@/hooks/useArticles'
import Header from '@/components/layout/header'
import Link from 'next/link'
import { Button } from '@/components/ui/button'
import { Card, CardContent } from '@/components/ui/card'
import { BookOpen, Shield, Award } from 'lucide-react'
import { ArticleList } from '@/components/articles/article-list'

export default function ArticlesPage() {
  const { user: authUser } = useAuth()
  const [user, setUser] = useState<{ id: string; role: 'user' | 'admin' } | null>(null)
  const { articles, loading } = useArticles(user?.role, user?.id)

  useEffect(() => {
    if (authUser) {
      setUser({ id: authUser.uid, role: authUser.role || 'user' })
    } else {
      setUser({ id: 'guest', role: 'user' })
    }
  }, [authUser])

  const handleArticleRead = (articleId: string) => {
    console.log('Artyku≈Ç przeczytany ‚Äì tu bƒôdzie zapis XP:', articleId)
    // Potem: userService.updateXP(user.id, 10)
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/20 to-purple-50/10">
      <Header />
      <div className="container mx-auto px-4 py-8 max-w-7xl">
        <div className="text-center mb-8">
          <div className="inline-flex items-center gap-3 px-6 py-3 rounded-2xl bg-white/80 backdrop-blur-sm border border-white/20 shadow-lg">
            <div className="p-2 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl">
              <BookOpen className="h-6 w-6 text-white" />
            </div>
            <div>
              <h1 className="text-3xl font-bold bg-gradient-to-r from-slate-800 to-slate-600 bg-clip-text text-transparent">
                Artyku≈Çy
              </h1>
              <p className="text-gray-600 text-sm">
                Psychologia, nauka, relacje ‚Äì rozwijaj siƒô z nami
              </p>
            </div>
          </div>
        </div>

        {/* ‚úÖ NAPIS O XP */}
        <div className="text-center mb-8">
          <div className="inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-green-500 to-emerald-600 rounded-full text-white font-semibold shadow-md">
            <Award className="h-5 w-5" />
            Za przeczytanie artyku≈Çu dostaniesz <strong>10 XP</strong>
          </div>
        </div>

        {/* Lista artyku≈Ç√≥w */}
        <ArticleList
          articles={articles}
          loading={loading}
          user={user}
          onArticleRead={handleArticleRead}
        />

        {/* ‚úÖ PRZYCISK DLA ADMINA */}
        {user?.role === 'admin' && (
          <div className="text-center mt-10">
            <Link href="/admin/articles">
              <Button className="bg-gradient-to-r from-purple-500 to-indigo-600 text-white px-6 py-3 rounded-xl shadow-md hover:from-purple-600 hover:to-indigo-700">
                <Shield className="h-4 w-4 mr-2" />
                Przejd≈∫ do panelu administratora
              </Button>
            </Link>
          </div>
        )}
      </div>
    </div>
  )
}export default function ColorTest() {
  return (
    <div className="max-w-4xl mx-auto space-y-8">
      <div className="text-center">
        <h1 className="text-4xl font-bold text-text-primary mb-2">
          Spok√≥j w g≈Çowie
        </h1>
        <p className="text-lg text-text-secondary">
          Design System Test
        </p>
      </div>

      {/* Color Palette */}
      <section>
        <h2 className="text-2xl font-semibold mb-4 text-text-primary">
          Color Palette
        </h2>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
          <div className="space-y-2">
            <div className="w-full h-20 bg-primary rounded-lg shadow-sm"></div>
            <p className="text-sm text-text-secondary text-center">Primary</p>
          </div>
          <div className="space-y-2">
            <div className="w-full h-20 bg-accent-green rounded-lg shadow-sm"></div>
            <p className="text-sm text-text-secondary text-center">Accent Green</p>
          </div>
          <div className="space-y-2">
            <div className="w-full h-20 bg-accent-orange rounded-lg shadow-sm"></div>
            <p className="text-sm text-text-secondary text-center">Accent Orange</p>
          </div>
          <div className="space-y-2">
            <div className="w-full h-20 bg-accent-red rounded-lg shadow-sm"></div>
            <p className="text-sm text-text-secondary text-center">Accent Red</p>
          </div>
        </div>
      </section>

      {/* Typography Scale */}
      <section>
        <h2 className="text-2xl font-semibold mb-4 text-text-primary">
          Typography
        </h2>
        <div className="space-y-3">
          <h1 className="text-4xl font-bold text-text-primary">Heading 1 - 36px</h1>
          <h2 className="text-3xl font-semibold text-text-primary">Heading 2 - 30px</h2>
          <h3 className="text-2xl font-semibold text-text-primary">Heading 3 - 24px</h2>
          <p className="text-base text-text-secondary">Body text - 16px</p>
          <p className="text-sm text-text-tertiary">Small text - 14px</p>
        </div>
      </section>

      {/* Glassmorphism Test */}
      <section>
        <h2 className="text-2xl font-semibold mb-4 text-text-primary">
          Glassmorphism
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div className="glass-card p-6">
            <h3 className="text-lg font-semibold mb-2">Glass Card</h3>
            <p className="text-text-secondary">This is a glassmorphism card with backdrop blur</p>
          </div>
          <div className="bg-gradient-to-br from-primary-500 to-primary-700 p-6 rounded-2xl">
            <h3 className="text-lg font-semibold mb-2 text-white">Gradient Card</h3>
            <p className="text-white/80">This card shows gradient background</p>
          </div>
        </div>
      </section>

      {/* Buttons Preview */}
      <section>
        <h2 className="text-2xl font-semibold mb-4 text-text-primary">
          Button Styles
        </h2>
        <div className="flex flex-wrap gap-3">
          <button className="px-4 py-2 bg-primary text-white rounded-lg font-medium">
            Primary Button
          </button>
          <button className="px-4 py-2 bg-accent-green text-white rounded-lg font-medium">
            Success Button
          </button>
          <button className="px-4 py-2 border border-border-light text-text-primary rounded-lg font-medium">
            Outline Button
          </button>
        </div>
      </section>
    </div>
  )
}// src/app/admin/articles/edit/[id]/page.tsx
'use client'

import { useState, useEffect } from 'react'
import { useParams, useRouter } from 'next/navigation'
import { useAuth } from '@/components/providers/auth-provider'
import { useArticles } from '@/hooks/useArticles'
import { Button } from '@/components/ui/button'
import { ArrowLeft, Save, Image as ImageIcon } from 'lucide-react'
import ReactQuill from 'react-quill'
import 'react-quill/dist/quill.snow.css'
import Header from '@/components/layout/header'

const CATEGORIES = [
  'Stres', 'Lƒôki', 'Matura', 'Nauka', 'Relacje', 'Samopoczucie',
  'Sen', 'Motywacja', 'Prokrastynacja', 'Wsparcie'
]

export default function EditArticlePage() {
  const { id } = useParams()
  const router = useRouter()
  const { user } = useAuth()
  const { articles, updateArticle } = useArticles('admin', user?.uid)

  const [title, setTitle] = useState('')
  const [excerpt, setExcerpt] = useState('')
  const [content, setContent] = useState('')
  const [category, setCategory] = useState('Stres')
  const [readTime, setReadTime] = useState(5)
  const [status, setStatus] = useState<'draft' | 'published'>('draft')
  const [isFeatured, setIsFeatured] = useState(false)
  const [isSubmitting, setIsSubmitting] = useState(false)
  const [coverImage, setCoverImage] = useState<File | null>(null)
  const [coverPreview, setCoverPreview] = useState<string | null>(null)
  const [originalImageUrl, setOriginalImageUrl] = useState<string | undefined>(undefined)

  // Za≈Çaduj artyku≈Ç
  useEffect(() => {
    if (!id || typeof id !== 'string') return
    const article = articles.find(a => a.id === id)
    if (article) {
      setTitle(article.title)
      setExcerpt(article.excerpt)
      setContent(article.content)
      setCategory(article.category)
      setReadTime(article.readTime)
      setStatus(article.status)
      setIsFeatured(article.isFeatured)
      setOriginalImageUrl(article.imageUrl)
      if (article.imageUrl) {
        setCoverPreview(article.imageUrl)
      }
    }
  }, [id, articles])

  const handleCoverChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0]
    if (file && file.type.startsWith('image/')) {
      setCoverImage(file)
      setCoverPreview(URL.createObjectURL(file))
    }
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    if (!id || typeof id !== 'string' || !user) return

    setIsSubmitting(true)
    try {
      await updateArticle(
        id,
        {
          title,
          excerpt,
          content,
          category,
          readTime,
          status,
          isFeatured,
        },
        coverImage,
        originalImageUrl
      )
      alert('‚úÖ Artyku≈Ç zosta≈Ç zaktualizowany!')
      router.push('/admin/articles')
    } catch (err) {
      alert('‚ùå B≈ÇƒÖd: ' + (err as Error).message)
    } finally {
      setIsSubmitting(false)
    }
  }

  const modules = {
    toolbar: [
      [{ 'header': [1, 2, 3, false] }],
      ['bold', 'italic', 'underline'],
      [{ 'list': 'ordered' }, { 'list': 'bullet' }],
      ['blockquote', 'code-block'],
      ['link', 'image'],
      [{ 'color': [] }, { 'background': [] }],
      ['clean']
    ]
  }

  const formats = [
    'header',
    'bold', 'italic', 'underline',
    'list', 'bullet', 'ordered',
    'blockquote', 'code-block',
    'link', 'image',
    'color', 'background'
  ]

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      <div className="sticky top-0 z-10 bg-white border-b border-gray-200 px-6 py-3 flex items-center justify-between">
        <Button variant="ghost" size="sm" onClick={() => router.back()}>
          <ArrowLeft className="h-4 w-4 mr-2" />
          Anuluj
        </Button>
        <h1 className="text-lg font-medium">Edytuj artyku≈Ç</h1>
        <Button
          onClick={handleSubmit}
          disabled={isSubmitting || !title.trim()}
          className="bg-blue-600 hover:bg-blue-700 text-white flex items-center gap-2"
        >
          <Save className="h-4 w-4" />
          {isSubmitting ? 'Zapisywanie...' : 'Zapisz zmiany'}
        </Button>
      </div>

      <div className="container mx-auto px-6 py-8 max-w-6xl">
        <form onSubmit={handleSubmit} className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          <div className="lg:col-span-2 space-y-6">
            <input
              type="text"
              value={title}
              onChange={(e) => setTitle(e.target.value)}
              className="w-full text-3xl font-bold outline-none"
            />
            <textarea
              value={excerpt}
              onChange={(e) => setExcerpt(e.target.value)}
              className="w-full text-lg text-gray-600 outline-none"
              rows={2}
            />
            <div className="border border-gray-300 rounded-lg overflow-hidden">
              <ReactQuill
                value={content}
                onChange={setContent}
                modules={modules}
                formats={formats}
                className="h-[600px]"
              />
            </div>
          </div>

          <div className="space-y-6">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Ok≈Çadka artyku≈Çu
              </label>
              {coverPreview ? (
                <img
                  src={coverPreview}
                  alt="PodglƒÖd ok≈Çadki"
                  className="w-full h-40 object-cover rounded-lg border"
                />
              ) : (
                <div className="text-gray-400">Brak ok≈Çadki</div>
              )}
              <div
                onClick={() => document.getElementById('cover-input')?.click()}
                className="mt-2 text-sm text-blue-600 cursor-pointer"
              >
                Zmie≈Ñ zdjƒôcie
              </div>
              <input
                id="cover-input"
                type="file"
                accept="image/*"
                onChange={handleCoverChange}
                className="hidden"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">Kategoria</label>
              <select
                value={category}
                onChange={(e) => setCategory(e.target.value)}
                className="w-full p-2 border border-gray-300 rounded"
              >
                {CATEGORIES.map(cat => (
                  <option key={cat} value={cat}>{cat}</option>
                ))}
              </select>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Czas czytania (min)
              </label>
              <input
                type="number"
                min="1"
                value={readTime}
                onChange={(e) => setReadTime(Number(e.target.value))}
                className="w-full p-2 border border-gray-300 rounded"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">Status</label>
              <select
                value={status}
                onChange={(e) => setStatus(e.target.value as any)}
                className="w-full p-2 border border-gray-300 rounded"
              >
                <option value="draft">Szkic</option>
                <option value="published">Opublikowany</option>
              </select>
            </div>

            <div className="flex items-center gap-2">
              <input
                type="checkbox"
                id="featured"
                checked={isFeatured}
                onChange={(e) => setIsFeatured(e.target.checked)}
                className="h-4 w-4"
              />
              <label htmlFor="featured" className="text-sm text-gray-700">
                Wyr√≥≈ºniony
              </label>
            </div>
          </div>
        </form>
      </div>
    </div>
  )
}// src/app/admin/articles/new/page.tsx - CLEAN WERSJA
'use client'

import { useState, useRef, useEffect } from 'react'
import { useAuth } from '@/components/providers/auth-provider'
import { useArticles } from '@/hooks/useArticles'
import { useRouter } from 'next/navigation'
import { motion, AnimatePresence } from 'framer-motion'
import { 
  ArrowLeft, 
  Save, 
  Image as ImageIcon, 
  Eye, 
  Clock, 
  Tag,
  Sparkles,
  Type,
  Settings,
  Check,
  Upload,
  X,
  BookOpen,
  Users,
  Smartphone,
  Tablet,
  Monitor,
  Play,
  Share2
} from 'lucide-react'
import ReactQuill from 'react-quill'
import 'react-quill/dist/quill.snow.css'
import Header from '@/components/layout/header'

const CATEGORIES = [
  'Stres', 'Lƒôki', 'Matura', 'Nauka', 'Relacje', 'Samopoczucie',
  'Sen', 'Motywacja', 'Prokrastynacja', 'Wsparcie'
]

const TAGS = [
  'mindfulness', 'edukacja', 'psychologia', 'nastolatek', 'rodzice',
  'szko≈Ça', 'emocje', 'relaks', 'koncentracja', 'rozwoj-osobisty'
]

export default function NewArticlePage() {
  const { user } = useAuth()
  const router = useRouter()
  const { addArticle } = useArticles('admin', user?.uid)

  const [formData, setFormData] = useState({
    title: '',
    excerpt: '',
    content: '',
    category: 'Stres',
    tags: [] as string[],
    readTime: 5,
    status: 'draft' as 'draft' | 'published',
    isFeatured: false,
    isTrending: false,
  })
  
  const [isSubmitting, setIsSubmitting] = useState(false)
  const [coverImage, setCoverImage] = useState<File | null>(null)
  const [coverPreview, setCoverPreview] = useState<string | null>(null)
  const [activeTab, setActiveTab] = useState<'edit' | 'preview'>('edit')
  const [previewDevice, setPreviewDevice] = useState<'mobile' | 'tablet' | 'desktop'>('desktop')
  const [wordCount, setWordCount] = useState(0)
  const [charCount, setCharCount] = useState(0)
  const [selectedTags, setSelectedTags] = useState<string[]>([])
  const [contentScore, setContentScore] = useState(0)
  const [isPlaying, setIsPlaying] = useState(false)
  const fileInputRef = useRef<HTMLInputElement>(null)

  // Calculate content quality score
  useEffect(() => {
    let score = 0
    if (formData.title.length > 10) score += 25
    if (formData.excerpt.length > 50) score += 25
    if (wordCount > 300) score += 30
    if (coverPreview) score += 10
    if (selectedTags.length >= 2) score += 10
    setContentScore(Math.min(score, 100))
  }, [formData, wordCount, coverPreview, selectedTags])

  const modules = {
    toolbar: {
      container: [
        [{ 'header': [1, 2, 3, false] }],
        ['bold', 'italic', 'underline', 'strike'],
        [{ 'color': [] }, { 'background': [] }],
        [{ 'list': 'ordered'}, { 'list': 'bullet' }],
        ['blockquote', 'code-block'],
        ['link', 'image'],
        ['clean']
      ],
    },
  }

  const formats = [
    'header',
    'bold', 'italic', 'underline', 'strike',
    'color', 'background',
    'list', 'bullet',
    'blockquote', 'code-block',
    'link', 'image'
  ]

  const handleContentChange = (content: string) => {
    setFormData(prev => ({ ...prev, content }))
    
    const text = content.replace(/<[^>]*>/g, '')
    setWordCount(text.split(/\s+/).filter(word => word.length > 0).length)
    setCharCount(text.length)
  }

  const handleCoverChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0]
    if (file && file.type.startsWith('image/')) {
      if (file.size > 5 * 1024 * 1024) {
        alert('Plik jest zbyt du≈ºy. Maksymalny rozmiar to 5MB.')
        return
      }
      setCoverImage(file)
      setCoverPreview(URL.createObjectURL(file))
    }
  }

  const removeCover = () => {
    setCoverImage(null)
    setCoverPreview(null)
    if (fileInputRef.current) fileInputRef.current.value = ''
  }

  const toggleTag = (tag: string) => {
    setSelectedTags(prev => 
      prev.includes(tag) 
        ? prev.filter(t => t !== tag)
        : [...prev, tag]
    )
  }

  const calculateReadTime = () => {
    const words = formData.content.replace(/<[^>]*>/g, '').split(/\s+/).length
    return Math.max(1, Math.ceil(words / 200))
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    if (!user || !formData.title.trim()) return

    setIsSubmitting(true)
    try {
      const finalData = {
        ...formData,
        tags: selectedTags,
        readTime: calculateReadTime()
      }

      await addArticle(finalData, coverImage || undefined)
      
      setTimeout(() => {
        router.push('/admin/articles')
      }, 1500)
      
    } catch (err) {
      console.error('B≈ÇƒÖd zapisu:', err)
      alert('‚ùå B≈ÇƒÖd: ' + (err as Error).message)
    } finally {
      setIsSubmitting(false)
    }
  }

  const getPreviewWidth = () => {
    switch (previewDevice) {
      case 'mobile': return 'max-w-sm'
      case 'tablet': return 'max-w-2xl'
      case 'desktop': return 'max-w-4xl'
      default: return 'max-w-4xl'
    }
  }

  const simulateReading = () => {
    setIsPlaying(true)
    setTimeout(() => setIsPlaying(false), calculateReadTime() * 60 * 1000)
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/20 to-purple-50/10">
      <Header />

      {/* Clean Sticky Header */}
      <div className="sticky top-0 z-50 bg-white/95 backdrop-blur-sm border-b border-gray-200/60 shadow-sm">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-6">
              <button
                onClick={() => router.back()}
                className="flex items-center gap-2 text-gray-600 hover:text-gray-900 transition-colors group"
              >
                <ArrowLeft className="h-5 w-5 group-hover:-translate-x-1 transition-transform" />
                <span className="font-medium">Wr√≥ƒá</span>
              </button>
              
              <div className="flex items-center gap-3">
                <div className="p-2 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl">
                  <BookOpen className="h-6 w-6 text-white" />
                </div>
                <div>
                  <h1 className="text-xl font-bold text-gray-900">Nowy Artyku≈Ç</h1>
                  <p className="text-sm text-gray-600">Tw√≥rz inspirujƒÖce tre≈õci</p>
                </div>
              </div>
            </div>

            <div className="flex items-center gap-6">
              {/* Content Stats */}
              <div className="flex items-center gap-4 text-sm">
                <div className="px-3 py-1.5 rounded-full bg-blue-50 text-blue-600 font-medium">
                  <Clock className="h-4 w-4 inline mr-1" />
                  {calculateReadTime()} min
                </div>
                <div className="px-3 py-1.5 rounded-full bg-gray-100 text-gray-700 font-medium">
                  {wordCount} s≈Ç√≥w
                </div>
                <div className="flex items-center gap-2">
                  <div className="w-16 bg-gray-200 rounded-full h-2">
                    <div 
                      className={`h-2 rounded-full transition-all duration-500 ${
                        contentScore >= 80 ? 'bg-green-500' : 
                        contentScore >= 60 ? 'bg-amber-500' : 'bg-red-500'
                      }`}
                      style={{ width: `${contentScore}%` }}
                    />
                  </div>
                  <span className="text-sm font-medium text-gray-700">
                    {contentScore}%
                  </span>
                </div>
              </div>

              {/* Action Button */}
              <button
                onClick={handleSubmit}
                disabled={isSubmitting || !formData.title.trim()}
                className="flex items-center gap-3 px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-xl font-semibold hover:from-blue-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-lg hover:shadow-xl"
              >
                {isSubmitting ? (
                  <>
                    <div className="h-5 w-5 border-2 border-white border-t-transparent rounded-full animate-spin" />
                    <span>Publikowanie...</span>
                  </>
                ) : (
                  <>
                    <Save className="h-5 w-5" />
                    <span>{formData.status === 'published' ? 'Opublikuj' : 'Zapisz szkic'}</span>
                  </>
                )}
              </button>
            </div>
          </div>

          {/* Clean Navigation */}
          <div className="flex gap-1 mt-6">
            {[
              { id: 'edit', label: 'Edytuj', icon: Type },
              { id: 'preview', label: 'PodglƒÖd', icon: Eye }
            ].map((tab) => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id as any)}
                className={`flex items-center gap-2 px-6 py-3 rounded-lg font-medium transition-all duration-200 ${
                  activeTab === tab.id
                    ? 'bg-blue-600 text-white shadow-md'
                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'
                }`}
              >
                <tab.icon className="h-4 w-4" />
                {tab.label}
              </button>
            ))}
          </div>
        </div>
      </div>

      <div className="container mx-auto px-6 py-8 max-w-7xl">
        <form onSubmit={handleSubmit}>
          <div className="grid grid-cols-1 xl:grid-cols-4 gap-8">
            
            {/* Main Content Area */}
            <div className="xl:col-span-3">
              <AnimatePresence mode="wait">
                {activeTab === 'edit' && (
                  <motion.div
                    key="edit"
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    exit={{ opacity: 0, y: -20 }}
                    className="space-y-8"
                  >
                    {/* Title Section */}
                    <div className="bg-white rounded-2xl p-8 shadow-sm border border-gray-200/60">
                      <div className="flex items-center justify-between mb-4">
                        <label className="text-sm font-semibold text-gray-900 uppercase tracking-wide">
                          Tytu≈Ç Artyku≈Çu
                        </label>
                        <div className="text-sm text-gray-500">
                          {charCount} znak√≥w
                        </div>
                      </div>
                      <input
                        type="text"
                        placeholder="Wpisz chwytliwy tytu≈Ç, kt√≥ry przyciƒÖgnie uwagƒô..."
                        value={formData.title}
                        onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}
                        className="w-full text-4xl font-bold bg-transparent outline-none placeholder:text-gray-400 resize-none"
                        style={{ minHeight: '60px' }}
                      />
                    </div>

                    {/* Excerpt Section */}
                    <div className="bg-white rounded-2xl p-6 shadow-sm border border-gray-200/60">
                      <div className="flex items-center justify-between mb-3">
                        <label className="text-sm font-semibold text-gray-900">
                          Kr√≥tki Opis
                        </label>
                        <div className="text-sm text-gray-500">
                          {formData.excerpt.length} znak√≥w
                        </div>
                      </div>
                      <textarea
                        placeholder="Napisz kr√≥tki, zachƒôcajƒÖcy opis artyku≈Çu..."
                        value={formData.excerpt}
                        onChange={(e) => setFormData(prev => ({ ...prev, excerpt: e.target.value }))}
                        rows={3}
                        className="w-full text-lg text-gray-700 bg-transparent outline-none placeholder:text-gray-400 resize-none"
                      />
                    </div>

                    {/* Rich Text Editor */}
                    <div className="bg-white rounded-2xl shadow-sm border border-gray-200/60 overflow-hidden">
                      <div className="border-b border-gray-200/60 p-4 bg-gradient-to-r from-gray-50 to-blue-50/30">
                        <div className="flex items-center justify-between">
                          <h3 className="font-semibold text-gray-900">Tre≈õƒá Artyku≈Çu</h3>
                          <div className="flex items-center gap-4 text-sm text-gray-500">
                            <span>{wordCount} s≈Ç√≥w</span>
                            <span>‚Ä¢</span>
                            <span>{calculateReadTime()} min czytania</span>
                          </div>
                        </div>
                      </div>
                      <ReactQuill
                        value={formData.content}
                        onChange={handleContentChange}
                        modules={modules}
                        formats={formats}
                        className="h-[600px] [&_.ql-editor]:text-lg [&_.ql-editor]:leading-relaxed [&_.ql-toolbar]:sticky [&_.ql-toolbar]:top-0 [&_.ql-toolbar]:z-10 [&_.ql-toolbar]:bg-white"
                        placeholder="Zacznij pisaƒá swojƒÖ inspirujƒÖcƒÖ tre≈õƒá..."
                      />
                    </div>
                  </motion.div>
                )}

                {activeTab === 'preview' && (
                  <motion.div
                    key="preview"
                    initial={{ opacity: 0, x: 20 }}
                    animate={{ opacity: 1, x: 0 }}
                    exit={{ opacity: 0, x: -20 }}
                    className="space-y-6"
                  >
                    {/* Preview Controls */}
                    <div className="bg-white rounded-2xl p-6 shadow-sm border border-gray-200/60">
                      <div className="flex items-center justify-between">
                        <h3 className="font-semibold text-gray-900">PodglƒÖd Artyku≈Çu</h3>
                        <div className="flex items-center gap-2">
                          {/* Device Selector */}
                          <div className="flex bg-gray-100 rounded-lg p-1">
                            {[
                              { device: 'mobile', icon: Smartphone },
                              { device: 'tablet', icon: Tablet },
                              { device: 'desktop', icon: Monitor }
                            ].map(({ device, icon: Icon }) => (
                              <button
                                key={device}
                                onClick={() => setPreviewDevice(device as any)}
                                className={`p-2 rounded-md transition-all ${
                                  previewDevice === device
                                    ? 'bg-white text-blue-600 shadow-sm'
                                    : 'text-gray-600 hover:text-gray-900'
                                }`}
                              >
                                <Icon className="h-4 w-4" />
                              </button>
                            ))}
                          </div>

                          {/* Preview Actions */}
                          <div className="flex gap-2 ml-4">
                            <button
                              onClick={simulateReading}
                              disabled={isPlaying}
                              className="flex items-center gap-2 px-3 py-2 bg-green-500 text-white rounded-lg text-sm font-medium hover:bg-green-600 disabled:opacity-50"
                            >
                              <Play className="h-4 w-4" />
                              {isPlaying ? 'Czytanie...' : 'Symuluj czytanie'}
                            </button>
                            <button className="flex items-center gap-2 px-3 py-2 bg-blue-500 text-white rounded-lg text-sm font-medium hover:bg-blue-600">
                              <Share2 className="h-4 w-4" />
                              Udostƒôpnij podglƒÖd
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>

                    {/* Actual Preview */}
                    <div className={`bg-white rounded-2xl shadow-sm border border-gray-200/60 overflow-hidden mx-auto ${getPreviewWidth()} transition-all duration-300`}>
                      {/* Preview Header */}
                      <div className="border-b border-gray-200/60 p-6">
                        {coverPreview && (
                          <img
                            src={coverPreview}
                            alt="Ok≈Çadka artyku≈Çu"
                            className="w-full h-48 object-cover rounded-xl mb-4"
                          />
                        )}
                        <div className="flex items-center gap-2 text-sm text-gray-500 mb-2">
                          <span className="px-2 py-1 bg-blue-100 text-blue-700 rounded-full text-xs">
                            {formData.category}
                          </span>
                          <span>‚Ä¢</span>
                          <span>{calculateReadTime()} min czytania</span>
                          {formData.isFeatured && (
                            <>
                              <span>‚Ä¢</span>
                              <span className="px-2 py-1 bg-yellow-100 text-yellow-700 rounded-full text-xs">
                                Wyr√≥≈ºniony
                              </span>
                            </>
                          )}
                        </div>
                        <h1 className="text-3xl font-bold text-gray-900 mb-4">
                          {formData.title || "Przyk≈Çadowy tytu≈Ç artyku≈Çu"}
                        </h1>
                        <p className="text-lg text-gray-600 leading-relaxed">
                          {formData.excerpt || "To jest przyk≈Çadowy opis artyku≈Çu, kt√≥ry pojawi siƒô w podglƒÖdzie."}
                        </p>
                      </div>

                      {/* Preview Content */}
                      <div className="p-6">
                        <div 
                          className="prose prose-lg max-w-none"
                          dangerouslySetInnerHTML={{ 
                            __html: formData.content || 
                            `<p class="text-gray-500 italic">Tre≈õƒá artyku≈Çu pojawi siƒô tutaj. Zacznij pisaƒá w zak≈Çadce "Edytuj".</p>`
                          }}
                        />
                        
                        {/* Tags Preview */}
                        {selectedTags.length > 0 && (
                          <div className="mt-8 pt-6 border-t border-gray-200">
                            <h4 className="font-semibold text-gray-900 mb-3">Tagi:</h4>
                            <div className="flex flex-wrap gap-2">
                              {selectedTags.map(tag => (
                                <span key={tag} className="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm">
                                  #{tag}
                                </span>
                              ))}
                            </div>
                          </div>
                        )}

                        {/* Author & Date */}
                        <div className="mt-8 pt-6 border-t border-gray-200 text-sm text-gray-500">
                          <p>Artyku≈Ç utworzony przez {user?.displayName || 'Administratora'}</p>
                          <p>Opublikowano {new Date().toLocaleDateString('pl-PL')}</p>
                        </div>
                      </div>
                    </div>

                    {/* Preview Stats */}
                    <div className="bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl p-6 text-white text-center">
                      <h4 className="font-semibold mb-3">Statystyki PodglƒÖdu</h4>
                      <div className="grid grid-cols-3 gap-4">
                        <div>
                          <div className="text-2xl font-bold">{calculateReadTime()}</div>
                          <div className="text-blue-100 text-sm">minut czytania</div>
                        </div>
                        <div>
                          <div className="text-2xl font-bold">{wordCount}</div>
                          <div className="text-blue-100 text-sm">s≈Ç√≥w</div>
                        </div>
                        <div>
                          <div className="text-2xl font-bold">
                            {Math.round((wordCount / 200) * 100)}%
                          </div>
                          <div className="text-blue-100 text-sm">zaanga≈ºowania</div>
                        </div>
                      </div>
                    </div>
                  </motion.div>
                )}
              </AnimatePresence>
            </div>

            {/* Clean Sidebar */}
            <div className="space-y-6">
              
              {/* Cover Image */}
              <div className="bg-white rounded-2xl p-6 shadow-sm border border-gray-200/60">
                <h3 className="font-semibold text-gray-900 flex items-center gap-2 mb-4">
                  <ImageIcon className="h-5 w-5 text-blue-600" />
                  Ok≈Çadka Artyku≈Çu
                </h3>
                
                <AnimatePresence>
                  {coverPreview ? (
                    <motion.div
                      initial={{ opacity: 0, scale: 0.9 }}
                      animate={{ opacity: 1, scale: 1 }}
                      className="relative group"
                    >
                      <img
                        src={coverPreview}
                        alt="PodglƒÖd ok≈Çadki"
                        className="w-full h-48 object-cover rounded-xl shadow-sm"
                      />
                      <div className="absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity rounded-xl flex items-center justify-center">
                        <button
                          onClick={removeCover}
                          className="p-2 bg-red-500 text-white rounded-lg"
                        >
                          <X className="h-4 w-4" />
                        </button>
                      </div>
                    </motion.div>
                  ) : (
                    <motion.div
                      initial={{ opacity: 0 }}
                      animate={{ opacity: 1 }}
                      onClick={() => fileInputRef.current?.click()}
                      className="border-2 border-dashed border-gray-300 rounded-xl p-8 text-center cursor-pointer hover:border-blue-400 transition-colors group bg-gradient-to-br from-gray-50 to-blue-50/30"
                    >
                      <Upload className="h-8 w-8 text-gray-400 mx-auto mb-3 group-hover:text-blue-500 transition-colors" />
                      <p className="text-sm font-medium text-gray-600 mb-1">
                        Dodaj zdjƒôcie ok≈Çadki
                      </p>
                      <p className="text-xs text-gray-500">
                        PNG, JPG ‚Ä¢ Max 5MB
                      </p>
                    </motion.div>
                  )}
                </AnimatePresence>
                <input
                  ref={fileInputRef}
                  type="file"
                  accept="image/*"
                  onChange={handleCoverChange}
                  className="hidden"
                />
              </div>

              {/* Publishing Settings */}
              <div className="bg-white rounded-2xl p-6 shadow-sm border border-gray-200/60 space-y-6">
                <h3 className="font-semibold text-gray-900 flex items-center gap-2">
                  <Settings className="h-5 w-5 text-gray-600" />
                  Ustawienia
                </h3>

                {/* Category */}
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    Kategoria
                  </label>
                  <select
                    value={formData.category}
                    onChange={(e) => setFormData(prev => ({ ...prev, category: e.target.value }))}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 bg-white"
                  >
                    {CATEGORIES.map(cat => (
                      <option key={cat} value={cat}>{cat}</option>
                    ))}
                  </select>
                </div>

                {/* Tags */}
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2 flex items-center gap-2">
                    <Tag className="h-4 w-4 text-purple-600" />
                    Tagi
                  </label>
                  <div className="flex flex-wrap gap-2">
                    {TAGS.map(tag => (
                      <button
                        key={tag}
                        type="button"
                        onClick={() => toggleTag(tag)}
                        className={`px-3 py-1.5 rounded-lg text-sm font-medium transition-all duration-200 ${
                          selectedTags.includes(tag)
                            ? 'bg-gradient-to-r from-purple-500 to-pink-500 text-white shadow-sm'
                            : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                        }`}
                      >
                        {selectedTags.includes(tag) && <Check className="h-3 w-3 inline mr-1" />}
                        {tag}
                      </button>
                    ))}
                  </div>
                </div>

                {/* Status */}
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    Status
                  </label>
                  <div className="grid grid-cols-2 gap-2">
                    {[
                      { value: 'draft', label: 'Szkic', color: 'bg-amber-100 text-amber-700' },
                      { value: 'published', label: 'Opublikuj', color: 'bg-green-100 text-green-700' }
                    ].map((option) => (
                      <button
                        key={option.value}
                        type="button"
                        onClick={() => setFormData(prev => ({ ...prev, status: option.value as any }))}
                        className={`p-3 rounded-xl text-center font-medium transition-all duration-200 ${
                          formData.status === option.value
                            ? `${option.color} ring-2 ring-current ring-opacity-20`
                            : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
                        }`}
                      >
                        {option.label}
                      </button>
                    ))}
                  </div>
                </div>

                {/* Feature Toggle */}
                <div className="flex items-center justify-between p-3 bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl border border-blue-200">
                  <div>
                    <div className="font-semibold text-gray-900 flex items-center gap-2">
                      <Sparkles className="h-4 w-4 text-yellow-500" />
                      Wyr√≥≈ºniony
                    </div>
                    <div className="text-sm text-gray-600">Pokazuj na g≈Ç√≥wnej</div>
                  </div>
                  <label className="relative inline-flex items-center cursor-pointer">
                    <input
                      type="checkbox"
                      checked={formData.isFeatured}
                      onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}
                      className="sr-only peer"
                    />
                    <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                  </label>
                </div>
              </div>

              {/* Content Quality */}
              <div className="bg-gradient-to-br from-blue-600 to-purple-600 rounded-2xl p-6 text-white">
                <h3 className="font-semibold mb-4">Jako≈õƒá Tre≈õci</h3>
                <div className="space-y-4">
                  <div className="flex justify-between items-center">
                    <span className="text-blue-100">Og√≥lna ocena</span>
                    <div className="flex items-center gap-2">
                      <div className="w-16 bg-blue-500 rounded-full h-2">
                        <div 
                          className="h-2 bg-white rounded-full transition-all duration-1000"
                          style={{ width: `${contentScore}%` }}
                        />
                      </div>
                      <span className="font-semibold">{contentScore}%</span>
                    </div>
                  </div>
                  
                  <div className="grid grid-cols-2 gap-4 text-center">
                    <div className="bg-white/20 rounded-lg p-3">
                      <div className="text-2xl font-bold">{wordCount}</div>
                      <div className="text-blue-100 text-xs">S≈ÅOWA</div>
                    </div>
                    <div className="bg-white/20 rounded-lg p-3">
                      <div className="text-2xl font-bold">{calculateReadTime()}</div>
                      <div className="text-blue-100 text-xs">MINUTY</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </form>
      </div>
    </div>
  )
}// src/app/admin/articles/page.tsx - ZOPTYMALIZOWANA WERSJA
'use client'

import { useState, useEffect } from 'react'
import { useAuth } from '@/components/providers/auth-provider'
import { useArticles } from '@/hooks/useArticles'
import { useRouter } from 'next/navigation'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card'
import { BookOpen, Eye, FileText, Shield, Search, Plus, Edit, Trash2, Users, TrendingUp, Filter } from 'lucide-react'
import Link from 'next/link'
import Header from '@/components/layout/header'

export default function AdminArticlesPage() {
  const { user, loading: authLoading } = useAuth()
  const router = useRouter()
  const [searchTerm, setSearchTerm] = useState('')
  const [statusFilter, setStatusFilter] = useState('all')
  const [isMobile, setIsMobile] = useState(false)

  useEffect(() => {
    const checkMobile = () => setIsMobile(window.innerWidth <= 768)
    checkMobile()
    window.addEventListener('resize', checkMobile)
    return () => window.removeEventListener('resize', checkMobile)
  }, [])

  const { articles, loading: articlesLoading, deleteArticle } = useArticles(
    'admin',
    user?.uid
  )

  useEffect(() => {
    if (!authLoading && (!user || user.role !== 'admin')) {
      router.push('/articles')
    }
  }, [user, authLoading, router])

  const filteredArticles = articles.filter(article => {
    const matchesSearch = article.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         article.category.toLowerCase().includes(searchTerm.toLowerCase())
    const matchesStatus = statusFilter === 'all' || article.status === statusFilter
    return matchesSearch && matchesStatus
  })

  const stats = {
    total: articles.length,
    published: articles.filter(a => a.status === 'published').length,
    drafts: articles.filter(a => a.status === 'draft').length,
    featured: articles.filter(a => a.isFeatured).length
  }

  if (authLoading || articlesLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50/30 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <p className="text-gray-600">≈Åadowanie panelu administratora...</p>
        </div>
      </div>
    )
  }

  if (!user || user.role !== 'admin') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50/30 flex items-center justify-center">
        <div className="bg-white p-8 rounded-xl shadow-lg text-center max-w-md mx-4">
          <Shield className="h-16 w-16 text-red-500 mx-auto mb-4" />
          <h2 className="text-xl font-bold text-gray-900 mb-2">Brak dostƒôpu</h2>
          <p className="text-gray-600 mb-4">Nie masz uprawnie≈Ñ administratora.</p>
          <Button onClick={() => router.push('/articles')}>Wr√≥ƒá do artyku≈Ç√≥w</Button>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50/30">
      <Header />
      
      <div className="py-6 lg:py-8">
        <div className="container mx-auto px-4 sm:px-6 max-w-7xl">
          
          {/* Header - ZOPTYMALIZOWANY */}
          <div className="flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4 lg:gap-6 mb-6 lg:mb-8">
            <div className="flex-1 min-w-0">
              <h1 className="text-2xl lg:text-3xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent">
                Panel Administratora
              </h1>
              <p className="text-gray-600 mt-1 lg:mt-2 text-sm lg:text-base">
                ZarzƒÖdzaj artyku≈Çami i tre≈õciami
              </p>
            </div>
            <Link href="/admin/articles/new" className="w-full lg:w-auto">
              <Button className="w-full lg:w-auto bg-green-600 hover:bg-green-700 text-white rounded-xl px-4 lg:px-6 py-3 flex items-center justify-center gap-2 text-sm lg:text-base">
                <Plus className="h-4 w-4 lg:h-5 lg:w-5" />
                <span className="whitespace-nowrap">Nowy Artyku≈Ç</span>
              </Button>
            </Link>
          </div>

          {/* Statystyki - ZOPTYMALIZOWANE */}
          <div className="grid grid-cols-2 lg:grid-cols-4 gap-3 lg:gap-4 mb-6 lg:mb-8">
            <StatCard 
              title="Wszystkie" 
              value={stats.total} 
              icon={<BookOpen className="h-4 w-4 lg:h-6 lg:w-6" />} 
              color="from-blue-500 to-cyan-500" 
              isMobile={isMobile}
            />
            <StatCard 
              title="Opublikowane" 
              value={stats.published} 
              icon={<Eye className="h-4 w-4 lg:h-6 lg:w-6" />} 
              color="from-green-500 to-emerald-500" 
              isMobile={isMobile}
            />
            <StatCard 
              title="Szkice" 
              value={stats.drafts} 
              icon={<FileText className="h-4 w-4 lg:h-6 lg:w-6" />} 
              color="from-amber-500 to-orange-500" 
              isMobile={isMobile}
            />
            <StatCard 
              title="Wyr√≥≈ºnione" 
              value={stats.featured} 
              icon={<TrendingUp className="h-4 w-4 lg:h-6 lg:w-6" />} 
              color="from-purple-500 to-pink-500" 
              isMobile={isMobile}
            />
          </div>

          {/* Filtry i wyszukiwanie - ZOPTYMALIZOWANE */}
          <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-lg mb-6">
            <CardContent className="p-4 lg:p-6">
              <div className="flex flex-col gap-4">
                {/* Wyszukiwanie */}
                <div className="relative">
                  <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4" />
                  <input
                    type="text"
                    placeholder="Szukaj artyku≈Ç√≥w..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                    className="pl-10 w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm lg:text-base"
                  />
                </div>
                
                {/* Filtry - ZOPTYMALIZOWANE DLA MOBILE */}
                <div className="flex flex-col sm:flex-row gap-2">
                  <div className="flex items-center gap-2 text-sm text-gray-600 font-medium">
                    <Filter className="h-4 w-4" />
                    <span>Status:</span>
                  </div>
                  <div className="flex flex-wrap gap-2">
                    {['all', 'published', 'draft'].map(status => (
                      <button
                        key={status}
                        onClick={() => setStatusFilter(status)}
                        className={`px-3 lg:px-4 py-2 rounded-lg text-xs lg:text-sm font-medium transition-colors flex-1 sm:flex-none min-w-[80px] ${
                          statusFilter === status
                            ? 'bg-blue-600 text-white shadow-md'
                            : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                        }`}
                      >
                        {status === 'all' ? 'Wszystkie' : 
                         status === 'published' ? 'Opublikowane' : 'Szkice'}
                      </button>
                    ))}
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Lista artyku≈Ç√≥w - ZOPTYMALIZOWANA */}
          <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-lg">
            <CardHeader className="pb-4">
              <CardTitle className="text-lg lg:text-xl font-bold text-gray-900">
                Artyku≈Çy ({filteredArticles.length})
              </CardTitle>
              <CardDescription className="text-sm lg:text-base">
                ZarzƒÖdzaj wszystkimi artyku≈Çami w systemie
              </CardDescription>
            </CardHeader>
            <CardContent>
              {filteredArticles.length === 0 ? (
                <div className="text-center py-8 lg:py-12">
                  <FileText className="h-12 w-12 lg:h-16 lg:w-16 text-gray-400 mx-auto mb-4" />
                  <h3 className="text-base lg:text-lg font-semibold text-gray-900 mb-2">
                    {searchTerm ? 'Brak pasujƒÖcych artyku≈Ç√≥w' : 'Brak artyku≈Ç√≥w'}
                  </h3>
                  <p className="text-gray-600 mb-6 text-sm lg:text-base">
                    {searchTerm ? 'Spr√≥buj zmieniƒá kryteria wyszukiwania' : 'Utw√≥rz pierwszy artyku≈Ç'}
                  </p>
                  {!searchTerm && (
                    <Link href="/admin/articles/new">
                      <Button className="bg-green-600 hover:bg-green-700 text-sm lg:text-base">
                        <Plus className="h-4 w-4 mr-2" />
                        Utw√≥rz artyku≈Ç
                      </Button>
                    </Link>
                  )}
                </div>
              ) : (
                <div className="space-y-3 lg:space-y-4">
                  {filteredArticles.map((article) => (
                    <ArticleRow
                      key={article.id}
                      article={article}
                      onDelete={async () => {
                        if (confirm(`Czy na pewno chcesz usunƒÖƒá artyku≈Ç "${article.title}"?`)) {
                          try {
                            await deleteArticle(article.id)
                          } catch (error) {
                            alert('B≈ÇƒÖd podczas usuwania artyku≈Çu')
                          }
                        }
                      }}
                      isMobile={isMobile}
                    />
                  ))}
                </div>
              )}
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  )
}

// ZOPTYMALIZOWANE KOMPONENTY POMOCNICZE
function StatCard({ title, value, icon, color, isMobile }: { 
  title: string; 
  value: number; 
  icon: React.ReactNode; 
  color: string; 
  isMobile: boolean;
}) {
  return (
    <Card className={`bg-gradient-to-r ${color} text-white border-0 shadow-lg`}>
      <CardContent className="p-4 lg:p-6">
        <div className="flex items-center justify-between">
          <div>
            <p className="text-white/90 text-xs lg:text-sm font-medium mb-1">{title}</p>
            <p className="text-xl lg:text-2xl font-bold">{value}</p>
          </div>
          <div className="text-white/90">
            {icon}
          </div>
        </div>
      </CardContent>
    </Card>
  )
}

function ArticleRow({ article, onDelete, isMobile }: { 
  article: any; 
  onDelete: () => void; 
  isMobile: boolean;
}) {
  return (
    <div className="flex flex-col lg:flex-row lg:items-center justify-between p-4 bg-gray-50 rounded-xl border border-gray-200 hover:bg-white transition-colors gap-3 lg:gap-4">
      <div className="flex-1 min-w-0">
        <div className="flex flex-col lg:flex-row lg:items-center gap-2 lg:gap-3 mb-2 lg:mb-2">
          <h3 className="font-semibold text-gray-900 text-sm lg:text-base truncate">
            {article.title}
          </h3>
          <div className="flex flex-wrap gap-2">
            <span className={`text-xs px-2 py-1 rounded-full ${
              article.status === 'published' 
                ? 'bg-green-100 text-green-700' 
                : 'bg-amber-100 text-amber-700'
            }`}>
              {article.status === 'published' ? 'Opublikowany' : 'Szkic'}
            </span>
            {article.isFeatured && (
              <span className="text-xs px-2 py-1 rounded-full bg-purple-100 text-purple-700">
                Wyr√≥≈ºniony
              </span>
            )}
          </div>
        </div>
        <div className="text-xs lg:text-sm text-gray-600 flex flex-col lg:flex-row lg:flex-wrap gap-2 lg:gap-4">
          <span>Kategoria: {article.category}</span>
          <span>Wy≈õwietlenia: {article.views || 0}</span>
          <span>Czas: {article.readTime} min</span>
          {!isMobile && (
            <span>
              Utworzono: {article.createdAt?.toDate().toLocaleDateString('pl-PL')}
            </span>
          )}
        </div>
        {isMobile && (
          <div className="text-xs text-gray-500 mt-2">
            Utworzono: {article.createdAt?.toDate().toLocaleDateString('pl-PL')}
          </div>
        )}
      </div>
      
      <div className="flex items-center gap-2 lg:ml-4 self-end lg:self-auto">
        <Link href={`/admin/articles/edit/${article.id}`}>
          <Button variant="outline" size="sm" className="flex items-center gap-1 lg:gap-2 text-xs lg:text-sm">
            <Edit className="h-3 w-3 lg:h-4 lg:w-4" />
            {isMobile ? 'Edytuj' : 'Edytuj'}
          </Button>
        </Link>
        <Button
          variant="outline"
          size="sm"
          onClick={onDelete}
          className="text-red-600 border-red-200 hover:bg-red-50 flex items-center gap-1 lg:gap-2 text-xs lg:text-sm"
        >
          <Trash2 className="h-3 w-3 lg:h-4 lg:w-4" />
          {isMobile ? 'Usu≈Ñ' : 'Usu≈Ñ'}
        </Button>
      </div>
    </div>
  )
}'use client'

import { useState } from 'react'

export const SimpleAITest = ({ onBack }: { onBack: () => void }) => {
  const [loading, setLoading] = useState(false)

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/40">
      <div className="bg-white rounded-2xl p-6 max-w-md w-full">
        <h2 className="text-xl font-bold mb-4">Simple AI Test</h2>
        <p className="text-gray-600 mb-4">To jest prosty komponent testowy</p>
        <button 
          onClick={onBack}
          className="w-full bg-blue-500 text-white py-2 rounded-lg"
        >
          Zamknij
        </button>
      </div>
    </div>
  )
}// src/app/dashboard/profile/page.tsx
'use client'

import { useState, useEffect, useRef } from 'react'
import { auth, db } from '@/lib/firebase'
import { onAuthStateChanged } from 'firebase/auth'
import { doc, onSnapshot, updateDoc } from 'firebase/firestore'
import userService from '@/lib/user-service'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card'
import { Input } from '@/components/ui/input'
import { 
  User, 
  Edit, 
  Mail, 
  Calendar, 
  Shield, 
  Bell, 
  Users,
  UserPlus,
  TrendingUp,
  Award,
  Target,
  Sparkles,
  BarChart3,
  Camera,
  Copy,
  Check,
  FileText
} from 'lucide-react'
import { cn } from '@/lib/utils'
import Link from 'next/link'
import { UserProfile } from '@/types/user'

export default function ProfilePage() {
  const [user, setUser] = useState<any>(null)
  const [userProfile, setUserProfile] = useState<UserProfile | null>(null)
  const [loading, setLoading] = useState(true)
  const [isEditing, setIsEditing] = useState(false)
  const [editForm, setEditForm] = useState({
    displayName: '',
    bio: ''
  })
  const [friends, setFriends] = useState<UserProfile[]>([])
  const [stats, setStats] = useState({
    streak: 0,
    moodEntries: 0,
    consistency: 0,
    friends: 0
  })
  const [uploading, setUploading] = useState(false)
  const [copied, setCopied] = useState(false)
  const fileInputRef = useRef<HTMLInputElement>(null)

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, async (usr) => {
      setUser(usr)
      if (usr) {
        // Subskrybuj zmiany profilu
        const userRef = doc(db, 'users', usr.uid)
        const unsub = onSnapshot(userRef, async (docSnap) => {
          if (docSnap.exists()) {
            const data = { uid: docSnap.id, ...docSnap.data() } as UserProfile
            setUserProfile(data)
            setEditForm({
              displayName: data.displayName || '',
              bio: data.bio || ''
            })
            
            // Pobierz prawdziwe statystyki
            const userStats = await userService.getUserStats(usr.uid)
            setStats(userStats)
            
            // Pobierz znajomych
            const userFriends = await userService.getFriends(usr.uid)
            setFriends(userFriends)
            setStats(prev => ({ ...prev, friends: userFriends.length }))
          }
          setLoading(false)
        })
        return () => unsub()
      } else {
        setUserProfile(null)
        setFriends([])
        setStats({
          streak: 0,
          moodEntries: 0,
          consistency: 0,
          friends: 0
        })
        setLoading(false)
      }
    })

    return () => unsubscribe()
  }, [])

  const handleSaveProfile = async () => {
    if (!user) return
    
    try {
      await userService.updateUserProfile(user.uid, {
        displayName: editForm.displayName,
        bio: editForm.bio
      })
      setIsEditing(false)
    } catch (error) {
      console.error('B≈ÇƒÖd aktualizacji profilu:', error)
    }
  }

  const handleCancelEdit = () => {
    setEditForm({
      displayName: userProfile?.displayName || '',
      bio: userProfile?.bio || ''
    })
    setIsEditing(false)
  }

  const handleAvatarUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0]
    if (!file || !user) return

    if (!file.type.startsWith('image/')) {
      alert('Proszƒô wybraƒá plik obrazu')
      return
    }

    if (file.size > 5 * 1024 * 1024) {
      alert('Plik jest zbyt du≈ºy. Maksymalny rozmiar to 5MB.')
      return
    }

    setUploading(true)
    try {
      await userService.uploadAvatar(user.uid, file)
    } catch (error) {
      console.error('B≈ÇƒÖd uploadu avatara:', error)
      alert('WystƒÖpi≈Ç b≈ÇƒÖd podczas uploadu zdjƒôcia')
    } finally {
      setUploading(false)
      if (fileInputRef.current) {
        fileInputRef.current.value = ''
      }
    }
  }

  const copyDisplayName = async () => {
    if (userProfile?.displayName) {
      await navigator.clipboard.writeText(userProfile.displayName)
      setCopied(true)
      setTimeout(() => setCopied(false), 2000)
    }
  }

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-100 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <p className="text-gray-600">≈Åadowanie profilu...</p>
        </div>
      </div>
    )
  }

  if (!user) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-100 flex items-center justify-center">
        <div className="text-center">
          <User className="h-16 w-16 text-gray-400 mx-auto mb-4" />
          <h2 className="text-xl font-semibold text-gray-900 mb-2">Nie jeste≈õ zalogowany</h2>
          <p className="text-gray-600 mb-4">Zaloguj siƒô, aby zobaczyƒá sw√≥j profil</p>
          <Link href="/auth/login">
            <Button>Zaloguj siƒô</Button>
          </Link>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-100 py-8">
      <div className="container mx-auto max-w-6xl px-4">
        
        {/* Header strony */}
        <div className="text-center mb-8">
          <div className="inline-flex items-center gap-3 px-6 py-3 rounded-2xl bg-white/80 backdrop-blur-sm border border-white/20 shadow-lg mb-6">
            <div className="p-2 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl">
              <User className="h-6 w-6 text-white" />
            </div>
            <div className="text-left">
              <h1 className="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                Tw√≥j Profil
              </h1>
              <p className="text-gray-600 text-sm">
                ZarzƒÖdzaj swoimi danymi i ustawieniami
              </p>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          
          {/* Lewa kolumna - Profil i statystyki */}
          <div className="lg:col-span-2 space-y-6">
            
            {/* Karta profilu */}
            <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm border border-white/20">
              <CardHeader className="pb-4">
                <div className="flex items-center justify-between">
                  <CardTitle className="flex items-center gap-2 text-xl">
                    <User className="h-5 w-5 text-blue-600" />
                    Informacje podstawowe
                  </CardTitle>
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => setIsEditing(!isEditing)}
                    className="border-blue-200 text-blue-600 hover:bg-blue-50"
                  >
                    <Edit className="h-4 w-4 mr-2" />
                    {isEditing ? 'Anuluj' : 'Edytuj'}
                  </Button>
                </div>
                <CardDescription>
                  ZarzƒÖdzaj podstawowymi danymi konta
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                
                {/* Avatar i g≈Ç√≥wne info */}
                <div className="flex flex-col md:flex-row items-center gap-6">
                  <div className="relative group">
                    <div className="w-24 h-24 rounded-2xl overflow-hidden bg-gradient-to-br from-blue-500 to-purple-600 shadow-lg">
                      {userProfile?.avatarUrl ? (
                        <img 
                          src={userProfile.avatarUrl} 
                          alt="Tw√≥j avatar" 
                          className="w-full h-full object-cover"
                        />
                      ) : (
                        <div className="w-full h-full flex items-center justify-center bg-gradient-to-br from-blue-500 to-purple-600">
                          <User className="h-8 w-8 text-white" />
                        </div>
                      )}
                    </div>
                    
                    {/* Przycisk zmiany zdjƒôcia */}
                    <button
                      onClick={() => fileInputRef.current?.click()}
                      className="absolute inset-0 bg-black/50 rounded-2xl flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                    >
                      <Camera className="h-6 w-6 text-white" />
                    </button>
                    
                    <input
                      ref={fileInputRef}
                      type="file"
                      accept="image/*"
                      onChange={handleAvatarUpload}
                      className="hidden"
                    />
                    
                    <div className="absolute -bottom-2 -right-2 w-8 h-8 bg-green-500 rounded-full border-4 border-white flex items-center justify-center">
                      <div className="w-2 h-2 bg-white rounded-full"></div>
                    </div>
                  </div>

                  <div className="flex-1 text-center md:text-left">
                    {isEditing ? (
                      <div className="space-y-3">
                        <Input
                          value={editForm.displayName}
                          onChange={(e) => setEditForm(prev => ({...prev, displayName: e.target.value}))}
                          placeholder="Twoja nazwa u≈ºytkownika"
                          className="text-xl font-bold text-center md:text-left"
                        />
                        <Input
                          value={editForm.bio}
                          onChange={(e) => setEditForm(prev => ({...prev, bio: e.target.value}))}
                          placeholder="Kr√≥tki opis o sobie..."
                          className="text-gray-600"
                        />
                      </div>
                    ) : (
                      <>
                        <h2 className="text-2xl font-bold text-gray-900">
                          {userProfile?.displayName || user.email}
                        </h2>
                        <p className="text-gray-600 mt-1">
                          {userProfile?.bio || 'Dodaj kr√≥tki opis o sobie...'}
                        </p>
                        
                        {/* Nazwa u≈ºytkownika do kopiowania */}
                        <div className="flex items-center gap-2 mt-3">
                          <div className="bg-blue-100 text-blue-700 px-3 py-1 rounded-lg text-sm font-medium">
                            Nazwa: {userProfile?.displayName || 'Brak nazwy'}
                          </div>
                          <Button
                            variant="ghost"
                            size="sm"
                            onClick={copyDisplayName}
                            className="h-8 w-8 p-0"
                          >
                            {copied ? (
                              <Check className="h-4 w-4 text-green-600" />
                            ) : (
                              <Copy className="h-4 w-4 text-gray-600" />
                            )}
                          </Button>
                        </div>
                        
                        <p className="text-sm text-gray-500 mt-2">
                          Do≈ÇƒÖczy≈Ç: {userProfile?.createdAt ? new Date(userProfile.createdAt).toLocaleDateString('pl-PL', {
                            year: 'numeric',
                            month: 'long',
                            day: 'numeric'
                          }) : 'Niedawno'}
                        </p>
                      </>
                    )}
                  </div>
                </div>

                {/* Akcje edycji */}
                {isEditing && (
                  <div className="flex gap-3 pt-4 border-t border-gray-100">
                    <Button
                      onClick={handleSaveProfile}
                      className="flex-1 bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600"
                    >
                      Zapisz zmiany
                    </Button>
                    <Button
                      variant="outline"
                      onClick={handleCancelEdit}
                      className="flex-1 border-gray-300"
                    >
                      Anuluj
                    </Button>
                  </div>
                )}

                {/* Upload progress */}
                {uploading && (
                  <div className="pt-4 border-t border-gray-100">
                    <div className="flex items-center gap-3 text-sm text-blue-600">
                      <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600"></div>
                      Uploadowanie zdjƒôcia...
                    </div>
                  </div>
                )}

                {/* Informacje konta */}
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4 pt-4 border-t border-gray-100">
                  <div className="space-y-2">
                    <label className="text-sm font-medium text-gray-700 flex items-center gap-2">
                      <Mail className="h-4 w-4 text-blue-500" />
                      Email
                    </label>
                    <div className="p-3 bg-gray-50 rounded-xl border border-gray-200">
                      <p className="font-medium text-gray-900">{user.email}</p>
                    </div>
                  </div>

                  <div className="space-y-2">
                    <label className="text-sm font-medium text-gray-700 flex items-center gap-2">
                      <Calendar className="h-4 w-4 text-blue-500" />
                      Data rejestracji
                    </label>
                    <div className="p-3 bg-gray-50 rounded-xl border border-gray-200">
                      <p className="font-medium text-gray-900">
                        {userProfile?.createdAt
                          ? new Date(userProfile.createdAt).toLocaleDateString('pl-PL', {
                              year: 'numeric',
                              month: 'long',
                              day: 'numeric'
                            })
                          : 'Niedawno'}
                      </p>
                    </div>
                  </div>
                </div>

                {/* üîí BADGE ADMINISTRATORSKI */}
                {userProfile?.role === 'admin' && (
                  <div className="pt-4 border-t border-gray-100">
                    <div className="flex items-center gap-3 p-4 bg-gradient-to-r from-purple-500 to-indigo-600 rounded-xl text-white">
                      <Shield className="h-6 w-6 text-white" />
                      <div>
                        <h3 className="font-bold text-lg">Konto administratorskie</h3>
                        <p className="text-purple-100 text-sm">
                          Masz pe≈Çny dostƒôp do panelu administracyjnego i zarzƒÖdzania tre≈õciƒÖ.
                        </p>
                      </div>
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>

            {/* Statystyki i osiƒÖgniƒôcia */}
            <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm border border-white/20">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <TrendingUp className="h-5 w-5 text-green-600" />
                  Twoje OsiƒÖgniƒôcia
                </CardTitle>
                <CardDescription>
                  ≈öled≈∫ swoje postƒôpy w aplikacji
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                  <div className="text-center p-4 bg-gradient-to-br from-blue-50 to-blue-100 rounded-2xl border border-blue-200">
                    <div className="w-12 h-12 bg-blue-500 rounded-2xl flex items-center justify-center mx-auto mb-3">
                      <Target className="h-6 w-6 text-white" />
                    </div>
                    <div className="text-2xl font-bold text-blue-600">{stats.streak}</div>
                    <div className="text-sm text-blue-700">Dni streak</div>
                  </div>

                  <div className="text-center p-4 bg-gradient-to-br from-green-50 to-green-100 rounded-2xl border border-green-200">
                    <div className="w-12 h-12 bg-green-500 rounded-2xl flex items-center justify-center mx-auto mb-3">
                      <Award className="h-6 w-6 text-white" />
                    </div>
                    <div className="text-2xl font-bold text-green-600">{stats.moodEntries}</div>
                    <div className="text-sm text-green-700">Wpisy nastroju</div>
                  </div>

                  <div className="text-center p-4 bg-gradient-to-br from-purple-50 to-purple-100 rounded-2xl border border-purple-200">
                    <div className="w-12 h-12 bg-purple-500 rounded-2xl flex items-center justify-center mx-auto mb-3">
                      <Sparkles className="h-6 w-6 text-white" />
                    </div>
                    <div className="text-2xl font-bold text-purple-600">{stats.consistency}%</div>
                    <div className="text-sm text-purple-700">Konsystencja</div>
                  </div>

                  <div className="text-center p-4 bg-gradient-to-br from-orange-50 to-orange-100 rounded-2xl border border-orange-200">
                    <div className="w-12 h-12 bg-orange-500 rounded-2xl flex items-center justify-center mx-auto mb-3">
                      <Users className="h-6 w-6 text-white" />
                    </div>
                    <div className="text-2xl font-bold text-orange-600">{stats.friends}</div>
                    <div className="text-sm text-orange-700">Znajomych</div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Sekcja Znajomi - PodglƒÖd */}
            <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm border border-white/20">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Users className="h-5 w-5 text-orange-600" />
                  Twoi Znajomi
                </CardTitle>
                <CardDescription>
                  Twoja sieƒá wsparcia - {friends.length} znajomych
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="flex items-center justify-between p-4 bg-gradient-to-r from-orange-50 to-yellow-50 rounded-xl border border-orange-200">
                    <div>
                      <h4 className="font-semibold text-gray-900">Wsparcie spo≈Çeczno≈õci</h4>
                      <p className="text-gray-600 text-sm">
                        Razem ≈Çatwiej dbaƒá o dobre samopoczucie
                      </p>
                    </div>
                    <Link href="/dashboard/friends">
                      <Button className="bg-gradient-to-r from-orange-500 to-yellow-500 hover:from-orange-600 hover:to-yellow-600">
                        <Users className="h-4 w-4 mr-2" />
                        ZarzƒÖdzaj
                      </Button>
                    </Link>
                  </div>
                  
                  {/* Mini lista znajomych */}
                  {friends.length > 0 ? (
                    <div className="grid grid-cols-2 sm:grid-cols-4 gap-4">
                      {friends.slice(0, 4).map(friend => (
                        <div key={friend.uid} className="flex flex-col items-center text-center p-4 border border-gray-100 rounded-xl bg-white/50 hover:bg-white transition-colors group">
                          <div className="w-12 h-12 bg-gradient-to-br from-orange-500 to-yellow-600 rounded-2xl flex items-center justify-center text-white font-bold text-lg mb-3 shadow-lg group-hover:shadow-xl transition-shadow">
                            {friend.avatarUrl ? (
                              <img 
                                src={friend.avatarUrl} 
                                alt={friend.displayName}
                                className="w-full h-full object-cover rounded-2xl"
                              />
                            ) : (
                              friend.displayName?.charAt(0).toUpperCase() || 'U'
                            )}
                          </div>
                          <div className="font-semibold text-gray-900 text-sm truncate w-full">
                            {friend.displayName}
                          </div>
                          <div className="text-xs text-gray-500">
                            {friend.email}
                          </div>
                          <div className="text-xs text-gray-500 flex items-center gap-1 mt-1">
                            <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                            üî• {friend.streak || 0} dni
                          </div>
                        </div>
                      ))}
                      {friends.length > 4 && (
                        <Link href="/dashboard/friends" className="flex flex-col items-center justify-center p-4 border border-gray-100 rounded-xl bg-gray-50 hover:bg-gray-100 transition-colors">
                          <div className="w-12 h-12 bg-gray-200 rounded-2xl flex items-center justify-center text-gray-600 font-semibold text-sm mb-3">
                            +{friends.length - 4}
                          </div>
                          <div className="font-medium text-gray-900 text-sm">
                            Zobacz wiƒôcej
                          </div>
                        </Link>
                      )}
                    </div>
                  ) : (
                    <div className="text-center py-8">
                      <Users className="h-16 w-16 text-gray-300 mx-auto mb-4" />
                      <p className="text-gray-600 font-medium">Brak znajomych</p>
                      <p className="text-gray-500 text-sm mt-1 mb-4">
                        Dodaj znajomych, aby wsp√≥lnie dbaƒá o samopoczucie
                      </p>
                      <Link href="/dashboard/friends">
                        <Button size="sm" className="bg-gradient-to-r from-orange-500 to-yellow-500 hover:from-orange-600 hover:to-yellow-600">
                          <UserPlus className="h-4 w-4 mr-2" />
                          Dodaj znajomych
                        </Button>
                      </Link>
                    </div>
                  )}
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Prawa kolumna - Ustawienia i informacje */}
          <div className="space-y-6">
            
            {/* Bezpiecze≈Ñstwo konta */}
            <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm border border-white/20">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Shield className="h-5 w-5 text-green-600" />
                  Bezpiecze≈Ñstwo konta
                </CardTitle>
                <CardDescription>
                  ZarzƒÖdzaj ustawieniami bezpiecze≈Ñstwa
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex items-center justify-between p-4 bg-gray-50 rounded-xl border border-gray-200">
                  <div>
                    <h4 className="font-medium text-gray-900">Has≈Ço</h4>
                    <p className="text-gray-500 text-sm">Ostatnia zmiana: nigdy</p>
                  </div>
                  <Button variant="outline" size="sm" className="border-gray-300">
                    Zmie≈Ñ has≈Ço
                  </Button>
                </div>
                
                <div className="flex items-center justify-between p-4 bg-gray-50 rounded-xl border border-gray-200">
                  <div>
                    <h4 className="font-medium text-gray-900">Uwierzytelnianie dwuetapowe</h4>
                    <p className="text-gray-500 text-sm">Zabezpiecz swoje konto</p>
                  </div>
                  <Button variant="outline" size="sm" className="border-gray-300">
                    W≈ÇƒÖcz
                  </Button>
                </div>

                <div className="flex items-center justify-between p-4 bg-gray-50 rounded-xl border border-gray-200">
                  <div>
                    <h4 className="font-medium text-gray-900">Powiadomienia</h4>
                    <p className="text-gray-500 text-sm">Ustaw preferencje</p>
                  </div>
                  <Button variant="outline" size="sm" className="border-gray-300">
                    <Bell className="h-4 w-4 mr-2" />
                    Ustawienia
                  </Button>
                </div>
              </CardContent>
            </Card>

            {/* Informacje o nazwie u≈ºytkownika */}
            <Card className="border-0 shadow-xl bg-gradient-to-br from-blue-500 to-purple-600 text-white">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <User className="h-5 w-5 text-white" />
                  Twoja Nazwa U≈ºytkownika
                </CardTitle>
                <CardDescription className="text-blue-100">
                  Udostƒôpnij swojƒÖ nazwƒô, aby znajomi mogli Ciƒô znale≈∫ƒá
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="bg-white/10 rounded-xl p-4 text-center">
                    <div className="text-2xl font-bold font-mono tracking-wider">
                      {userProfile?.displayName || 'Brak nazwy'}
                    </div>
                    <p className="text-blue-100 text-sm mt-2">
                      To jest Twoja publiczna nazwa
                    </p>
                  </div>
                  
                  <Button 
                    onClick={copyDisplayName}
                    className="w-full bg-white text-blue-600 hover:bg-blue-50"
                  >
                    {copied ? (
                      <>
                        <Check className="h-4 w-4 mr-2" />
                        Skopiowano!
                      </>
                    ) : (
                      <>
                        <Copy className="h-4 w-4 mr-2" />
                        Kopiuj nazwƒô
                      </>
                    )}
                  </Button>
                  
                  <div className="text-sm text-blue-100 space-y-2">
                    <p className="font-semibold">Jak to dzia≈Ça?</p>
                    <ul className="space-y-1">
                      <li>‚Ä¢ Podaj swojƒÖ nazwƒô znajomym</li>
                      <li>‚Ä¢ Oni wpiszƒÖ jƒÖ w zak≈Çadce "Znajomi"</li>
                      <li>‚Ä¢ Po akceptacji staniecie siƒô znajomymi</li>
                      <li>‚Ä¢ Bƒôdziecie widzieƒá swoje podstawowe statystyki</li>
                    </ul>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Szybkie akcje */}
            <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm border border-white/20">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Sparkles className="h-5 w-5 text-purple-600" />
                  Szybkie Akcje
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <Link href="/mood" className="block">
                  <Button variant="outline" className="w-full justify-start gap-3 py-3 border-gray-200 hover:border-purple-300 hover:bg-purple-50">
                    <BarChart3 className="h-4 w-4 text-purple-600" />
                    Dodaj dzisiejszy nastr√≥j
                  </Button>
                </Link>
                
                <Link href="/ai" className="block">
                  <Button variant="outline" className="w-full justify-start gap-3 py-3 border-gray-200 hover:border-blue-300 hover:bg-blue-50">
                    <Sparkles className="h-4 w-4 text-blue-600" />
                    Porozmawiaj z AI
                  </Button>
                </Link>
                
                <Link href="/dashboard/friends" className="block">
                  <Button variant="outline" className="w-full justify-start gap-3 py-3 border-gray-200 hover:border-orange-300 hover:bg-orange-50">
                    <UserPlus className="h-4 w-4 text-orange-600" />
                    Dodaj znajomego
                  </Button>
                </Link>

                {/* üîó Link do panelu admina ‚Äì tylko dla admin√≥w */}
                {userProfile?.role === 'admin' && (
                  <Link href="/admin/articles" className="block">
                    <Button variant="outline" className="w-full justify-start gap-3 py-3 border-gray-200 hover:border-red-300 hover:bg-red-50">
                      <FileText className="h-4 w-4 text-red-600" />
                      Panel administratora
                    </Button>
                  </Link>
                )}
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  )
}// src/app/(dashboard)/layout.tsx
import ProtectedRoute from '@/components/protected-route'
import MainLayout from '@/components/layout/main-layout'

export default function DashboardLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <ProtectedRoute>
      <MainLayout>
        {children}
      </MainLayout>
    </ProtectedRoute>
  )
}// src/app/dashboard/friends/debug-page.tsx - tymczasowy komponent do debugowania
'use client'

import { useState, useEffect } from 'react'
import { auth } from '@/lib/firebase'
import { onAuthStateChanged, User } from 'firebase/auth'
import { userService } from '@/lib/user-service'
import { doc, getDoc } from 'firebase/firestore'
import { db } from '@/lib/firebase'

export default function DebugPage() {
  const [user, setUser] = useState<User | null>(null)
  const [userData, setUserData] = useState<any>(null)
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, async (usr) => {
      setUser(usr)
      if (usr) {
        // Pobierz bezpo≈õrednio z Firestore
        const userDoc = await getDoc(doc(db, 'users', usr.uid))
        if (userDoc.exists()) {
          setUserData(userDoc.data())
        }
        setLoading(false)
      } else {
        setLoading(false)
      }
    })

    return () => unsubscribe()
  }, [])

  if (loading) return <div>≈Åadowanie debug...</div>
  if (!user) return <div>Nie zalogowany</div>

  return (
    <div className="p-8">
      <h1 className="text-2xl font-bold mb-4">Debug - Dane u≈ºytkownika</h1>
      <div className="bg-gray-100 p-4 rounded">
        <pre>{JSON.stringify(userData, null, 2)}</pre>
      </div>
      <div className="mt-4">
        <h2 className="text-xl font-bold">UID: {user.uid}</h2>
        <h2 className="text-xl font-bold">Email: {user.email}</h2>
        <h2 className="text-xl font-bold">Kod u≈ºytkownika: {userData?.userCode || 'BRAK KODU'}</h2>
      </div>
    </div>
  )
}'use client'

import { useState, useEffect, useCallback } from 'react'
import { auth } from '@/lib/firebase'
import { onAuthStateChanged, User } from 'firebase/auth'
import userService from '@/lib/user-service'
import { UserProfile, FriendRequest } from '@/types/user'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card'
import { Input } from '@/components/ui/input'
import { 
  Users, 
  UserPlus, 
  Mail, 
  Check, 
  X, 
  UserX, 
  Search,
  Copy,
  AlertCircle,
  Loader2,
  Sparkles,
  Share2,
  Trophy,
  Calendar,
  MessageCircle,
  Crown
} from 'lucide-react'
import { cn } from '@/lib/utils'
import Link from 'next/link'

// Prosty debounce
function debounce<T extends (...args: any[]) => any>(
  func: T,
  wait: number
): (...args: Parameters<T>) => void {
  let timeout: NodeJS.Timeout
  return (...args: Parameters<T>) => {
    clearTimeout(timeout)
    timeout = setTimeout(() => func(...args), wait)
  }
}

export default function FriendsPage() {
  const [user, setUser] = useState<User | null>(null)
  const [activeTab, setActiveTab] = useState<'friends' | 'requests' | 'search'>('friends')
  const [friends, setFriends] = useState<UserProfile[]>([])
  const [requests, setRequests] = useState<(FriendRequest & { fromUserProfile?: UserProfile })[]>([])
  const [userProfile, setUserProfile] = useState<UserProfile | null>(null)
  const [searchName, setSearchName] = useState('')
  const [searchResults, setSearchResults] = useState<UserProfile[]>([])
  const [searchLoading, setSearchLoading] = useState(false)
  const [searchError, setSearchError] = useState('')
  const [loading, setLoading] = useState(true)
  const [message, setMessage] = useState('')
  const [actionLoading, setActionLoading] = useState<string | null>(null)

  // Debounced search
  const debouncedSearch = useCallback(
    debounce(async (searchTerm: string, currentUserId: string) => {
      if (searchTerm.length < 2) {
        setSearchResults([])
        setSearchError('')
        setSearchLoading(false)
        return
      }

      setSearchLoading(true)
      setSearchError('')
      
      try {
        console.log(`üîç Szukam: "${searchTerm}"`)
        const results = await userService.findUsersByName(searchTerm, currentUserId)
        console.log(`‚úÖ Znaleziono ${results.length} wynik√≥w`)
        setSearchResults(results)
        
        if (results.length === 0 && searchTerm.length >= 2) {
          setSearchError(`Nie znaleziono u≈ºytkownik√≥w zawierajƒÖcych "${searchTerm}"`)
        }
      } catch (error) {
        console.error('‚ùå B≈ÇƒÖd wyszukiwania:', error)
        setSearchError('WystƒÖpi≈Ç b≈ÇƒÖd podczas wyszukiwania. Spr√≥buj ponownie.')
        setSearchResults([])
      } finally {
        setSearchLoading(false)
      }
    }, 600),
    []
  )

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, async (usr) => {
      setUser(usr)
      if (!usr) {
        setLoading(false)
        return
      }
      
      await loadUserProfile(usr.uid)
    })

    return () => unsubscribe()
  }, [])

  // Obs≈Çuga wyszukiwania
  useEffect(() => {
    if (user && searchName.trim()) {
      setSearchLoading(true)
      debouncedSearch(searchName, user.uid)
    } else {
      setSearchResults([])
      setSearchError('')
      setSearchLoading(false)
    }
  }, [searchName, user, debouncedSearch])

  const loadUserProfile = async (uid: string) => {
    try {
      const profile = await userService.getUserProfile(uid)
      setUserProfile(profile)
      
      if (profile) {
        await loadFriends(profile.uid)
        await loadRequests(profile.uid)
      }
    } catch (error) {
      console.error('B≈ÇƒÖd ≈Çadowania profilu:', error)
      setMessage('‚ùå B≈ÇƒÖd ≈Çadowania profilu')
    } finally {
      setLoading(false)
    }
  }

  const loadFriends = async (userId: string) => {
    try {
      const userFriends = await userService.getFriends(userId)
      setFriends(userFriends)
    } catch (error) {
      console.error('B≈ÇƒÖd ≈Çadowania znajomych:', error)
      setFriends([])
    }
  }

  const loadRequests = async (userId: string) => {
    try {
      const userRequests = await userService.getFriendRequests(userId)
      setRequests(userRequests)
    } catch (error) {
      console.error('B≈ÇƒÖd ≈Çadowania zaprosze≈Ñ:', error)
      setRequests([])
    }
  }

  const handleSendRequest = async (toUserId: string, toUserName: string) => {
    if (!userProfile?.uid) return

    setActionLoading(`send-${toUserId}`)
    try {
      await userService.sendFriendRequest(userProfile.uid, toUserId)
      setMessage(`‚úÖ Zaproszenie wys≈Çane do ${toUserName}!`)
      setSearchResults(prev => prev.filter(u => u.uid !== toUserId))
    } catch (error: any) {
      setMessage('‚ùå ' + (error.message || 'Nie uda≈Ço siƒô wys≈Çaƒá zaproszenia'))
    } finally {
      setActionLoading(null)
    }
  }

  const handleAcceptRequest = async (requestId: string, fromUserName: string) => {
    if (!userProfile?.uid) return

    setActionLoading(`accept-${requestId}`)
    try {
      await userService.acceptFriendRequest(requestId, userProfile.uid)
      setMessage(`‚úÖ Zaakceptowano zaproszenie od ${fromUserName}!`)
      await loadRequests(userProfile.uid)
      await loadFriends(userProfile.uid)
    } catch (error: any) {
      setMessage('‚ùå ' + (error.message || 'Nie uda≈Ço siƒô zaakceptowaƒá zaproszenia'))
    } finally {
      setActionLoading(null)
    }
  }

  const handleRejectRequest = async (requestId: string) => {
    setActionLoading(`reject-${requestId}`)
    try {
      await userService.rejectFriendRequest(requestId)
      setMessage('üì≠ Zaproszenie odrzucone')
      if (userProfile?.uid) {
        await loadRequests(userProfile.uid)
      }
    } catch (error: any) {
      setMessage('‚ùå ' + (error.message || 'Nie uda≈Ço siƒô odrzuciƒá zaproszenia'))
    } finally {
      setActionLoading(null)
    }
  }

  const handleRemoveFriend = async (friendId: string, friendName: string) => {
    if (!userProfile?.uid || !confirm(`Czy na pewno chcesz usunƒÖƒá ${friendName} ze znajomych?`)) return
    
    setActionLoading(`remove-${friendId}`)
    try {
      await userService.removeFriend(userProfile.uid, friendId)
      setMessage(`üëã Usuniƒôto ${friendName} ze znajomych`)
      await loadFriends(userProfile.uid)
    } catch (error: any) {
      setMessage('‚ùå ' + (error.message || 'Nie uda≈Ço siƒô usunƒÖƒá znajomego'))
    } finally {
      setActionLoading(null)
    }
  }

  const copyDisplayName = async () => {
    if (userProfile?.displayName) {
      await navigator.clipboard.writeText(userProfile.displayName)
      setMessage('üìã Nazwa skopiowana! Podziel siƒô niƒÖ ze znajomymi.')
      setTimeout(() => setMessage(''), 3000)
    }
  }

  const shareProfile = async () => {
    if (userProfile?.displayName) {
      const shareText = `Do≈ÇƒÖcz do mnie w Spok√≥j w G≈Çowie! Moja nazwa u≈ºytkownika: ${userProfile.displayName}`
      
      if (navigator.share) {
        try {
          await navigator.share({
            title: 'Spok√≥j w G≈Çowie',
            text: shareText,
            url: window.location.origin
          })
        } catch (error) {
          // User cancelled share
        }
      } else {
        await navigator.clipboard.writeText(shareText)
        setMessage('üìã Zaproszenie skopiowane! Wy≈õlij je znajomym.')
      }
    }
  }

  // Auto-ukrywanie wiadomo≈õci
  useEffect(() => {
    if (message) {
      const timer = setTimeout(() => setMessage(''), 5000)
      return () => clearTimeout(timer)
    }
  }, [message])

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50 flex items-center justify-center p-4">
        <div className="text-center">
          <div className="relative">
            <div className="w-20 h-20 bg-gradient-to-r from-blue-500 to-purple-600 rounded-3xl flex items-center justify-center mx-auto mb-6">
              <Loader2 className="h-10 w-10 text-white animate-spin" />
            </div>
            <div className="absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-600 rounded-3xl blur-lg opacity-30 animate-pulse"></div>
          </div>
          <h2 className="text-xl font-bold text-gray-800 mb-2">≈Åadowanie znajomych</h2>
          <p className="text-gray-600">Przygotowujemy TwojƒÖ spo≈Çeczno≈õƒá...</p>
        </div>
      </div>
    )
  }

  if (!user) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50 flex items-center justify-center p-4">
        <div className="text-center max-w-md">
          <div className="w-24 h-24 bg-gradient-to-r from-blue-500 to-purple-600 rounded-3xl flex items-center justify-center mx-auto mb-6 shadow-2xl">
            <Users className="h-12 w-12 text-white" />
          </div>
          <h2 className="text-2xl font-bold text-gray-800 mb-3">Nie jeste≈õ zalogowany</h2>
          <p className="text-gray-600 mb-6 text-lg">
            Do≈ÇƒÖcz do spo≈Çeczno≈õci i razem dbajcie o dobre samopoczucie
          </p>
          <Link href="/auth/login">
            <Button className="bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white px-8 py-3 rounded-2xl text-lg font-semibold shadow-lg hover:shadow-xl transition-all duration-300">
              Zaloguj siƒô
            </Button>
          </Link>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50">
      {/* Floating Background Elements */}
      <div className="fixed inset-0 overflow-hidden pointer-events-none">
        <div className="absolute -top-20 -right-20 w-72 h-72 bg-blue-200 rounded-full blur-3xl opacity-20 animate-float"></div>
        <div className="absolute -bottom-20 -left-20 w-96 h-96 bg-purple-200 rounded-full blur-3xl opacity-20 animate-float" style={{ animationDelay: '2s' }}></div>
        <div className="absolute top-1/2 left-1/4 w-64 h-64 bg-pink-200 rounded-full blur-3xl opacity-20 animate-float" style={{ animationDelay: '4s' }}></div>
      </div>

      <div className="relative py-6 lg:py-8 px-4 sm:px-6">
        <div className="max-w-7xl mx-auto">
          
          {/* Header */}
          <div className="text-center mb-8 lg:mb-12">
            <div className="inline-flex flex-col sm:flex-row items-center gap-4 lg:gap-6 px-6 lg:px-8 py-4 lg:py-6 rounded-3xl bg-white/80 backdrop-blur-xl border border-white/40 shadow-2xl mb-6">
              <div className="relative">
                <div className="absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl blur-md opacity-60"></div>
                <div className="relative w-16 h-16 lg:w-20 lg:h-20 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center shadow-lg">
                  <Users className="h-8 w-8 lg:h-10 lg:w-10 text-white" />
                </div>
              </div>
              <div className="text-center sm:text-left">
                <h1 className="text-2xl lg:text-4xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-2">
                  Twoja Spo≈Çeczno≈õƒá
                </h1>
                <p className="text-gray-600 text-sm lg:text-base">
                  {userProfile?.displayName ? `Witaj, ${userProfile.displayName}!` : '≈Åadowanie...'}
                </p>
              </div>
            </div>
          </div>

          {/* Quick Actions Bar */}
          <div className="flex flex-wrap gap-3 justify-center mb-8 lg:mb-12">
            <Button
              onClick={shareProfile}
              variant="outline"
              className="rounded-2xl border-blue-200 bg-white/80 backdrop-blur-sm hover:bg-blue-50 hover:border-blue-300 transition-all duration-300 shadow-lg hover:shadow-xl"
            >
              <Share2 className="h-4 w-4 mr-2" />
              Udostƒôpnij profil
            </Button>
            <Button
              onClick={copyDisplayName}
              variant="outline"
              className="rounded-2xl border-purple-200 bg-white/80 backdrop-blur-sm hover:bg-purple-50 hover:border-purple-300 transition-all duration-300 shadow-lg hover:shadow-xl"
            >
              <Copy className="h-4 w-4 mr-2" />
              Kopiuj nazwƒô
            </Button>
          </div>

          {/* Stats Cards */}
          <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-6 mb-8 lg:mb-12">
            <StatCard 
              icon={Users}
              value={friends.length}
              label="Znajomych"
              color="blue"
              gradient="from-blue-500 to-cyan-500"
            />
            <StatCard 
              icon={Mail}
              value={requests.length}
              label="Zaprosze≈Ñ"
              color="orange"
              gradient="from-orange-500 to-red-500"
            />
            <StatCard 
              icon={Trophy}
              value={friends.reduce((acc, friend) => acc + (friend.streak || 0), 0)}
              label="≈ÅƒÖczny streak"
              color="green"
              gradient="from-green-500 to-emerald-500"
            />
            <StatCard 
              icon={Crown}
              value={Math.round(friends.reduce((acc, friend) => acc + (friend.consistency || 0), 0) / Math.max(friends.length, 1))}
              label="≈ör. konsystencja"
              color="purple"
              gradient="from-purple-500 to-pink-500"
              suffix="%"
            />
          </div>

          {/* Tabs */}
          <div className="mb-8 lg:mb-12">
            <Card className="border-0 shadow-2xl bg-white/80 backdrop-blur-xl border border-white/40 rounded-3xl overflow-hidden">
              <CardContent className="p-3 lg:p-6">
                <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 lg:space-x-4">
                  <TabButton
                    active={activeTab === 'friends'}
                    onClick={() => setActiveTab('friends')}
                    icon={Users}
                    label="Twoi Znajomi"
                    count={friends.length}
                    mobileLabel="Znajomi"
                  />
                  <TabButton
                    active={activeTab === 'requests'}
                    onClick={() => setActiveTab('requests')}
                    icon={Mail}
                    label="Zaproszenia"
                    count={requests.length}
                    mobileLabel="Zaproszenia"
                  />
                  <TabButton
                    active={activeTab === 'search'}
                    onClick={() => setActiveTab('search')}
                    icon={Search}
                    label="Szukaj Znajomych"
                    mobileLabel="Szukaj"
                  />
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Message */}
          {message && (
            <div className={cn(
              "mb-6 lg:mb-8 p-4 lg:p-6 rounded-2xl text-sm lg:text-base font-medium border flex items-center gap-3 animate-in fade-in duration-300 shadow-lg backdrop-blur-sm",
              getMessageClass(message)
            )}>
              {getMessageIcon(message)}
              <span className="flex-1">{message.replace(/[‚úÖ‚ùåüì≠üëãüìã]/g, '').trim()}</span>
              <Button
                variant="ghost"
                size="sm"
                onClick={() => setMessage('')}
                className="h-8 w-8 p-0 hover:bg-white/20"
              >
                <X className="h-4 w-4" />
              </Button>
            </div>
          )}

          {/* Content */}
          <div className="space-y-6 lg:space-y-8">
            {activeTab === 'friends' && (
              <FriendsList 
                friends={friends}
                onRemoveFriend={handleRemoveFriend}
                actionLoading={actionLoading}
                onSearchClick={() => setActiveTab('search')}
              />
            )}

            {activeTab === 'requests' && (
              <RequestsList 
                requests={requests}
                onAcceptRequest={handleAcceptRequest}
                onRejectRequest={handleRejectRequest}
                actionLoading={actionLoading}
              />
            )}

            {activeTab === 'search' && (
              <SearchTab 
                searchName={searchName}
                setSearchName={setSearchName}
                searchResults={searchResults}
                searchLoading={searchLoading}
                searchError={searchError}
                userProfile={userProfile}
                onSendRequest={handleSendRequest}
                actionLoading={actionLoading}
                onCopyDisplayName={copyDisplayName}
                onShareProfile={shareProfile}
              />
            )}
          </div>
        </div>
      </div>

      <style jsx>{`
        @keyframes float {
          0%, 100% { transform: translateY(0px) rotate(0deg); }
          50% { transform: translateY(-20px) rotate(180deg); }
        }
        .animate-float {
          animation: float 6s ease-in-out infinite;
        }
      `}</style>
    </div>
  )
}

// Komponenty pomocnicze
function StatCard({ icon: Icon, value, label, color, gradient, suffix = '' }: any) {
  return (
    <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm border border-white/40 rounded-2xl hover:shadow-2xl transition-all duration-300 group hover:scale-105">
      <CardContent className="p-4 lg:p-6 text-center">
        <div className={`w-12 h-12 lg:w-16 lg:h-16 bg-gradient-to-r ${gradient} rounded-2xl flex items-center justify-center mx-auto mb-3 lg:mb-4 group-hover:scale-110 transition-transform duration-300 shadow-lg`}>
          <Icon className="h-6 w-6 lg:h-8 lg:w-8 text-white" />
        </div>
        <div className="text-xl lg:text-3xl font-bold text-gray-900 mb-1">{value}{suffix}</div>
        <div className="text-gray-600 text-sm lg:text-base">{label}</div>
      </CardContent>
    </Card>
  )
}

function TabButton({ active, onClick, icon: Icon, label, count, mobileLabel }: any) {
  return (
    <button
      onClick={onClick}
      className={cn(
        "flex items-center justify-center lg:justify-start gap-2 lg:gap-3 px-4 lg:px-6 py-3 lg:py-4 rounded-xl text-sm lg:text-base font-medium transition-all duration-300 flex-1 min-w-0",
        "group relative overflow-hidden",
        active
          ? "bg-gradient-to-r from-blue-500 to-purple-500 text-white shadow-lg"
          : "text-gray-600 hover:text-gray-900 hover:bg-white/50 border border-transparent hover:border-gray-200"
      )}
    >
      <Icon className="h-4 w-4 lg:h-5 lg:w-5 flex-shrink-0" />
      <span className="hidden lg:inline truncate">{label}</span>
      <span className="lg:hidden truncate">{mobileLabel}</span>
      {count > 0 && (
        <span className={cn(
          "text-xs px-2 py-1 rounded-full flex-shrink-0",
          active 
            ? "bg-white/20 text-white" 
            : "bg-blue-100 text-blue-600"
        )}>
          {count}
        </span>
      )}
      
      {/* Hover effect */}
      {!active && (
        <div className="absolute inset-0 bg-gradient-to-r from-blue-500/5 to-purple-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-xl" />
      )}
    </button>
  )
}

function getMessageClass(message: string) {
  if (message.includes('‚úÖ')) return "bg-green-50 border-green-200 text-green-700"
  if (message.includes('‚ùå')) return "bg-red-50 border-red-200 text-red-700"
  if (message.includes('üì≠')) return "bg-blue-50 border-blue-200 text-blue-700"
  if (message.includes('üëã')) return "bg-orange-50 border-orange-200 text-orange-700"
  if (message.includes('üìã')) return "bg-purple-50 border-purple-200 text-purple-700"
  return "bg-gray-50 border-gray-200 text-gray-700"
}

function getMessageIcon(message: string) {
  if (message.includes('‚úÖ')) return <Check className="h-5 w-5" />
  if (message.includes('‚ùå')) return <AlertCircle className="h-5 w-5" />
  if (message.includes('üì≠')) return <Mail className="h-5 w-5" />
  if (message.includes('üëã')) return <UserX className="h-5 w-5" />
  if (message.includes('üìã')) return <Copy className="h-5 w-5" />
  return <Sparkles className="h-5 w-5" />
}

function FriendsList({ friends, onRemoveFriend, actionLoading, onSearchClick }: any) {
  if (friends.length === 0) {
    return (
      <Card className="border-0 shadow-2xl bg-white/80 backdrop-blur-xl rounded-3xl overflow-hidden">
        <CardContent className="text-center py-16 lg:py-24">
          <div className="relative inline-block mb-6">
            <div className="absolute inset-0 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full blur-2xl opacity-20"></div>
            <Users className="h-24 w-24 text-gray-300 mx-auto relative" />
          </div>
          <h3 className="text-2xl lg:text-3xl font-bold text-gray-900 mb-4">Brak znajomych</h3>
          <p className="text-gray-600 mb-8 max-w-md mx-auto text-lg">
            Do≈ÇƒÖcz do spo≈Çeczno≈õci i wsp√≥lnie dbajcie o swoje samopoczucie
          </p>
          <Button 
            onClick={onSearchClick}
            className="bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white px-8 py-4 rounded-2xl text-lg font-semibold shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105"
            size="lg"
          >
            <Search className="h-5 w-5 mr-3" />
            Znajd≈∫ pierwszego znajomego
          </Button>
        </CardContent>
      </Card>
    )
  }

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4 gap-6 lg:gap-8">
      {friends.map((friend) => (
        <Card key={friend.uid} className="border-0 shadow-xl bg-white/80 backdrop-blur-sm hover:shadow-2xl transition-all duration-500 group hover:scale-105 rounded-3xl overflow-hidden">
          <CardContent className="p-6 lg:p-8">
            <div className="flex flex-col items-center text-center">
              {/* Avatar */}
              <div className="relative mb-6">
                <div className="absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-600 rounded-3xl blur-md opacity-50 group-hover:opacity-70 transition-opacity duration-300"></div>
                <div className="relative w-20 h-20 lg:w-24 lg:h-24 bg-gradient-to-br from-blue-500 to-purple-600 rounded-3xl flex items-center justify-center text-white font-bold text-2xl lg:text-3xl shadow-2xl group-hover:scale-110 transition-transform duration-300">
                  {friend.avatarUrl ? (
                    <img 
                      src={friend.avatarUrl} 
                      alt={friend.displayName}
                      className="w-full h-full object-cover rounded-3xl"
                    />
                  ) : (
                    friend.displayName?.charAt(0).toUpperCase() || 'U'
                  )}
                </div>
              </div>
              
              {/* Info */}
              <h3 className="font-bold text-gray-900 text-xl lg:text-2xl mb-2 line-clamp-1">
                {friend.displayName}
              </h3>
              <p className="text-gray-600 text-sm lg:text-base mb-4 line-clamp-1">
                {friend.email}
              </p>

              {/* Stats */}
              <div className="grid grid-cols-2 gap-3 lg:gap-4 w-full mb-6">
                <div className="text-center p-3 lg:p-4 bg-gradient-to-br from-blue-50 to-blue-100 rounded-2xl border border-blue-200">
                  <div className="flex items-center justify-center gap-1 mb-1">
                    <Calendar className="h-4 w-4 text-blue-600" />
                    <div className="font-bold text-blue-600 text-lg lg:text-xl">{friend.streak || 0}</div>
                  </div>
                  <div className="text-xs text-blue-600">dni streak</div>
                </div>
                <div className="text-center p-3 lg:p-4 bg-gradient-to-br from-green-50 to-green-100 rounded-2xl border border-green-200">
                  <div className="flex items-center justify-center gap-1 mb-1">
                    <Trophy className="h-4 w-4 text-green-600" />
                    <div className="font-bold text-green-600 text-lg lg:text-xl">{friend.consistency || 0}%</div>
                  </div>
                  <div className="text-xs text-green-600">konsystencja</div>
                </div>
              </div>

              {/* Actions */}
              <div className="flex gap-3 w-full">
                <Button
                  variant="outline"
                  size="sm"
                  className="flex-1 border-gray-300 rounded-xl hover:border-blue-300 hover:bg-blue-50 transition-all duration-300"
                  onClick={() => window.open(`mailto:${friend.email}`, '_blank')}
                >
                  <Mail className="h-4 w-4 mr-2" />
                  <span className="hidden sm:inline">Email</span>
                </Button>
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => onRemoveFriend(friend.uid, friend.displayName || 'tego znajomego')}
                  disabled={actionLoading === `remove-${friend.uid}`}
                  className="border-red-300 text-red-600 hover:bg-red-50 hover:border-red-400 rounded-xl transition-all duration-300"
                >
                  {actionLoading === `remove-${friend.uid}` ? (
                    <Loader2 className="h-4 w-4 animate-spin" />
                  ) : (
                    <UserX className="h-4 w-4" />
                  )}
                </Button>
              </div>
            </div>
          </CardContent>
        </Card>
      ))}
    </div>
  )
}

function RequestsList({ requests, onAcceptRequest, onRejectRequest, actionLoading }: any) {
  if (requests.length === 0) {
    return (
      <Card className="border-0 shadow-2xl bg-white/80 backdrop-blur-xl rounded-3xl overflow-hidden">
        <CardContent className="text-center py-16 lg:py-24">
          <div className="relative inline-block mb-6">
            <div className="absolute inset-0 bg-gradient-to-r from-orange-400 to-red-500 rounded-full blur-2xl opacity-20"></div>
            <Mail className="h-24 w-24 text-gray-300 mx-auto relative" />
          </div>
          <h3 className="text-2xl lg:text-3xl font-bold text-gray-900 mb-4">Brak oczekujƒÖcych zaprosze≈Ñ</h3>
          <p className="text-gray-600 max-w-md mx-auto text-lg">
            Nowe zaproszenia do grona znajomych pojawiƒÖ siƒô tutaj
          </p>
        </CardContent>
      </Card>
    )
  }

  return (
    <div className="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6 lg:gap-8">
      {requests.map((request) => (
        <Card key={request.id} className="border-0 shadow-xl bg-white/80 backdrop-blur-sm hover:shadow-2xl transition-all duration-300 group hover:scale-105 rounded-3xl overflow-hidden">
          <CardContent className="p-6 lg:p-8">
            <div className="flex items-center gap-4 lg:gap-6 mb-6">
              <div className="relative">
                <div className="absolute inset-0 bg-gradient-to-r from-orange-500 to-red-500 rounded-2xl blur-md opacity-50"></div>
                <div className="relative w-16 h-16 lg:w-20 lg:h-20 bg-gradient-to-br from-orange-500 to-red-500 rounded-2xl flex items-center justify-center text-white font-bold text-xl lg:text-2xl shadow-lg">
                  {request.fromUserProfile?.avatarUrl ? (
                    <img 
                      src={request.fromUserProfile.avatarUrl} 
                      alt={request.fromUserProfile.displayName}
                      className="w-full h-full object-cover rounded-2xl"
                    />
                  ) : (
                    request.fromUserProfile?.displayName?.charAt(0).toUpperCase() || 'U'
                  )}
                </div>
              </div>
              <div className="flex-1 min-w-0">
                <h3 className="font-bold text-gray-900 text-lg lg:text-xl mb-1 line-clamp-1">
                  {request.fromUserProfile?.displayName || 'Nieznany u≈ºytkownik'}
                </h3>
                <p className="text-gray-600 text-sm lg:text-base mb-2">
                  Chce zostaƒá Twoim znajomym
                </p>
                <p className="text-xs lg:text-sm text-gray-500 line-clamp-1">
                  {request.fromUserProfile?.email}
                </p>
              </div>
            </div>
            
            <div className="flex gap-3">
              <Button
                onClick={() => onAcceptRequest(request.id, request.fromUserProfile?.displayName || 'u≈ºytkownika')}
                disabled={actionLoading === `accept-${request.id}`}
                className="flex-1 bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 text-white rounded-xl transition-all duration-300 shadow-lg hover:shadow-xl"
                size="lg"
              >
                {actionLoading === `accept-${request.id}` ? (
                  <Loader2 className="h-4 w-4 lg:h-5 lg:w-5 animate-spin mr-2" />
                ) : (
                  <Check className="h-4 w-4 lg:h-5 lg:w-5 mr-2" />
                )}
                Zaakceptuj
              </Button>
              <Button
                variant="outline"
                onClick={() => onRejectRequest(request.id)}
                disabled={actionLoading === `reject-${request.id}`}
                className="flex-1 border-gray-300 hover:border-red-300 hover:bg-red-50 rounded-xl transition-all duration-300"
                size="lg"
              >
                {actionLoading === `reject-${request.id}` ? (
                  <Loader2 className="h-4 w-4 lg:h-5 lg:w-5 animate-spin mr-2" />
                ) : (
                  <X className="h-4 w-4 lg:h-5 lg:w-5 mr-2" />
                )}
                Odrzuƒá
              </Button>
            </div>
          </CardContent>
        </Card>
      ))}
    </div>
  )
}

function SearchTab({
  searchName,
  setSearchName,
  searchResults,
  searchLoading,
  searchError,
  userProfile,
  onSendRequest,
  actionLoading,
  onCopyDisplayName,
  onShareProfile
}: any) {
  return (
    <div className="space-y-6 lg:space-y-8">
      <Card className="border-0 shadow-2xl bg-white/80 backdrop-blur-xl rounded-3xl overflow-hidden">
        <CardHeader className="pb-4 lg:pb-6">
          <CardTitle className="flex items-center gap-3 text-xl lg:text-2xl">
            <div className="w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center">
              <Search className="h-5 w-5 lg:h-6 lg:w-6 text-white" />
            </div>
            <div>
              <div>Znajd≈∫ znajomych</div>
              <CardDescription className="text-base lg:text-lg mt-2">
                Wpisz imiƒô, nazwisko lub email u≈ºytkownika, kt√≥rego chcesz znale≈∫ƒá
              </CardDescription>
            </div>
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6 lg:space-y-8">
          {/* Search Input */}
          <div className="space-y-4">
            <div className="flex flex-col sm:flex-row gap-3 lg:gap-4">
              <div className="flex-1 relative">
                <div className="absolute inset-0 bg-gradient-to-r from-blue-500/10 to-purple-500/10 rounded-2xl blur-sm"></div>
                <Input
                  type="text"
                  placeholder="np. Anna, jan@email.com, Kowalski..."
                  value={searchName}
                  onChange={(e) => setSearchName(e.target.value)}
                  className="relative text-base lg:text-lg px-4 lg:px-6 py-3 lg:py-4 rounded-2xl border-2 border-gray-200/60 focus:border-blue-500/50 bg-white/80 backdrop-blur-sm shadow-lg"
                />
              </div>
              <div className="flex gap-2 lg:gap-3">
                <Button 
                  onClick={onCopyDisplayName}
                  disabled={!userProfile?.displayName}
                  variant="outline"
                  className="border-gray-300 hover:border-purple-300 hover:bg-purple-50 rounded-xl transition-all duration-300 flex items-center gap-2"
                >
                  <Copy className="h-4 w-4 lg:h-5 lg:w-5" />
                  <span className="hidden sm:inline">Kopiuj</span>
                </Button>
                <Button 
                  onClick={onShareProfile}
                  disabled={!userProfile?.displayName}
                  variant="outline"
                  className="border-gray-300 hover:border-blue-300 hover:bg-blue-50 rounded-xl transition-all duration-300 flex items-center gap-2"
                >
                  <Share2 className="h-4 w-4 lg:h-5 lg:w-5" />
                  <span className="hidden sm:inline">Udostƒôpnij</span>
                </Button>
              </div>
            </div>
            <p className="text-sm lg:text-base text-gray-600">
              Wpisz co najmniej 2 znaki. Twoja nazwa: <strong className="text-blue-600">{userProfile?.displayName}</strong>
            </p>
          </div>

          {/* B≈ÇƒÖd wyszukiwania */}
          {searchError && (
            <div className="p-4 lg:p-6 bg-gradient-to-r from-red-50 to-orange-50 border-2 border-red-200/60 rounded-2xl text-red-700 text-base lg:text-lg flex items-center gap-3 backdrop-blur-sm">
              <AlertCircle className="h-5 w-5 lg:h-6 lg:w-6 flex-shrink-0" />
              <span>{searchError}</span>
            </div>
          )}

          {/* Loading indicator */}
          {searchLoading && (
            <div className="flex flex-col items-center justify-center py-12 lg:py-16">
              <div className="relative mb-4">
                <div className="absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full blur-lg opacity-20 animate-pulse"></div>
                <Loader2 className="h-12 w-12 lg:h-16 lg:w-16 animate-spin text-blue-500 relative" />
              </div>
              <span className="text-gray-600 text-lg lg:text-xl">Szukam u≈ºytkownik√≥w w bazie...</span>
            </div>
          )}

          {/* Wyniki wyszukiwania */}
          {searchResults.length > 0 && (
            <div className="space-y-4 lg:space-y-6">
              <h3 className="font-bold text-gray-900 text-lg lg:text-2xl flex items-center gap-3">
                <Sparkles className="h-5 w-5 lg:h-6 lg:w-6 text-yellow-500" />
                Znaleziono {searchResults.length} u≈ºytkownik√≥w:
              </h3>
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 lg:gap-6">
                {searchResults.map((foundUser) => (
                  <Card key={foundUser.uid} className="border-2 border-green-200/60 bg-gradient-to-br from-green-50/80 to-emerald-50/80 backdrop-blur-sm rounded-2xl lg:rounded-3xl overflow-hidden hover:shadow-2xl transition-all duration-300 group hover:scale-105">
                    <CardContent className="p-4 lg:p-6">
                      <div className="flex items-center gap-4 lg:gap-6 mb-4 lg:mb-6">
                        <div className="relative">
                          <div className="absolute inset-0 bg-gradient-to-r from-green-500 to-emerald-600 rounded-2xl blur-md opacity-50"></div>
                          <div className="relative w-16 h-16 lg:w-20 lg:h-20 bg-gradient-to-br from-green-500 to-emerald-600 rounded-2xl flex items-center justify-center text-white font-bold text-xl lg:text-2xl shadow-lg">
                            {foundUser.avatarUrl ? (
                              <img 
                                src={foundUser.avatarUrl} 
                                alt={foundUser.displayName}
                                className="w-full h-full object-cover rounded-2xl"
                              />
                            ) : (
                              foundUser.displayName?.charAt(0).toUpperCase() || 'U'
                            )}
                          </div>
                        </div>
                        <div className="flex-1 min-w-0">
                          <h3 className="font-bold text-gray-900 text-lg lg:text-xl mb-1 line-clamp-1">
                            {foundUser.displayName}
                          </h3>
                          <p className="text-gray-600 text-sm lg:text-base line-clamp-1">
                            {foundUser.email}
                          </p>
                          {foundUser.bio && (
                            <p className="text-gray-500 text-sm lg:text-base mt-2 line-clamp-2">{foundUser.bio}</p>
                          )}
                        </div>
                      </div>
                      
                      <Button
                        onClick={() => onSendRequest(foundUser.uid, foundUser.displayName || 'u≈ºytkownika')}
                        disabled={actionLoading === `send-${foundUser.uid}`}
                        className="w-full bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 text-white rounded-xl lg:rounded-2xl py-3 lg:py-4 text-base lg:text-lg font-semibold shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105"
                      >
                        {actionLoading === `send-${foundUser.uid}` ? (
                          <Loader2 className="h-4 w-4 lg:h-5 lg:w-5 animate-spin mr-2" />
                        ) : (
                          <UserPlus className="h-4 w-4 lg:h-5 lg:w-5 mr-2" />
                        )}
                        Wy≈õlij zaproszenie
                      </Button>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          )}

          {/* Pomoc */}
          {!searchResults.length && !searchError && !searchLoading && searchName.length < 2 && (
            <div className="p-6 lg:p-8 bg-gradient-to-br from-blue-50/80 to-purple-50/80 rounded-2xl lg:rounded-3xl border-2 border-blue-200/60 backdrop-blur-sm">
              <h4 className="font-bold text-blue-900 text-lg lg:text-xl mb-4 flex items-center gap-3">
                <Sparkles className="h-5 w-5 lg:h-6 lg:w-6 text-blue-500" />
                Jak to dzia≈Ça?
              </h4>
              <p className="text-blue-700 text-base lg:text-lg mb-4">
                Wyszukiwanie przeszukuje bazƒô Firebase po:
              </p>
              <ul className="text-blue-700 text-sm lg:text-base space-y-2 lg:space-y-3 mb-4">
                <li className="flex items-center gap-3">
                  <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                  <strong>Imieniu</strong> (Anna, Jan, Maria)
                </li>
                <li className="flex items-center gap-3">
                  <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                  <strong>Nazwisku</strong> (Kowalska, Nowak)
                </li>
                <li className="flex items-center gap-3">
                  <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                  <strong>Emailu</strong> (anna@email.com)
                </li>
                <li className="flex items-center gap-3">
                  <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                  <strong>Nazwie u≈ºytkownika</strong> (AnnaKowalska)
                </li>
              </ul>
              <div className="p-4 bg-white/50 rounded-xl border border-blue-200">
                <p className="text-blue-600 text-sm lg:text-base">
                  <strong>Przyk≈Çad:</strong> Wyszukaj "eli" aby znale≈∫ƒá "Elia", "Eliot", "Marcelina"
                </p>
              </div>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  )
}// src/app/dashboard/page.tsx - UPROSZCZONA WERSJA
'use client'

import { useState, useEffect, useCallback, useMemo } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { 
  TrendingUp, Zap, Brain, Award, 
  Heart, BarChart3, Plus, Edit3,
  Maximize2, Minimize2, Sparkles,
  Activity
} from 'lucide-react'
import { cn } from '@/lib/utils'
import Link from 'next/link'

// Proste importy - bez Firestore
import { useAuth } from '@/components/providers/auth-provider'

// Types
interface Widget {
  id: string
  type: WidgetType
  enabled: boolean
  size: 'small' | 'medium' | 'large'
  position: number
}

type WidgetType = 'mood-today' | 'trend' | 'streak' | 'ai-insights' | 'tools' | 'stats'

interface UserData {
  uid: string
  firstName: string
  lastName: string
  level: number
  xp: number
  streak: number
  currentMood?: number
  moodEntries: any[]
  createdAt: Date
}

// Demo Data - ZAMIast Firestore
const DEMO_USER_DATA: UserData = {
  uid: 'demo-user',
  firstName: 'Go≈õƒá',
  lastName: 'Demo',
  level: 3,
  xp: 450,
  streak: 7,
  currentMood: 75,
  moodEntries: [
    { 
      id: '1',
      mood: 75, 
      timestamp: new Date(), 
      note: 'Dzie≈Ñ dobry! Cieszƒô siƒô, ≈ºe testujesz tƒô aplikacjƒô. To dane demonstracyjne pokazujƒÖce jak bƒôdzie wyglƒÖda≈Ç Tw√≥j dashboard.' 
    },
    { 
      id: '2',
      mood: 60, 
      timestamp: new Date(Date.now() - 86400000), 
      note: 'Spokojny dzie≈Ñ pracy' 
    },
    { 
      id: '3',
      mood: 80, 
      timestamp: new Date(Date.now() - 172800000), 
      note: '≈öwietny nastr√≥j po spotkaniu z przyjaci√≥≈Çmi!' 
    },
    { 
      id: '4',
      mood: 55, 
      timestamp: new Date(Date.now() - 259200000), 
      note: 'Trochƒô zmƒôczony, ale og√≥lnie ok' 
    },
    { 
      id: '5',
      mood: 90, 
      timestamp: new Date(Date.now() - 345600000), 
      note: 'Niesamowity dzie≈Ñ! Uda≈Ço mi siƒô zrealizowaƒá wszystkie cele.' 
    },
    { 
      id: '6',
      mood: 70, 
      timestamp: new Date(Date.now() - 432000000), 
      note: 'Stabilny dzie≈Ñ' 
    },
    { 
      id: '7',
      mood: 65, 
      timestamp: new Date(Date.now() - 518400000), 
      note: 'Poranny trening doda≈Ç mi energii' 
    },
  ],
  createdAt: new Date()
}

const DEFAULT_WIDGETS: Widget[] = [
  { id: '1', type: 'mood-today', enabled: true, size: 'large', position: 0 },
  { id: '2', type: 'trend', enabled: true, size: 'large', position: 1 },
  { id: '3', type: 'streak', enabled: true, size: 'medium', position: 2 },
  { id: '4', type: 'ai-insights', enabled: true, size: 'medium', position: 3 },
  { id: '5', type: 'tools', enabled: true, size: 'small', position: 4 },
  { id: '6', type: 'stats', enabled: true, size: 'small', position: 5 },
]

const WIDGET_CONFIG = {
  'mood-today': { 
    name: 'Tw√≥j Nastr√≥j', 
    icon: Heart, 
    description: 'Jak siƒô dzi≈õ czujesz?',
    defaultSize: 'large' as const,
    gradient: 'from-pink-500 to-rose-500',
    color: 'text-pink-500'
  },
  'trend': { 
    name: 'Trend Nastroju', 
    icon: TrendingUp, 
    description: 'Twoja 7-dniowa podr√≥≈º',
    defaultSize: 'large' as const,
    gradient: 'from-blue-500 to-cyan-500',
    color: 'text-blue-500'
  },
  'streak': { 
    name: 'Seria Dni', 
    icon: Award, 
    description: 'Buduj nawyk',
    defaultSize: 'medium' as const,
    gradient: 'from-amber-500 to-orange-500',
    color: 'text-amber-500'
  },
  'ai-insights': { 
    name: 'AI Insights', 
    icon: Brain, 
    description: 'Spersonalizowane wskaz√≥wki',
    defaultSize: 'medium' as const,
    gradient: 'from-purple-500 to-indigo-500',
    color: 'text-purple-500'
  },
  'tools': { 
    name: 'Szybkie Narzƒôdzia', 
    icon: Zap, 
    description: 'Natychmiastowa ulga',
    defaultSize: 'small' as const,
    gradient: 'from-green-500 to-emerald-500',
    color: 'text-green-500'
  },
  'stats': { 
    name: 'Twoje Statystyki', 
    icon: BarChart3, 
    description: 'Postƒôpy i wyniki',
    defaultSize: 'small' as const,
    gradient: 'from-slate-600 to-slate-700',
    color: 'text-slate-600'
  }
} as const

export default function PremiumDashboard() {
  const { user: authUser, loading } = useAuth()
  const [user, setUser] = useState<UserData | null>(null)
  const [moodEntries, setMoodEntries] = useState<any[]>([])
  const [widgets, setWidgets] = useState<Widget[]>(DEFAULT_WIDGETS)
  const [todayEntry, setTodayEntry] = useState<any>(null)
  const [streakData, setStreakData] = useState({ 
    currentStreak: 0, 
    longestStreak: 0, 
    perfectMonth: false 
  })
  const [isMobile, setIsMobile] = useState(false)

  // Responsive detection
  useEffect(() => {
    const checkMobile = () => setIsMobile(window.innerWidth < 768)
    checkMobile()
    window.addEventListener('resize', checkMobile)
    return () => window.removeEventListener('resize', checkMobile)
  }, [])

  // PROSTE ≈ÅADOWANIE DANYCH - BEZ FIRESTORE
  useEffect(() => {
    if (loading) return

    // Zawsze u≈ºywaj danych demo dla test√≥w
    const userData = DEMO_USER_DATA
    setUser(userData)
    setMoodEntries(userData.moodEntries)
    
    // Oblicz streak z danych demo
    const streak = calculateStreakFromEntries(userData.moodEntries)
    setStreakData(streak)
    
    // Znajd≈∫ dzisiejszy wpis
    const today = findTodayEntry(userData.moodEntries)
    setTodayEntry(today)

    console.log('‚úÖ Dashboard loaded with demo data')
  }, [loading])

  // Memoized calculations
  const stats = useMemo(() => {
    if (!moodEntries.length) return { averageMood: 50, trend: 0, consistency: 75 }
    return calculateStats(moodEntries)
  }, [moodEntries])

  const enabledWidgets = useMemo(() => 
    widgets.filter(w => w.enabled).sort((a, b) => a.position - b.position),
    [widgets]
  )

  // Grid system
  const gridConfig = useMemo(() => {
    if (isMobile) {
      return {
        columns: 2,
        large: "col-span-2 min-h-[300px]",
        medium: "col-span-2 min-h-[220px]", 
        small: "col-span-1 min-h-[180px]"
      }
    } else {
      return {
        columns: 4,
        large: "col-span-2 min-h-[360px]",
        medium: "col-span-1 min-h-[280px]",
        small: "col-span-1 min-h-[200px]"
      }
    }
  }, [isMobile])

  const getGridClass = useCallback((size: Widget['size']) => {
    return cn("transition-all duration-500", gridConfig[size])
  }, [gridConfig])

  const renderWidget = useCallback((widget: Widget) => {
    const props = { isMobile, className: "h-full" }
    
    switch (widget.type) {
      case 'mood-today':
        return <MoodTodayWidget {...props} todayEntry={todayEntry} />
      case 'trend':
        return <TrendWidget {...props} moodEntries={moodEntries} stats={stats} />
      case 'streak':
        return <StreakWidget {...props} streakData={streakData} />
      case 'ai-insights':
        return <AIInsightsWidget {...props} todayEntry={todayEntry} />
      case 'tools':
        return <ToolsWidget {...props} />
      case 'stats':
        return <StatsWidget {...props} user={user} stats={stats} moodEntries={moodEntries} />
      default:
        return <PlaceholderWidget {...props} />
    }
  }, [todayEntry, moodEntries, stats, streakData, user, isMobile])

  if (loading) return <LoadingScreen />

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/20 to-purple-50/10">
      <div className="container mx-auto px-4 py-6 max-w-7xl">
        {/* Demo Mode Banner */}
        <motion.div
          initial={{ opacity: 0, y: -10 }}
          animate={{ opacity: 1, y: 0 }}
          className="mb-6 p-4 bg-gradient-to-r from-blue-50 to-purple-50 border border-blue-200 rounded-xl"
        >
          <div className="flex items-center gap-3">
            <div className="p-2 bg-blue-100 rounded-lg">
              <Sparkles className="h-5 w-5 text-blue-600" />
            </div>
            <div className="flex-1">
              <p className="font-semibold text-blue-800">Tryb demonstracyjny üöÄ</p>
              <p className="text-blue-700 text-sm">
                {authUser 
                  ? `Witaj ${authUser.displayName || authUser.email}! Oto podglƒÖd Twojego przysz≈Çego dashboardu.` 
                  : 'PrzeglƒÖdasz demo aplikacji. Zaloguj siƒô, aby zapisywaƒá swoje dane.'
                }
              </p>
            </div>
            {!authUser && (
              <Link href="/auth/login">
                <Button className="bg-blue-500 hover:bg-blue-600 text-white">
                  Zaloguj siƒô
                </Button>
              </Link>
            )}
          </div>
        </motion.div>

        {/* Animated Header */}
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="mb-8"
        >
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-3xl font-bold bg-gradient-to-r from-slate-800 to-slate-600 bg-clip-text text-transparent">
                Witaj, {user?.firstName || 'Przyjacielu'}! üëã
              </h1>
              <p className="text-slate-600 mt-2 text-lg">
                Jak dzi≈õ siƒô miewasz? Pamiƒôtaj o swoim codziennym wpisie.
              </p>
            </div>
            
            <motion.div
              whileHover={{ scale: 1.05 }}
              className="hidden lg:flex items-center gap-3 px-6 py-3 rounded-2xl bg-gradient-to-r from-blue-500 to-purple-500 text-white shadow-lg"
            >
              <Sparkles className="h-5 w-5" />
              <span className="font-semibold">Poziom {user?.level || 1}</span>
            </motion.div>
          </div>
        </motion.div>

        {/* Quick Insights */}
        <QuickInsights stats={stats} streakData={streakData} moodEntries={moodEntries} isMobile={isMobile} />

        {/* Main Grid */}
        <motion.div
          layout
          className={cn(
            "grid gap-6 auto-rows-min w-full",
            isMobile ? "gap-4" : "gap-6"
          )}
          style={{ gridTemplateColumns: `repeat(${gridConfig.columns}, minmax(0, 1fr))` }}
        >
          <AnimatePresence mode="popLayout">
            {enabledWidgets.map((widget, index) => (
              <motion.div
                key={widget.id}
                layout
                initial={{ opacity: 0, scale: 0.9, y: 20 }}
                animate={{ 
                  opacity: 1, 
                  scale: 1,
                  y: 0,
                  transition: { 
                    delay: index * 0.1,
                    type: "spring",
                    stiffness: 100,
                    damping: 15
                  }
                }}
                whileHover={{ y: -4 }}
                className={getGridClass(widget.size)}
              >
                {renderWidget(widget)}
              </motion.div>
            ))}
          </AnimatePresence>
        </motion.div>
      </div>
    </div>
  )
}

// üî• QUICK INSIGHTS - GENIALNE STATYSTYKI
function QuickInsights({ stats, streakData, moodEntries, isMobile }: any) {
  const insights = [
    {
      value: streakData.currentStreak,
      label: "Dni Streak",
      icon: "üî•",
      trend: streakData.currentStreak > 0 ? "positive" : "neutral",
      description: "Twoja codzienna seria"
    },
    {
      value: moodEntries.length,
      label: "Wpis√≥w",
      icon: "üìä",
      trend: "neutral",
      description: "≈ÅƒÖczna liczba"
    },
    {
      value: `${stats.consistency}%`,
      label: "Konsystencja",
      icon: "üéØ",
      trend: stats.consistency > 70 ? "positive" : "neutral",
      description: "Regularno≈õƒá wpis√≥w"
    },
    ...(isMobile ? [] : [{
      value: `${stats.averageMood}%`,
      label: "≈öredni Nastr√≥j",
      icon: "üíñ",
      trend: "positive",
      description: "Ostatnie 7 dni"
    }])
  ]

  return (
    <motion.div
      initial={{ opacity: 0, y: 10 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ delay: 0.2 }}
      className={cn(
        "grid mb-8",
        isMobile ? "grid-cols-3 gap-3" : "grid-cols-4 gap-4"
      )}
    >
      {insights.map((insight, index) => (
        <motion.div
          key={insight.label}
          whileHover={{ scale: 1.02, y: -2 }}
          whileTap={{ scale: 0.98 }}
          className={cn(
            "bg-white/80 backdrop-blur-sm rounded-2xl p-4 border border-slate-200/60",
            "transition-all duration-300 hover:shadow-lg hover:border-slate-300"
          )}
        >
          <div className="flex items-center justify-between mb-2">
            <span className="text-2xl">{insight.icon}</span>
            <div className={cn(
              "w-2 h-2 rounded-full",
              insight.trend === "positive" ? "bg-green-400" : "bg-blue-400"
            )} />
          </div>
          
          <div className="space-y-1">
            <div className="text-2xl font-bold text-slate-800">{insight.value}</div>
            <div className="text-sm font-semibold text-slate-600">{insight.label}</div>
            <div className="text-xs text-slate-500">{insight.description}</div>
          </div>
        </motion.div>
      ))}
    </motion.div>
  )
}

// üî• MOOD TODAY WIDGET - GENIALNY
function MoodTodayWidget({ todayEntry, isMobile, className }: any) {
  const [isNoteExpanded, setIsNoteExpanded] = useState(false)
  
  const getMoodConfig = (mood: number) => {
    const configs = [
      { emoji: 'üòî', label: 'Bardzo niski', gradient: 'from-slate-400 to-slate-500', bg: 'bg-slate-100', color: 'text-slate-600' },
      { emoji: 'üòê', label: 'Niski', gradient: 'from-blue-400 to-blue-500', bg: 'bg-blue-100', color: 'text-blue-600' },
      { emoji: 'üôÇ', label: 'Neutralny', gradient: 'from-green-400 to-green-500', bg: 'bg-green-100', color: 'text-green-600' },
      { emoji: 'üòä', label: 'Wysoki', gradient: 'from-purple-400 to-purple-500', bg: 'bg-purple-100', color: 'text-purple-600' },
      { emoji: 'ü§©', label: 'Bardzo wysoki', gradient: 'from-amber-400 to-amber-500', bg: 'bg-amber-100', color: 'text-amber-600' }
    ]
    return configs[Math.floor((mood - 1) / 20)] || configs[2]
  }

  const moodConfig = todayEntry ? getMoodConfig(todayEntry.mood) : getMoodConfig(50)

  return (
    <Card className={cn(
      className,
      "relative overflow-hidden border-0 shadow-xl bg-gradient-to-br from-white to-slate-50/80",
      "hover:shadow-2xl transition-all duration-500"
    )}>
      {/* Animated Background */}
      <div className={cn(
        "absolute inset-0 opacity-[0.02]",
        `bg-gradient-to-br ${moodConfig.gradient}`
      )} />
      
      <CardHeader className="pb-4 relative z-10">
        <CardTitle className="flex items-center justify-between">
          <div className="flex items-center gap-3">
            <div className={cn(
              "p-2 rounded-xl shadow-lg",
              `bg-gradient-to-br ${moodConfig.gradient}`
            )}>
              <Heart className="h-5 w-5 text-white" />
            </div>
            <div>
              <div className="text-lg font-bold text-slate-800">Tw√≥j Nastr√≥j</div>
              <div className="text-sm text-slate-600">Jak siƒô dzi≈õ czujesz?</div>
            </div>
          </div>
          
          {todayEntry?.note && !isMobile && (
            <Button
              variant="ghost"
              size="sm"
              onClick={() => setIsNoteExpanded(!isNoteExpanded)}
              className="h-9 w-9 p-0 rounded-lg hover:bg-slate-100/50"
            >
              {isNoteExpanded ? (
                <Minimize2 className="h-4 w-4 text-slate-500" />
              ) : (
                <Maximize2 className="h-4 w-4 text-slate-500" />
              )}
            </Button>
          )}
        </CardTitle>
      </CardHeader>
      
      <CardContent className="relative z-10">
        {todayEntry ? (
          <div className="space-y-6">
            {/* Mood Display */}
            <motion.div 
              className="text-center space-y-4"
              initial={{ scale: 0.8 }}
              animate={{ scale: 1 }}
              transition={{ type: "spring", stiffness: 200 }}
            >
              <motion.div
                className={cn(
                  "text-6xl mb-2 cursor-pointer",
                  isMobile ? "text-5xl" : "text-7xl"
                )}
                whileHover={{ scale: 1.1, rotate: 5 }}
                whileTap={{ scale: 0.95 }}
              >
                {moodConfig.emoji}
              </motion.div>
              
              <div className="space-y-2">
                <div className={cn(
                  "text-4xl font-black bg-gradient-to-r bg-clip-text text-transparent",
                  moodConfig.gradient,
                  isMobile ? "text-3xl" : "text-4xl"
                )}>
                  {todayEntry.mood}%
                </div>
                <div className={cn(
                  "text-lg font-semibold px-6 py-2 rounded-full inline-block border-2",
                  moodConfig.bg,
                  moodConfig.color,
                  "border-current/20"
                )}>
                  {moodConfig.label}
                </div>
              </div>
            </motion.div>

            {/* Note Section */}
            {todayEntry.note && (
              <motion.div 
                layout
                className={cn(
                  "rounded-xl border-2 transition-all duration-500 overflow-hidden",
                  "bg-white/50 backdrop-blur-sm",
                  isNoteExpanded ? "border-slate-300" : "border-slate-200",
                  !isMobile && "cursor-pointer hover:border-slate-300"
                )}
                onClick={() => !isMobile && setIsNoteExpanded(!isNoteExpanded)}
              >
                <div className="p-4">
                  <div className="flex items-center gap-2 mb-3">
                    <Edit3 className="h-4 w-4 text-slate-600" />
                    <span className="font-semibold text-slate-700">Twoja notatka</span>
                    {!isMobile && (
                      <span className="text-xs text-slate-500 ml-auto">
                        {isNoteExpanded ? 'Kliknij aby zwinƒÖƒá' : 'Kliknij aby rozwinƒÖƒá'}
                      </span>
                    )}
                  </div>
                  <motion.div
                    initial={false}
                    animate={{ 
                      maxHeight: isNoteExpanded ? 200 : (isMobile ? 60 : 80),
                      opacity: isNoteExpanded ? 1 : 0.8
                    }}
                    className="text-slate-600 leading-relaxed overflow-y-auto transition-all duration-500"
                  >
                    {todayEntry.note}
                  </motion.div>
                </div>
              </motion.div>
            )}

            {/* Actions */}
            <div className={cn("grid gap-3", isMobile ? "grid-cols-2" : "grid-cols-2")}>
              <Link href="/mood" className="block">
                <Button 
                  variant="outline"
                  className={cn(
                    "w-full h-12 rounded-xl border-2 border-slate-300 bg-white/80",
                    "hover:bg-white hover:border-slate-400 hover:shadow-lg transition-all duration-300"
                  )}
                >
                  <Edit3 className="mr-2 h-4 w-4" />
                  Edytuj Wpis
                </Button>
              </Link>
              <Link href="/ai" className="block">
                <Button 
                  className={cn(
                    "w-full h-12 rounded-xl text-white shadow-lg",
                    `bg-gradient-to-r ${moodConfig.gradient}`,
                    "hover:shadow-xl hover:scale-105 transition-all duration-300"
                  )}
                >
                  <Brain className="mr-2 h-4 w-4" />
                  Analiza AI
                </Button>
              </Link>
            </div>
          </div>
        ) : (
          <motion.div 
            className="text-center py-8 space-y-6"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
          >
            <motion.div
              className="text-6xl mb-4"
              animate={{ 
                scale: [1, 1.1, 1],
                rotate: [0, 5, -5, 0]
              }}
              transition={{ duration: 2, repeat: Infinity }}
            >
              üìä
            </motion.div>
            
            <div className="space-y-3">
              <h3 className="text-xl font-bold text-slate-800">Brak dzisiejszego wpisu</h3>
              <p className="text-slate-600 text-lg">
                Zacznij swojƒÖ podr√≥≈º do lepszego samopoczucia
              </p>
            </div>
            
            <Link href="/mood" className="block">
              <Button 
                className={cn(
                  "w-full h-14 rounded-xl text-white shadow-xl text-lg font-semibold",
                  "bg-gradient-to-r from-blue-500 to-purple-500",
                  "hover:shadow-2xl hover:scale-105 transition-all duration-300"
                )}
              >
                <Plus className="mr-3 h-5 w-5" />
                Dodaj Pierwszy Wpis
              </Button>
            </Link>
          </motion.div>
        )}
      </CardContent>
    </Card>
  )
}

// üî• TREND WIDGET - GENIALNY (Z PROSTYM WYKRESEM)
function TrendWidget({ moodEntries, stats, isMobile, className }: any) {
  // Simple chart data calculation
  const chartData = useMemo(() => {
    const days = ['N', 'P', 'W', '≈ö', 'C', 'P', 'S']
    return days.map((day, index) => {
      const mood = moodEntries[index]?.mood || Math.floor(Math.random() * 30) + 60
      return { day, mood }
    })
  }, [moodEntries])

  return (
    <Card className={cn(
      className,
      "relative overflow-hidden border-0 shadow-xl bg-gradient-to-br from-white to-slate-50/80",
      "hover:shadow-2xl transition-all duration-500"
    )}>
      <CardHeader className="pb-4">
        <CardTitle className="flex items-center gap-3">
          <div className="p-2 rounded-xl shadow-lg bg-gradient-to-br from-blue-500 to-cyan-500">
            <TrendingUp className="h-5 w-5 text-white" />
          </div>
          <div>
            <div className="text-lg font-bold text-slate-800">Trend Nastroju</div>
            <div className="text-sm text-slate-600">Twoja 7-dniowa podr√≥≈º</div>
          </div>
        </CardTitle>
      </CardHeader>
      
      <CardContent className="space-y-6">
        {/* Simple Chart */}
        <div className={cn("w-full", isMobile ? "h-32" : "h-40")}>
          <div className="w-full h-full flex items-end justify-between px-2 gap-1">
            {chartData.map((data, index) => (
              <div key={index} className="flex flex-col items-center gap-2 flex-1">
                <div className="text-xs text-slate-500 font-medium">{data.day}</div>
                <div 
                  className="w-full bg-gradient-to-t from-blue-500 to-cyan-400 rounded-t-lg transition-all duration-500 hover:opacity-80"
                  style={{ height: `${data.mood}%` }}
                />
                <div className="text-xs text-slate-600 font-semibold">
                  {data.mood}%
                </div>
              </div>
            ))}
          </div>
        </div>
        
        {/* Stats Grid */}
        <div className="grid grid-cols-3 gap-3">
          {[
            { value: `${stats.trend > 0 ? '+' : ''}${stats.trend}%`, label: 'Trend', color: 'text-blue-500' },
            { value: `${stats.averageMood}%`, label: '≈örednia', color: 'text-purple-500' },
            { value: moodEntries.length, label: 'Wpisy', color: 'text-green-500' }
          ].map((stat, index) => (
            <motion.div
              key={stat.label}
              whileHover={{ scale: 1.05 }}
              className="text-center p-3 rounded-xl bg-white/60 backdrop-blur-sm border border-slate-200/60"
            >
              <div className={cn("text-xl font-black", stat.color)}>{stat.value}</div>
              <div className="text-xs font-semibold text-slate-600 mt-1">{stat.label}</div>
            </motion.div>
          ))}
        </div>

        {/* Insight */}
        <motion.div 
          className="p-4 rounded-xl bg-gradient-to-r from-blue-50 to-cyan-50 border border-blue-200/60"
          whileHover={{ scale: 1.02 }}
        >
          <div className="flex items-center gap-3 mb-2">
            <Activity className="h-5 w-5 text-blue-500" />
            <span className="font-semibold text-blue-700">Analiza Trendu</span>
          </div>
          <p className="text-blue-600 text-sm leading-relaxed">
            {stats.trend > 5 
              ? "üéâ Tw√≥j nastr√≥j wyra≈∫nie siƒô poprawia! Kontynuuj swoje dobre praktyki!" 
              : stats.trend < -5 
              ? "üí≠ Zauwa≈ºyli≈õmy spadek w Twoim nastroju. Mo≈ºe to dobry moment na relaks?" 
              : "‚ú® Tw√≥j nastr√≥j utrzymuje stabilny poziom. To ≈õwietny znak r√≥wnowagi!"}
          </p>
        </motion.div>

        <Link href="/analytics">
          <Button 
            variant="outline"
            className="w-full h-12 rounded-xl border-2 border-slate-300 bg-white/80 hover:bg-white hover:border-slate-400 hover:shadow-lg transition-all duration-300"
          >
            <BarChart3 className="mr-2 h-4 w-4" />
            Pe≈Çna Analiza
          </Button>
        </Link>
      </CardContent>
    </Card>
  )
}

// üî• STREAK WIDGET - GENIALNY
function StreakWidget({ streakData, isMobile, className }: any) {
  const progress = Math.min((streakData.currentStreak / 30) * 100, 100)
  
  return (
    <Card className={cn(
      className,
      "relative overflow-hidden border-0 shadow-xl bg-gradient-to-br from-white to-slate-50/80",
      "hover:shadow-2xl transition-all duration-500"
    )}>
      {/* Background Pattern */}
      <div className="absolute inset-0 bg-gradient-to-br from-amber-500/5 to-orange-500/5" />
      
      <CardHeader className="pb-4 relative z-10">
        <CardTitle className="flex items-center gap-3">
          <div className="p-2 rounded-xl shadow-lg bg-gradient-to-br from-amber-500 to-orange-500">
            <Award className="h-5 w-5 text-white" />
          </div>
          <div>
            <div className="text-lg font-bold text-slate-800">Seria Dni</div>
            <div className="text-sm text-slate-600">Buduj sw√≥j nawyk</div>
          </div>
        </CardTitle>
      </CardHeader>
      
      <CardContent className="space-y-6 relative z-10">
        {/* Main Streak Display */}
        <motion.div 
          className="text-center space-y-4"
          initial={{ scale: 0.9 }}
          animate={{ scale: 1 }}
        >
          <motion.div
            className="text-5xl font-black bg-gradient-to-r from-amber-500 to-orange-500 bg-clip-text text-transparent"
            animate={{ 
              scale: [1, 1.1, 1],
              transition: { duration: 2, repeat: Infinity }
            }}
          >
            {streakData.currentStreak}
          </motion.div>
          <div className="text-lg font-semibold text-slate-700">dni z rzƒôdu</div>
        </motion.div>

        {/* Progress */}
        <div className="space-y-3">
          <div className="flex justify-between text-sm font-semibold text-slate-600">
            <span>Tw√≥j cel: 30 dni</span>
            <span>{Math.round(progress)}%</span>
          </div>
          <div className="w-full bg-slate-200 rounded-full h-3 overflow-hidden">
            <motion.div 
              initial={{ width: 0 }}
              animate={{ width: `${progress}%` }}
              transition={{ duration: 1.5, ease: "easeOut" }}
              className="h-full bg-gradient-to-r from-amber-400 to-orange-500 rounded-full shadow-lg"
            />
          </div>
        </div>

        {/* Stats */}
        <div className="grid grid-cols-2 gap-4">
          <motion.div 
            className="text-center p-3 rounded-xl bg-amber-50 border border-amber-200"
            whileHover={{ scale: 1.05 }}
          >
            <div className="text-2xl font-black text-amber-600">{streakData.longestStreak}</div>
            <div className="text-xs font-semibold text-amber-700">Rekord</div>
          </motion.div>
          <motion.div 
            className="text-center p-3 rounded-xl bg-slate-100 border border-slate-200"
            whileHover={{ scale: 1.05 }}
          >
            <div className={cn(
              "text-2xl font-black",
              streakData.perfectMonth ? 'text-green-500' : 'text-slate-400'
            )}>
              {streakData.perfectMonth ? '‚úì' : '‚àí'}
            </div>
            <div className="text-xs font-semibold text-slate-600">MiesiƒÖc</div>
          </motion.div>
        </div>

        <Link href="/mood">
          <Button 
            className="w-full h-12 rounded-xl bg-gradient-to-r from-amber-500 to-orange-500 text-white shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-300"
          >
            <Plus className="mr-2 h-4 w-4" />
            Kontynuuj Seriƒô
          </Button>
        </Link>
      </CardContent>
    </Card>
  )
}

// üî• AI INSIGHTS WIDGET - GENIALNY
function AIInsightsWidget({ todayEntry, isMobile, className }: any) {
  return (
    <Card className={cn(
      className,
      "relative overflow-hidden border-0 shadow-xl bg-gradient-to-br from-white to-slate-50/80",
      "hover:shadow-2xl transition-all duration-500"
    )}>
      <CardHeader className="pb-4">
        <CardTitle className="flex items-center gap-3">
          <div className="p-2 rounded-xl shadow-lg bg-gradient-to-br from-purple-500 to-indigo-500">
            <Brain className="h-5 w-5 text-white" />
          </div>
          <div>
            <div className="text-lg font-bold text-slate-800">AI Insights</div>
            <div className="text-sm text-slate-600">Spersonalizowane wskaz√≥wki</div>
          </div>
        </CardTitle>
      </CardHeader>
      
      <CardContent className="space-y-6">
        <motion.div 
          className="text-center py-4"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.3 }}
        >
          <motion.div
            className="text-5xl mb-4"
            animate={{ 
              scale: [1, 1.2, 1],
              transition: { duration: 3, repeat: Infinity }
            }}
          >
            üß†
          </motion.div>
          <h3 className="text-xl font-bold text-slate-800 mb-2">Inteligentne Wsparcie</h3>
          <p className="text-slate-600 leading-relaxed">
            Nasza AI analizuje Tw√≥j nastr√≥j i dostarcza spersonalizowane wskaz√≥wki 
            dla lepszego samopoczucia.
          </p>
        </motion.div>

        <Link href="/ai">
          <Button 
            className="w-full h-12 rounded-xl bg-gradient-to-r from-purple-500 to-indigo-500 text-white shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-300"
          >
            <Sparkles className="mr-2 h-4 w-4" />
            Otw√≥rz Asystenta AI
          </Button>
        </Link>
      </CardContent>
    </Card>
  )
}

// üî• TOOLS WIDGET - GENIALNY
function ToolsWidget({ isMobile, className }: any) {
  const tools = [
    { icon: "üßò", label: "Oddech", description: "4-7-8 Technika", url: '/meditation?type=breathing', color: 'from-green-500 to-emerald-500' },
    { icon: "üìù", label: "Notatnik", description: "My≈õli", url: '/journal', color: 'from-blue-500 to-cyan-500' },
    { icon: "üéµ", label: "D≈∫wiƒôki", description: "Relaks", url: '/sounds', color: 'from-purple-500 to-pink-500' },
    { icon: "üí≠", label: "Medytacja", description: "5 minut", url: '/meditation', color: 'from-orange-500 to-red-500' },
  ]

  return (
    <Card className={cn(
      className,
      "relative overflow-hidden border-0 shadow-xl bg-gradient-to-br from-white to-slate-50/80",
      "hover:shadow-2xl transition-all duration-500"
    )}>
      <CardHeader className="pb-4">
        <CardTitle className="flex items-center gap-3">
          <div className="p-2 rounded-xl shadow-lg bg-gradient-to-br from-green-500 to-emerald-500">
            <Zap className="h-5 w-5 text-white" />
          </div>
          <div>
            <div className="text-lg font-bold text-slate-800">Szybkie Narzƒôdzia</div>
            <div className="text-sm text-slate-600">Natychmiastowa ulga</div>
          </div>
        </CardTitle>
      </CardHeader>
      
      <CardContent>
        <div className={cn("grid gap-3", isMobile ? "grid-cols-2" : "grid-cols-2")}>
          {tools.map((tool, index) => (
            <motion.button
              key={tool.label}
              whileHover={{ scale: 1.05, y: -2 }}
              whileTap={{ scale: 0.95 }}
              onClick={() => window.location.href = tool.url}
              className={cn(
                "flex flex-col items-center justify-center p-4 rounded-xl border-2 border-slate-200/60",
                "bg-white/80 backdrop-blur-sm hover:border-slate-300 hover:shadow-lg transition-all duration-300"
              )}
            >
              <div className={cn(
                "text-2xl mb-2 p-2 rounded-lg bg-gradient-to-br",
                tool.color
              )}>
                {tool.icon}
              </div>
              <div className="font-semibold text-slate-800 text-sm mb-1">{tool.label}</div>
              <div className="text-xs text-slate-600">{tool.description}</div>
            </motion.button>
          ))}
        </div>
      </CardContent>
    </Card>
  )
}

// üî• STATS WIDGET - GENIALNY
function StatsWidget({ user, stats, moodEntries, isMobile, className }: any) {
  const statItems = [
    { label: "Poziom", value: user?.level || 1, icon: "‚≠ê", color: "text-amber-500" },
    { label: "XP", value: user?.xp || 0, icon: "‚ö°", color: "text-yellow-500" },
    { label: "Wpisy", value: moodEntries.length, icon: "üìä", color: "text-blue-500" },
    { label: "Konsystencja", value: `${stats.consistency}%`, icon: "üéØ", color: "text-green-500" },
  ]

  return (
    <Card className={cn(
      className,
      "relative overflow-hidden border-0 shadow-xl bg-gradient-to-br from-white to-slate-50/80",
      "hover:shadow-2xl transition-all duration-500"
    )}>
      <CardHeader className="pb-4">
        <CardTitle className="flex items-center gap-3">
          <div className="p-2 rounded-xl shadow-lg bg-gradient-to-br from-slate-600 to-slate-700">
            <BarChart3 className="h-5 w-5 text-white" />
          </div>
          <div>
            <div className="text-lg font-bold text-slate-800">Twoje Statystyki</div>
            <div className="text-sm text-slate-600">Postƒôpy i wyniki</div>
          </div>
        </CardTitle>
      </CardHeader>
      
      <CardContent>
        <div className="space-y-4">
          {statItems.map((item, index) => (
            <motion.div
              key={item.label}
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: index * 0.1 }}
              className="flex items-center justify-between p-3 rounded-xl bg-white/60 backdrop-blur-sm border border-slate-200/60 hover:bg-white/80 transition-all duration-300"
            >
              <div className="flex items-center gap-3">
                <span className="text-xl">{item.icon}</span>
                <span className="font-semibold text-slate-700">{item.label}</span>
              </div>
              <span className={cn("font-black text-lg", item.color)}>
                {item.value}
              </span>
            </motion.div>
          ))}
        </div>
      </CardContent>
    </Card>
  )
}

// üî• PLACEHOLDER WIDGET
function PlaceholderWidget({ className }: any) {
  return (
    <Card className={cn(className, "border-0 shadow-xl bg-gradient-to-br from-white to-slate-50/80")}>
      <CardContent className="flex items-center justify-center h-full">
        <div className="text-center text-slate-400">
          <div className="text-4xl mb-2">üé®</div>
          <div className="font-semibold">Wkr√≥tce wiƒôcej!</div>
        </div>
      </CardContent>
    </Card>
  )
}

// üî• LOADING SCREEN - GENIALNY
function LoadingScreen() {
  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-50 via-blue-50/20 to-purple-50/10">
      <div className="text-center space-y-6">
        <motion.div
          animate={{ 
            rotate: 360,
            scale: [1, 1.2, 1],
          }}
          transition={{ 
            rotate: { duration: 2, repeat: Infinity, ease: "linear" },
            scale: { duration: 1.5, repeat: Infinity }
          }}
          className="w-20 h-20 mx-auto rounded-2xl bg-gradient-to-r from-blue-500 to-purple-500 flex items-center justify-center shadow-2xl"
        >
          <Sparkles className="h-10 w-10 text-white" />
        </motion.div>
        <div className="space-y-2">
          <h2 className="text-2xl font-bold bg-gradient-to-r from-slate-800 to-slate-600 bg-clip-text text-transparent">
            Przygotowujemy Tw√≥j Dashboard
          </h2>
          <p className="text-slate-600 text-lg">
            Tworzymy spersonalizowane do≈õwiadczenie...
          </p>
        </div>
      </div>
    </div>
  )
}

// Helper functions
function calculateStats(entries: any[]) {
  if (!entries.length) return { averageMood: 50, trend: 0, consistency: 75 }
  
  const last7Days = entries.slice(0, 7)
  const averageMood = Math.round(last7Days.reduce((sum, entry) => sum + entry.mood, 0) / last7Days.length)
  
  let trend = 0
  if (entries.length >= 2) {
    trend = entries[0].mood - entries[1].mood
  }
  
  const consistency = Math.max(0, 100 - Math.round(Math.random() * 30))
  
  return { averageMood, trend, consistency }
}

function findTodayEntry(entries: any[]) {
  if (!entries || !Array.isArray(entries)) return null
  
  const today = new Date()
  const todayString = today.toISOString().split('T')[0]
  
  return entries.find((entry) => {
    if (!entry || !entry.timestamp) return false
    
    try {
      const entryDate = new Date(entry.timestamp)
      if (isNaN(entryDate.getTime())) return false
      
      const entryDateString = entryDate.toISOString().split('T')[0]
      return entryDateString === todayString
    } catch (error) {
      return false
    }
  })
}

function calculateStreakFromEntries(entries: any[]) {
  if (!entries.length) return { currentStreak: 0, longestStreak: 0, perfectMonth: false }
  
  // Simple streak calculation for demo
  let currentStreak = 0
  const today = new Date()
  
  for (let i = 0; i < entries.length; i++) {
    const entryDate = new Date(entries[i].timestamp)
    const diffTime = today.getTime() - entryDate.getTime()
    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24))
    
    if (diffDays === i) {
      currentStreak++
    } else {
      break
    }
  }
  
  return {
    currentStreak: Math.max(currentStreak, 7), // Demo shows 7 days streak
    longestStreak: 12, // Demo value
    perfectMonth: currentStreak >= 30
  }
}import WarsawMap from '@/components/map/WarsawMap'

export default function MapPage() {
  return <WarsawMap />
}// src/app/ai/page.tsx
'use client'

import { useState, useRef, useEffect } from 'react'
import Header from '@/components/layout/header'
import { Send, Sparkles, Bot, User, Zap, Heart, Moon, Brain, Clock, Mail } from 'lucide-react'
import { cn } from '@/lib/utils'

interface Message {
  id: string
  content: string
  isUser: boolean
  timestamp: Date
}

export default function AIChatPage() {
  const [messages, setMessages] = useState<Message[]>([])
  const [inputMessage, setInputMessage] = useState('')
  const [isLoading, setIsLoading] = useState(false)
  const messagesEndRef = useRef<HTMLDivElement>(null)
  const textareaRef = useRef<HTMLTextAreaElement>(null)

  // Auto-scroll to bottom
  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })
  }, [messages])

  // Auto-focus textarea
  useEffect(() => {
    if (!isLoading) {
      textareaRef.current?.focus()
    }
  }, [isLoading])

  const sendMessage = async (message: string) => {
    if (!message.trim() || isLoading) return

    // Add user message
    const userMessage: Message = {
      id: Date.now().toString(),
      content: message,
      isUser: true,
      timestamp: new Date()
    }

    setMessages(prev => [...prev, userMessage])
    setInputMessage('')
    setIsLoading(true)

    try {
      const response = await fetch('/api/ai-chat', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ message }),
      })

      if (!response.ok) {
        throw new Error(`B≈ÇƒÖd: ${response.status}`)
      }

      const data = await response.json()

      // Add AI response
      const aiMessage: Message = {
        id: (Date.now() + 1).toString(),
        content: data.response,
        isUser: false,
        timestamp: new Date()
      }

      setMessages(prev => [...prev, aiMessage])

    } catch (error) {
      console.error('B≈ÇƒÖd czatu:', error)
      
      // Error message
      const errorMessage: Message = {
        id: (Date.now() + 1).toString(),
        content: 'Przepraszam, wystƒÖpi≈Ç b≈ÇƒÖd. Spr√≥buj ponownie za chwilƒô. üòî',
        isUser: false,
        timestamp: new Date()
      }
      
      setMessages(prev => [...prev, errorMessage])
    } finally {
      setIsLoading(false)
    }
  }

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    sendMessage(inputMessage)
  }

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault()
      handleSubmit(e)
    }
  }

  const autoResizeTextarea = () => {
    const textarea = textareaRef.current
    if (textarea) {
      textarea.style.height = 'auto'
      textarea.style.height = Math.min(textarea.scrollHeight, 120) + 'px'
    }
  }

  useEffect(() => {
    autoResizeTextarea()
  }, [inputMessage])

  const suggestions = [
    {
      icon: Brain,
      text: 'Jak radziƒá sobie ze stresem?',
      gradient: 'from-purple-500 to-pink-500'
    },
    {
      icon: Heart,
      text: 'ƒÜwiczenia mindfulness',
      gradient: 'from-green-500 to-blue-500'
    },
    {
      icon: Moon,
      text: 'Techniki relaksacyjne',
      gradient: 'from-orange-500 to-red-500'
    },
    {
      icon: Zap,
      text: 'Jak poprawiƒá koncentracjƒô?',
      gradient: 'from-blue-500 to-cyan-500'
    }
  ]

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50">
      <Header />
      
      <div className="pt-6 pb-8">
        <div className="max-w-4xl mx-auto px-4">
          {/* Enhanced Header */}
          <div className="text-center mb-8">
            <div className="relative inline-block mb-4">
              <div className="absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full blur-lg opacity-30 animate-pulse"></div>
              <div className="relative bg-gradient-to-r from-blue-500 to-purple-600 p-4 rounded-2xl shadow-2xl">
                <div className="flex items-center justify-center space-x-3">
                  <div className="relative">
                    <div className="absolute inset-0 bg-white rounded-full animate-ping opacity-20"></div>
                    <Sparkles className="h-8 w-8 text-white animate-bounce" />
                  </div>
                  <div>
                    <h1 className="text-2xl sm:text-3xl font-bold text-white">
                      Asystent Spokoju
                    </h1>
                    <p className="text-blue-100 text-sm mt-1">
                      Tw√≥j osobisty przewodnik po mindfulness
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Enhanced Chat Container */}
          <div className="bg-white/80 backdrop-blur-xl rounded-3xl shadow-2xl border border-white/20 overflow-hidden">
            {/* Messages Area */}
            <div className="h-96 overflow-y-auto p-6 space-y-6 bg-gradient-to-b from-white to-slate-50/50">
              {messages.length === 0 ? (
                <div className="text-center py-12">
                  <div className="relative inline-block mb-6">
                    <div className="absolute inset-0 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full blur-xl opacity-20"></div>
                    <div className="relative bg-gradient-to-r from-blue-500 to-purple-600 p-6 rounded-2xl">
                      <Bot className="h-12 w-12 text-white mx-auto" />
                    </div>
                  </div>
                  <h3 className="text-xl font-semibold text-gray-800 mb-2">
                    Witaj w przestrzeni spokoju! üåø
                  </h3>
                  <p className="text-gray-600 max-w-md mx-auto">
                    Jestem tutaj, aby pom√≥c Ci w podr√≥≈ºy do wewnƒôtrznej r√≥wnowagi. 
                    Zapytaj mnie o wszystko, co zwiƒÖzane z mindfulness i dobrym samopoczuciem.
                  </p>
                </div>
              ) : (
                messages.map((message) => (
                  <div
                    key={message.id}
                    className={cn(
                      "flex gap-3 group",
                      message.isUser ? 'flex-row-reverse' : 'flex-row'
                    )}
                  >
                    {/* Avatar */}
                    <div className={cn(
                      "flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center shadow-lg border",
                      message.isUser 
                        ? "bg-gradient-to-br from-blue-500 to-blue-600 text-white border-blue-200" 
                        : "bg-gradient-to-br from-purple-500 to-pink-500 text-white border-purple-200"
                    )}>
                      {message.isUser ? (
                        <User className="w-4 h-4" />
                      ) : (
                        <Bot className="w-4 h-4" />
                      )}
                    </div>

                    {/* Message Bubble */}
                    <div className={cn(
                      "max-w-[80%] rounded-2xl px-4 py-3 shadow-lg border backdrop-blur-sm",
                      "transition-all duration-300 transform group-hover:scale-[1.02]",
                      message.isUser
                        ? "bg-gradient-to-br from-blue-500 to-blue-600 text-white rounded-br-md border-blue-200"
                        : "bg-white text-gray-800 rounded-bl-md border-gray-200/50 shadow-md"
                    )}>
                      <div className="whitespace-pre-wrap text-sm sm:text-base leading-relaxed">
                        {message.content}
                      </div>
                      <div className={cn(
                        "text-xs mt-2 flex items-center gap-1",
                        message.isUser ? "text-blue-100" : "text-gray-500"
                      )}>
                        <div className={cn(
                          "w-1 h-1 rounded-full",
                          message.isUser ? "bg-blue-200" : "bg-gray-400"
                        )} />
                        {message.timestamp.toLocaleTimeString('pl-PL', { 
                          hour: '2-digit', 
                          minute: '2-digit' 
                        })}
                      </div>
                    </div>
                  </div>
                ))
              )}
              
              {/* Enhanced Loading Indicator */}
              {isLoading && (
                <div className="flex gap-3">
                  <div className="flex-shrink-0 w-8 h-8 rounded-full bg-gradient-to-br from-purple-500 to-pink-500 flex items-center justify-center shadow-lg">
                    <Bot className="w-4 h-4 text-white" />
                  </div>
                  <div className="bg-white rounded-2xl rounded-bl-md px-4 py-3 shadow-lg border border-gray-200/50">
                    <div className="flex space-x-2 items-center">
                      <div className="flex space-x-1">
                        <div className="w-2 h-2 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full animate-bounce"></div>
                        <div className="w-2 h-2 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                        <div className="w-2 h-2 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                      </div>
                      <span className="text-sm text-gray-600 ml-2">Piszƒô odpowied≈∫...</span>
                    </div>
                  </div>
                </div>
              )}
              
              <div ref={messagesEndRef} />
            </div>

            {/* Enhanced Input Area */}
            <div className="border-t border-gray-200/50 bg-white/50 backdrop-blur-sm p-6">
              <form onSubmit={handleSubmit} className="flex gap-4 items-end">
                <div className="flex-1 relative">
                  <div className="absolute inset-0 bg-gradient-to-r from-blue-500/5 to-purple-500/5 rounded-2xl blur-sm"></div>
                  <textarea
                    ref={textareaRef}
                    value={inputMessage}
                    onChange={(e) => setInputMessage(e.target.value)}
                    onKeyPress={handleKeyPress}
                    placeholder="Napisz swojƒÖ wiadomo≈õƒá... üí´"
                    className="relative w-full px-4 py-3 bg-white/80 border border-gray-300/50 rounded-2xl focus:ring-2 focus:ring-blue-500/20 focus:border-blue-500 resize-none text-sm sm:text-base backdrop-blur-sm shadow-lg transition-all duration-300"
                    rows={1}
                    disabled={isLoading}
                  />
                </div>
                <button
                  type="submit"
                  disabled={isLoading || !inputMessage.trim()}
                  className={cn(
                    "px-6 py-3 rounded-2xl font-semibold transition-all duration-300 transform shadow-lg border",
                    "focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none",
                    "bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white",
                    "hover:scale-105 active:scale-95 flex items-center gap-2"
                  )}
                >
                  {isLoading ? (
                    <div className="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin" />
                  ) : (
                    <>
                      <Send className="w-4 h-4" />
                      <span>Wy≈õlij</span>
                    </>
                  )}
                </button>
              </form>
            </div>
          </div>

          {/* Enhanced Quick Suggestions */}
          <div className="mt-8">
            <h3 className="text-center text-gray-600 font-medium mb-4 flex items-center justify-center gap-2">
              <Zap className="w-4 h-4 text-yellow-500" />
              Szybkie sugestie
            </h3>
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3">
              {suggestions.map((suggestion, index) => (
                <button
                  key={index}
                  onClick={() => sendMessage(suggestion.text)}
                  disabled={isLoading}
                  className={cn(
                    "group relative p-4 rounded-2xl text-left transition-all duration-300 transform hover:scale-105",
                    "bg-white/80 backdrop-blur-sm border border-gray-200/50 shadow-lg",
                    "hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
                  )}
                >
                  {/* Gradient Border Effect */}
                  <div className={cn(
                    "absolute inset-0 rounded-2xl bg-gradient-to-r opacity-0 group-hover:opacity-100 transition-opacity duration-300",
                    suggestion.gradient
                  )}></div>
                  
                  <div className="relative z-10">
                    <div className={cn(
                      "w-10 h-10 rounded-xl bg-gradient-to-r mb-3 flex items-center justify-center",
                      suggestion.gradient
                    )}>
                      <suggestion.icon className="w-5 h-5 text-white" />
                    </div>
                    <span className="text-sm font-medium text-gray-800 group-hover:text-gray-900">
                      {suggestion.text}
                    </span>
                  </div>
                </button>
              ))}
            </div>
          </div>

          {/* Features Grid */}
          <div className="mt-12 grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
            <div className="bg-white/50 backdrop-blur-sm rounded-2xl p-6 border border-gray-200/50 shadow-lg">
              <div className="w-12 h-12 bg-gradient-to-r from-green-400 to-blue-500 rounded-xl flex items-center justify-center mx-auto mb-4">
                <Brain className="w-6 h-6 text-white" />
              </div>
              <h4 className="font-semibold text-gray-800 mb-2">Wsparcie 24/7</h4>
              <p className="text-gray-600 text-sm">Zawsze dostƒôpny asystent gotowy pom√≥c</p>
            </div>
            
            <div className="bg-white/50 backdrop-blur-sm rounded-2xl p-6 border border-gray-200/50 shadow-lg">
              <div className="w-12 h-12 bg-gradient-to-r from-purple-400 to-pink-500 rounded-xl flex items-center justify-center mx-auto mb-4">
                <Heart className="w-6 h-6 text-white" />
              </div>
              <h4 className="font-semibold text-gray-800 mb-2">Personalizacja</h4>
              <p className="text-gray-600 text-sm">Dopasowane do Twoich potrzeb rozmowy</p>
            </div>
            
            <div className="bg-white/50 backdrop-blur-sm rounded-2xl p-6 border border-gray-200/50 shadow-lg">
              <div className="w-12 h-12 bg-gradient-to-r from-orange-400 to-red-500 rounded-xl flex items-center justify-center mx-auto mb-4">
                <Moon className="w-6 h-6 text-white" />
              </div>
              <h4 className="font-semibold text-gray-800 mb-2">Prywatno≈õƒá</h4>
              <p className="text-gray-600 text-sm">Twoje rozmowy sƒÖ bezpieczne i poufne</p>
            </div>
          </div>

          {/* Limit Information */}
          <div className="mt-8 bg-gradient-to-r from-amber-50 to-orange-50 border border-amber-200 rounded-2xl p-6 text-center shadow-lg">
            <div className="flex items-center justify-center gap-3 mb-3">
              <div className="w-10 h-10 bg-gradient-to-r from-amber-400 to-orange-500 rounded-xl flex items-center justify-center">
                <Clock className="w-5 h-5 text-white" />
              </div>
              <h3 className="text-lg font-semibold text-amber-800">
                Informacja o dostƒôpie
              </h3>
            </div>
            
            <div className="space-y-3 text-amber-700">
              <p className="text-sm leading-relaxed">
                <strong>Asystent AI ma tymczasowe ograniczenie dostƒôpu</strong> ze wzglƒôdu na wysokie koszty utrzymania.
              </p>
              
              <div className="bg-amber-100/50 rounded-lg p-3 border border-amber-300/50">
                <p className="text-sm font-medium">
                  üïõ <strong>Limit zostanie zresetowany ka≈ºdego dnia o 00:00</strong>
                </p>
              </div>

              <div className="bg-white/50 rounded-lg p-4 border border-amber-200 mt-4">
                <div className="flex items-center justify-center gap-2 mb-2">
                  <Mail className="w-4 h-4 text-amber-600" />
                  <span className="text-sm font-semibold text-amber-800">
                    Podoba Ci siƒô ta funkcja?
                  </span>
                </div>
                <p className="text-sm text-amber-700 mb-3">
                  Chcesz, ≈ºeby asystent AI by≈Ç bardziej dostƒôpny?
                </p>
                <a 
                  href="mailto:spokojwglowie.kontakt@gmail.com?subject=Wsparcie dla Asystenta AI&body=Chcƒô wesprzeƒá rozw√≥j Asystenta AI i zwiƒôkszenie jego dostƒôpno≈õci!"
                  className="inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-amber-500 to-orange-500 text-white rounded-xl font-medium text-sm hover:from-amber-600 hover:to-orange-600 transition-all duration-300 transform hover:scale-105 shadow-md"
                >
                  <Mail className="w-4 h-4" />
                  Napisz do nas!
                </a>
                <p className="text-xs text-amber-600 mt-2">
                  spokojwglowie.kontakt@gmail.com
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import './globals.css'
import { AuthProvider } from '@/components/providers/auth-provider'

const inter = Inter({ 
  subsets: ['latin'],
  display: 'swap',
})

export const metadata: Metadata = {
  title: 'Spok√≥j w g≈Çowie',
  description: 'Architektura Uwa≈ºno≈õci',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="pl">
      <body className={inter.className}>
        {/* DODAJEMY AUTH PROVIDER */}
        <AuthProvider>
          <div className="min-h-screen bg-gray-50">
            {children}
          </div>
        </AuthProvider>
      </body>
    </html>
  )
}// src/app/api/ai-chat/route.ts - FINALNA WERSJA
import { NextResponse } from 'next/server'

const GROQ_API_URL = 'https://api.groq.com/openai/v1/chat/completions'
const GROQ_MODEL = 'llama-3.1-8b-instant' // SZYBSZY I DARMOWY

export async function POST(request: Request) {
  try {
    const { message } = await request.json()
    
    if (!message) {
      return NextResponse.json({ error: 'Brak wiadomo≈õci' }, { status: 400 })
    }

    // üî• GROQ - 100% DARMOWE BEZ KARTY
    const aiResponse = await callGroqAI(message)
    
    return NextResponse.json({ 
      response: aiResponse,
      model: GROQ_MODEL,
      source: 'groq_ai'
    })

  } catch (error: any) {
    console.error('AI Error:', error)
    return NextResponse.json(
      { error: 'AI tymczasowo niedostƒôpny' },
      { status: 500 }
    )
  }
}

async function callGroqAI(userMessage: string): Promise<string> {
  const response = await fetch(GROQ_API_URL, {
    method: 'POST',
    headers: {
      'Authorization': `Bearer ${process.env.GROQ_API_KEY}`,
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      model: GROQ_MODEL,
      messages: [
        {
          role: "system",
          content: "Jeste≈õ asystentem wellbeing. Odpowiadaj po polsku, wspierajaco i naturalnie."
        },
        {
          role: "user", 
          content: userMessage
        }
      ],
      temperature: 0.7,
      max_tokens: 500
    })
  })

  if (!response.ok) {
    throw new Error(`Groq API error: ${response.status}`)
  }

  const data = await response.json()
  return data.choices[0]?.message?.content || "Przepraszam, nie mogƒô teraz odpowiedzieƒá."
}

export async function GET() {
  return NextResponse.json({
    status: 'AI Chat API dzia≈Ça!',
    model: GROQ_MODEL,
    provider: 'Groq Cloud - 100% darmowe'
  })
}// src/app/api/ai-chat/route.ts

import { NextResponse } from 'next/server'

const OPENROUTER_API_URL = 'https://openrouter.ai/api/v1/chat/completions'

const ACTIVE_MODEL = 'meta-llama/llama-3.3-70b-instruct:free'

export async function POST(request: Request) {

console.log('üîµ API Route: Rozpoczynam...')

try {

const body = await request.json()

const { message } = body

console.log('üì® Odebrana wiadomo≈õƒá:', message)

if (!message) {

return NextResponse.json({ error: 'Brak wiadomo≈õci' }, { status: 400 })

}

console.log('üöÄ Wywo≈Çujƒô OpenRouter...')

const aiResponse = await callOpenRouterAI(message)

console.log('‚úÖ Sukces!')

return NextResponse.json({

response: aiResponse,

timestamp: new Date().toISOString(),

model: ACTIVE_MODEL,

source: 'openrouter_ai'

})

} catch (error: any) {

console.error('üí• CRITICAL ERROR:', error)

return NextResponse.json(

{

error: 'Internal Server Error',

message: error.message

},

{ status: 500 }

)

}

}

async function callOpenRouterAI(userMessage: string): Promise<string> {

console.log('üîó ≈ÅƒÖczƒô z OpenRouter...')

const requestBody = {

model: ACTIVE_MODEL,

messages: [

{

role: 'system',

content: `Jeste≈õ asystentem wellbeing w aplikacji dla m≈Çodzie≈ºy. Odpowiadaj po polsku, przyja≈∫nie i wspierajaco. Mow naturalnie.`

},

{

role: 'user',

content: userMessage

}

],

max_tokens: 500,

temperature: 0.7

}

// üî• WA≈ªNE: U≈ºywamy tylko ASCII w headers!

const response = await fetch(OPENROUTER_API_URL, {

method: 'POST',

headers: {

'Authorization': `Bearer ${process.env.OPENROUTER_API_KEY}`,

'Content-Type': 'application/json',

'HTTP-Referer': 'https://spokojwglowie.pl', // TYLKO ASCII

'X-Title': 'Spokoj w Glowie - Wellbeing App' // BEZ POLSKICH ZNAK√ìW

},

body: JSON.stringify(requestBody)

})

console.log('üì• OpenRouter status:', response.status)

if (!response.ok) {

const errorText = await response.text()

console.error('‚ùå OpenRouter error:', errorText)

throw new Error(`OpenRouter API error: ${response.status}`)

}

const data = await response.json()

console.log('üìÑ OpenRouter response received')

const responseText = data.choices[0]?.message?.content

if (!responseText) {

console.error('‚ùå Brak tre≈õci w odpowiedzi:', data)

throw new Error('No response content from AI')

}

return responseText

}

export async function GET() {

return NextResponse.json({

status: 'API dzia≈Ça!',

model: ACTIVE_MODEL

})

}'use client'

import { useState, useEffect } from 'react'
import { auth, db } from '@/lib/firebase'
import { onAuthStateChanged } from 'firebase/auth'
import { doc, onSnapshot } from 'firebase/firestore'
import userService from '@/lib/user-service'
import Header from '@/components/layout/header'
import { MoodEntryForm } from '@/components/mood-entry-form'
import { AIMoodInsights } from '@/components/ai-mood-insights'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { ArrowLeft, Calendar, BarChart3, ArrowRight, Heart, Edit, Sparkles, Target, TrendingUp, Zap, Brain } from 'lucide-react'
import { cn } from '@/lib/utils'
import Link from 'next/link'

interface MoodEntry {
  id: string
  mood: number
  note?: string
  timestamp: Date
  date: string
}

type MoodView = 'mood-selection' | 'note-entry' | 'ai-insights' | 'mood-review'

export default function MoodPage() {
  const [user, setUser] = useState<any>(null)
  const [userData, setUserData] = useState<any>(null)
  const [moodEntries, setMoodEntries] = useState<MoodEntry[]>([])
  const [currentMood, setCurrentMood] = useState(50)
  const [currentView, setCurrentView] = useState<MoodView>('mood-selection')
  const [isLoading, setIsLoading] = useState(false)
  const [streakData, setStreakData] = useState({ currentStreak: 0, longestStreak: 0 })

  const calculateStreakFromEntries = (entries: MoodEntry[]): { currentStreak: number; longestStreak: number } => {
    if (entries.length === 0) {
      return { currentStreak: 0, longestStreak: 0 }
    }

    try {
      const sortedEntries = [...entries].sort((a, b) => 
        new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()
      )

      let currentStreak = 0
      let longestStreak = 0
      
      const today = new Date()
      today.setHours(0, 0, 0, 0)
      
      const hasTodayEntry = sortedEntries.some(entry => {
        const entryDate = new Date(entry.timestamp)
        entryDate.setHours(0, 0, 0, 0)
        return entryDate.getTime() === today.getTime()
      })

      const yesterday = new Date(today)
      yesterday.setDate(yesterday.getDate() - 1)
      
      const hasYesterdayEntry = sortedEntries.some(entry => {
        const entryDate = new Date(entry.timestamp)
        entryDate.setHours(0, 0, 0, 0)
        return entryDate.getTime() === yesterday.getTime()
      })

      if (hasTodayEntry) {
        currentStreak = 1
        
        let checkDate = new Date(yesterday)
        let streakDays = 1
        
        while (true) {
          const hasEntryOnDate = sortedEntries.some(entry => {
            const entryDate = new Date(entry.timestamp)
            entryDate.setHours(0, 0, 0, 0)
            return entryDate.getTime() === checkDate.getTime()
          })
          
          if (hasEntryOnDate) {
            streakDays++
            checkDate.setDate(checkDate.getDate() - 1)
          } else {
            break
          }
        }
        
        currentStreak = streakDays
      } else if (hasYesterdayEntry) {
        currentStreak = 1
      }

      longestStreak = Math.max(longestStreak, currentStreak)

      return {
        currentStreak,
        longestStreak
      }
    } catch (error) {
      console.error('B≈ÇƒÖd obliczania streak:', error)
      return { currentStreak: 0, longestStreak: 0 }
    }
  }

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, async (usr) => {
      setUser(usr)
      if (usr) {
        const userRef = doc(db, 'users', usr.uid)
        const unsub = onSnapshot(userRef, async (docSnap) => {
          if (docSnap.exists()) {
            const data = docSnap.data()
            setUserData(data)

            const entries = data.moodEntries?.map((e: any) => ({
              id: e.timestamp?.toDate().getTime().toString() || Date.now().toString(),
              mood: e.mood,
              note: e.note,
              timestamp: e.timestamp?.toDate() || new Date(),
              date: e.date
            })) || []

            setMoodEntries(entries)

            const todayEntry = entries.find((e: any) => isToday(new Date(e.timestamp)))
            if (todayEntry) {
              setCurrentMood(todayEntry.mood)
              setCurrentView('mood-review')
            } else {
              setCurrentView('mood-selection')
            }

            const streak = calculateStreakFromEntries(entries)
            setStreakData(streak)
          }
        })
        return () => unsub()
      }
    })
    return () => unsubscribe()
  }, [])

  const handleSaveMood = async (mood: number) => {
    if (!user) return
    setIsLoading(true)
    
    try {
      await userService.saveMood(user.uid, mood)
      setCurrentMood(mood)
      setCurrentView('mood-review')
    } catch (error) {
      console.error('B≈ÇƒÖd zapisu nastroju:', error)
      alert('B≈ÇƒÖd zapisu nastroju. Spr√≥buj ponownie.')
    } finally {
      setIsLoading(false)
    }
  }

  const handleSaveWithNote = async (data: { mood: number; note?: string }) => {
    if (!user) return
    setIsLoading(true)
    
    try {
      await userService.saveMoodWithNote(user.uid, data.mood, data.note)
      setCurrentMood(data.mood)
      setCurrentView('mood-review')
    } catch (error) {
      console.error('B≈ÇƒÖd zapisu:', error)
      alert('B≈ÇƒÖd zapisu. Spr√≥buj ponownie.')
    } finally {
      setIsLoading(false)
    }
  }

  const handleAddNote = () => {
    setCurrentView('note-entry')
  }

  const handleViewNote = () => {
    setCurrentView('note-entry')
  }

  const todayEntry = moodEntries.find(entry => isToday(new Date(entry.timestamp)))
  const averageMood = calculateAverageMood(moodEntries)
  const moodTrend = calculateMoodTrend(moodEntries)
  const consistency = calculateConsistency(moodEntries)

  if (!user) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-purple-100">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <p className="text-gray-600">≈Åadowanie...</p>
        </div>
      </div>
    )
  }

  return (
    <main className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-100">
      <Header />
      
      <div className="px-4 py-8">
        <div className="container mx-auto max-w-6xl">
          <div className="flex items-center justify-between mb-8 p-4 rounded-2xl bg-white/95 backdrop-blur-sm border border-white/20 shadow-sm">
            <Link href="/dashboard">
              <Button variant="outline" className="border-gray-200 bg-white/80 hover:bg-white hover:border-gray-300 px-3 sm:px-4">
                <ArrowLeft className="h-4 w-4 mr-1 sm:mr-2" />
                <span className="text-sm sm:text-base">Powr√≥t</span>
              </Button>
            </Link>
            
            <div className="text-center flex-1 mx-2">
              <h1 className="text-xl sm:text-2xl md:text-3xl font-light text-gray-900 leading-tight">
                {currentView === 'mood-selection' ? 'Jak siƒô czujesz?' : 
                 currentView === 'note-entry' ? 'Dodaj notatkƒô' :
                 currentView === 'ai-insights' ? 'AI Insights' :
                 'Tw√≥j nastr√≥j'}
              </h1>
            </div>
            
            <div className="w-16 sm:w-24"></div>
          </div>

          <div className="space-y-8">
            {currentView === 'mood-selection' && (
              <div className="mt-12">
                <SimpleMoodPicker
                  value={currentMood}
                  onValueChange={setCurrentMood}
                  moodEntries={moodEntries}
                  streak={streakData.currentStreak}
                  trend={moodTrend}
                  consistency={consistency}
                  averageMood={averageMood}
                  level={userData?.level || 1}
                  onSaveMood={handleSaveMood}
                  onAddNote={handleAddNote}
                  todayEntry={todayEntry}
                />
              </div>
            )}

            {currentView === 'mood-review' && (
              <MoodReview
                currentMood={currentMood}
                todayEntry={todayEntry}
                onEditNote={handleViewNote}
                onViewAI={() => setCurrentView('ai-insights')}
              />
            )}

            {currentView === 'note-entry' && (
              <div className="w-full max-w-2xl mx-auto">
                <MoodEntryForm
                  currentMood={currentMood}
                  onSave={handleSaveWithNote}
                  isLoading={isLoading}
                  initialNote={todayEntry?.note}
                />
                <Button
                  onClick={() => setCurrentView('mood-review')}
                  variant="outline"
                  className="w-full mt-4 border-gray-200 bg-white/80 hover:bg-white hover:border-gray-300"
                >
                  ‚Üê Wr√≥ƒá do przeglƒÖdu
                </Button>
              </div>
            )}

            {currentView === 'ai-insights' && (
              <AIMoodInsights
                currentMood={currentMood}
                moodEntries={moodEntries}
                streak={streakData.currentStreak}
                trend={moodTrend}
                consistency={consistency}
                averageMood={averageMood}
                level={userData?.level || 1}
                onBack={() => setCurrentView('mood-review')}
              />
            )}

            {/* POPRAWIONA SEKCJA Z WYKRESEM I HISTORIƒÑ */}
            {(currentView === 'mood-review' || currentView === 'ai-insights' || todayEntry) && (
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mt-12">
                {/* NOWY PIƒòKNIEJSZY WYKRES */}
                <Card className="border-0 shadow-lg bg-white/95 backdrop-blur-sm border border-white/20">
                  <CardHeader className="pb-4">
                    <CardTitle className="flex items-center gap-2 text-base sm:text-lg font-semibold text-gray-900">
                      <BarChart3 className="h-4 w-4 sm:h-5 sm:w-5 text-blue-600" />
                      Ostatnie 7 dni
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="pt-0">
                    <BeautifulMoodChart moodEntries={moodEntries} />
                  </CardContent>
                </Card>

                {/* OSTATNIE WPISY - TERAZ TYLKO 3 */}
                <Card className="border-0 shadow-lg bg-white/95 backdrop-blur-sm border border-white/20">
                  <CardHeader className="pb-4">
                    <CardTitle className="flex items-center gap-2 text-base sm:text-lg font-semibold text-gray-900">
                      <Calendar className="h-4 w-4 sm:h-5 sm:w-5 text-blue-600" />
                      Ostatnie wpisy
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="pt-0">
                    {moodEntries.length > 0 ? (
                      <div className="space-y-3">
                        {/* TYLKO 3 OSTATNIE WPISY */}
                        {moodEntries.slice(0, 3).map(entry => (
                          <div key={entry.id} className="flex items-center justify-between p-4 border border-gray-100 rounded-xl bg-white shadow-sm hover:shadow-md transition-all duration-200">
                            <div className="flex items-center gap-3">
                              <div className={cn(
                                "w-12 h-12 rounded-full flex items-center justify-center text-white font-semibold text-sm shadow-md",
                                getMoodColorClass(entry.mood)
                              )}>
                                {entry.mood}%
                              </div>
                              <div className="min-w-0 flex-1">
                                <div className="font-semibold text-gray-900 text-sm">
                                  {formatDate(entry.timestamp)}
                                </div>
                                {/* PRAWDZIWA GODZINA WPISU */}
                                <div className="text-xs text-gray-500 mt-1">
                                  {formatExactTime(entry.timestamp)}
                                </div>
                                {entry.note && (
                                  <div className="text-sm text-gray-600 line-clamp-1 mt-2">
                                    {entry.note}
                                  </div>
                                )}
                              </div>
                            </div>
                            <div className="text-2xl">
                              {getMoodEmoji(entry.mood)}
                            </div>
                          </div>
                        ))}
                        
                        <div className="pt-4">
                          <div className="flex items-center justify-center gap-2 p-3 bg-blue-50 rounded-xl border border-blue-100 text-blue-700 hover:text-blue-800 transition-colors cursor-not-allowed opacity-50">
                            <span className="text-sm font-medium">Pe≈Çna historia (wkr√≥tce)</span>
                            <ArrowRight className="h-4 w-4" />
                          </div>
                          <p className="text-xs text-gray-500 text-center mt-2">
                            Pe≈Çna historia nastroj√≥w bƒôdzie dostƒôpna wkr√≥tce
                          </p>
                        </div>
                      </div>
                    ) : (
                      <div className="text-center py-8">
                        <Heart className="h-16 w-16 text-gray-300 mx-auto mb-4" />
                        <p className="text-gray-600 font-medium">Brak zapisanych nastroj√≥w</p>
                        <p className="text-gray-500 text-sm mt-2">
                          Zacznij ≈õledziƒá sw√≥j nastr√≥j powy≈ºej
                        </p>
                      </div>
                    )}
                  </CardContent>
                </Card>
              </div>
            )}
          </div>
        </div>
      </div>
    </main>
  )
}

/* ------------------ NOWY PIƒòKNIEJSZY WYKRES ------------------ */
function BeautifulMoodChart({ moodEntries }: { moodEntries: MoodEntry[] }) {
  const getLast7Days = () => {
    const days = []
    for (let i = 6; i >= 0; i--) {
      const date = new Date()
      date.setDate(date.getDate() - i)
      days.push({
        date,
        label: date.toLocaleDateString('pl-PL', { weekday: 'short' })
      })
    }
    return days
  }

  const chartData = getLast7Days().map(day => {
    const entry = moodEntries.find(e => 
      new Date(e.timestamp).toDateString() === day.date.toDateString()
    )
    return {
      date: day.label,
      mood: entry ? entry.mood : null,
      fullDate: day.date
    }
  })

  const getMoodColor = (mood: number | null) => {
    if (mood === null) return '#e5e7eb'
    if (mood <= 20) return '#6b7280'
    if (mood <= 40) return '#3b82f6'
    if (mood <= 60) return '#10b981'
    if (mood <= 80) return '#8b5cf6'
    return '#f43f5e'
  }

  const getMoodHeight = (mood: number | null) => {
    if (mood === null) return '10%'
    return `${mood}%`
  }

  return (
    <div className="w-full h-48 sm:h-56">
      <div className="flex items-end justify-between h-full space-x-1 sm:space-x-2">
        {chartData.map((day, index) => (
          <div key={index} className="flex flex-col items-center flex-1 space-y-2">
            <div className="relative w-full flex justify-center">
              <div 
                className={cn(
                  "w-3/4 sm:w-10/12 rounded-t-lg transition-all duration-500 ease-out",
                  day.mood === null ? "bg-gray-200" : "shadow-lg"
                )}
                style={{ 
                  height: getMoodHeight(day.mood),
                  backgroundColor: getMoodColor(day.mood)
                }}
              >
                {day.mood !== null && (
                  <div className="absolute -top-6 left-1/2 transform -translate-x-1/2 text-xs font-bold text-gray-700">
                    {day.mood}%
                  </div>
                )}
              </div>
            </div>
            <div className="text-xs text-gray-600 font-medium text-center">
              {day.date}
            </div>
            <div className="text-xs text-gray-400">
              {day.fullDate.getDate()}/{day.fullDate.getMonth() + 1}
            </div>
          </div>
        ))}
      </div>
      
      {/* Linia trendu */}
      <div className="mt-6 pt-4 border-t border-gray-200">
        <div className="flex justify-between items-center text-xs text-gray-600">
          <span>Niski nastr√≥j</span>
          <span>Wysoki nastr√≥j</span>
        </div>
        <div className="w-full h-1 bg-gradient-to-r from-gray-400 via-blue-400 via-green-400 via-purple-400 to-rose-400 rounded-full mt-1"></div>
      </div>
    </div>
  )
}

/* ------------------ PROSTY MOOD PICKER ------------------ */
function SimpleMoodPicker({ 
  value, 
  onValueChange, 
  onSaveMood, 
  onAddNote, 
  streak,
  todayEntry 
}: any) {
  const moods = [
    { value: 20, emoji: 'üòî', label: 'Bardzo niski', color: 'bg-gray-500' },
    { value: 40, emoji: 'üòê', label: 'Niski', color: 'bg-blue-500' },
    { value: 60, emoji: 'üôÇ', label: 'Neutralny', color: 'bg-green-500' },
    { value: 80, emoji: 'üòä', label: 'Wysoki', color: 'bg-purple-500' },
    { value: 100, emoji: 'ü§©', label: 'Bardzo wysoki', color: 'bg-rose-500' }
  ]

  return (
    <div className="w-full max-w-4xl mx-auto">
      <Card className="border-0 shadow-2xl bg-white/95 backdrop-blur-sm border border-white/20">
        <CardContent className="p-8">
          {/* Stats Header */}
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-8">
            <div className="text-center p-4 bg-gradient-to-br from-blue-50 to-blue-100 rounded-2xl border border-blue-200">
              <div className="flex items-center justify-center gap-1 mb-1">
                <Zap className="h-4 w-4 text-blue-600" />
                <div className="font-bold text-blue-600 text-xl">{streak}</div>
              </div>
              <div className="text-sm text-blue-600">dni streak</div>
            </div>
            <div className="text-center p-4 bg-gradient-to-br from-green-50 to-green-100 rounded-2xl border border-green-200">
              <div className="flex items-center justify-center gap-1 mb-1">
                <Target className="h-4 w-4 text-green-600" />
                <div className="font-bold text-green-600 text-xl">{todayEntry ? 'Dzisiaj' : 'Brak'}</div>
              </div>
              <div className="text-sm text-green-600">dzisiejszy wpis</div>
            </div>
            <div className="text-center p-4 bg-gradient-to-br from-purple-50 to-purple-100 rounded-2xl border border-purple-200">
              <div className="flex items-center justify-center gap-1 mb-1">
                <TrendingUp className="h-4 w-4 text-purple-600" />
                <div className="font-bold text-purple-600 text-xl">{value}%</div>
              </div>
              <div className="text-sm text-purple-600">tw√≥j nastr√≥j</div>
            </div>
            <div className="text-center p-4 bg-gradient-to-br from-amber-50 to-amber-100 rounded-2xl border border-amber-200">
              <div className="flex items-center justify-center gap-1 mb-1">
                <Sparkles className="h-4 w-4 text-amber-600" />
                <div className="font-bold text-amber-600 text-xl">Poziom 1</div>
              </div>
              <div className="text-sm text-amber-600">twoje konto</div>
            </div>
          </div>

          {/* Mood Selection */}
          <div className="text-center mb-8">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">
              Jak siƒô czujesz dzisiaj?
            </h2>
            
            {/* Mood Slider */}
            <div className="mb-8">
              <input
                type="range"
                min="0"
                max="100"
                value={value}
                onChange={(e) => onValueChange(Number(e.target.value))}
                className="w-full h-3 bg-gradient-to-r from-gray-400 via-blue-400 via-green-400 via-purple-400 to-rose-400 rounded-lg appearance-none cursor-pointer [&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:h-6 [&::-webkit-slider-thumb]:w-6 [&::-webkit-slider-thumb]:rounded-full [&::-webkit-slider-thumb]:bg-white [&::-webkit-slider-thumb]:border-4 [&::-webkit-slider-thumb]:border-gray-300 [&::-webkit-slider-thumb]:shadow-lg"
              />
              <div className="flex justify-between mt-2 text-sm text-gray-600">
                <span>Bardzo niski</span>
                <span>Bardzo wysoki</span>
              </div>
            </div>

            {/* Mood Buttons */}
            <div className="grid grid-cols-5 gap-3 mb-8">
              {moods.map((mood) => (
                <button
                  key={mood.value}
                  onClick={() => onValueChange(mood.value)}
                  className={cn(
                    "flex flex-col items-center p-4 rounded-2xl border-2 transition-all duration-300",
                    value === mood.value
                      ? `${mood.color} border-white text-white shadow-lg scale-105`
                      : "bg-white border-gray-200 text-gray-700 hover:border-gray-300 hover:shadow-md"
                  )}
                >
                  <span className="text-2xl mb-2">{mood.emoji}</span>
                  <span className="text-sm font-medium">{mood.label}</span>
                  <span className="text-xs opacity-75 mt-1">{mood.value}%</span>
                </button>
              ))}
            </div>

            {/* Current Mood Display */}
            <div className="mb-8">
              <div className={cn(
                "inline-flex items-center gap-4 px-6 py-4 rounded-2xl text-white font-bold text-xl shadow-lg",
                getMoodBackgroundClass(value)
              )}>
                <span className="text-2xl">{getMoodEmoji(value)}</span>
                <span>{value}% - {getMoodLabel(value)}</span>
              </div>
              <p className="text-gray-600 mt-3 text-lg">
                {getMoodDescription(value)}
              </p>
            </div>

            {/* Action Buttons */}
            <div className="flex flex-col sm:flex-row gap-4">
              <Button
                onClick={() => onSaveMood(value)}
                className="flex-1 py-4 text-lg font-semibold rounded-xl bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white shadow-lg hover:shadow-xl transition-all duration-300"
                size="lg"
              >
                <Sparkles className="h-5 w-5 mr-2" />
                Zapisz nastr√≥j
              </Button>
              
              <Button
                onClick={onAddNote}
                variant="outline"
                className="flex-1 py-4 text-lg font-semibold rounded-xl border-2 border-gray-300 bg-white text-gray-700 hover:bg-gray-50 hover:border-gray-400 transition-all duration-300"
                size="lg"
              >
                <Edit className="h-5 w-5 mr-2" />
                Dodaj notatkƒô
              </Button>
            </div>

            {todayEntry && (
              <p className="text-sm text-gray-500 mt-4">
                ‚úÖ Masz ju≈º zapisany nastr√≥j na dzisiaj ({todayEntry.mood}%)
              </p>
            )}
          </div>
        </CardContent>
      </Card>
    </div>
  )
}

/* ------------------ PRZEGLƒÑD NASTROJU ------------------ */
function MoodReview({ currentMood, todayEntry, onEditNote, onViewAI }: any) {
  return (
    <div className="w-full max-w-2xl mx-auto">
      <Card className="border-0 shadow-xl bg-white/95 backdrop-blur-sm border border-white/20">
        <CardContent className="p-8">
          <div className="text-center space-y-8">
            <div className="flex flex-col items-center space-y-6">
              <div className="text-8xl mb-4 mt-8">
                {getMoodEmoji(currentMood)}
              </div>
              
              <div className={cn(
                "px-6 py-3 rounded-2xl font-bold text-2xl",
                getMoodBackgroundClass(currentMood),
                "text-white shadow-lg"
              )}>
                {currentMood}%
              </div>
              
              <div className="space-y-3">
                <h3 className="text-3xl font-bold text-gray-900">
                  {getMoodLabel(currentMood)}
                </h3>
                <p className="text-gray-600 text-lg font-medium">
                  {getMoodDescription(currentMood)}
                </p>
              </div>
            </div>

            {todayEntry?.note && (
              <div className="bg-blue-50 rounded-2xl p-6 border border-blue-200 shadow-sm">
                <h4 className="font-bold text-blue-900 mb-4 flex items-center gap-3 text-lg">
                  <Edit className="h-5 w-5" />
                  Twoja notatka
                </h4>
                <p className="text-blue-800 text-base leading-relaxed font-medium">
                  {todayEntry.note}
                </p>
              </div>
            )}

            <div className="flex flex-col sm:flex-row gap-4 pt-8">
              <Button
                onClick={onEditNote}
                variant={todayEntry?.note ? "outline" : "default"}
                className={cn(
                  "flex-1 py-4 text-base font-semibold rounded-xl",
                  todayEntry?.note 
                    ? "border-2 border-gray-300 bg-white text-gray-700 hover:bg-gray-50 hover:border-gray-400" 
                    : "bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white shadow-lg hover:shadow-xl"
                )}
              >
                <Edit className="h-5 w-5 mr-2" />
                {todayEntry?.note ? 'Edytuj notatkƒô' : 'Dodaj notatkƒô'}
              </Button>
              
              <Button
                onClick={onViewAI}
                className="flex-1 py-4 text-base font-semibold rounded-xl bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white shadow-lg hover:shadow-xl"
              >
                <Brain className="h-5 w-5 mr-2" />
                AI Insights
              </Button>
            </div>

            <p className="text-sm text-gray-500 text-center pt-6 font-medium">
              {todayEntry?.timestamp ? (
                <>Nastr√≥j zapisany {formatTimestamp(todayEntry.timestamp)}</>
              ) : (
                <>Nastr√≥j zapisany dzisiaj o {new Date().toLocaleTimeString('pl-PL', { 
                  hour: '2-digit', 
                  minute: '2-digit' 
                })}</>
              )}
            </p>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}

/* ------------------ FUNKCJE POMOCNICZE ------------------ */
function isToday(date: Date) {
  const today = new Date()
  return date.toDateString() === today.toDateString()
}

function calculateAverageMood(entries: MoodEntry[]): number {
  if (!entries.length) return 0
  const last7 = entries.slice(0, 7)
  return Math.round(last7.reduce((sum, e) => sum + e.mood, 0) / last7.length)
}

function calculateMoodTrend(entries: MoodEntry[]): number {
  if (entries.length < 2) return 0
  const last7 = entries.slice(0, 7)
  if (last7.length < 2) return 0
  return Math.round(last7[0].mood - last7[1].mood)
}

function calculateConsistency(entries: MoodEntry[]): number {
  if (entries.length < 2) return 0
  const last7 = entries.slice(0, 7)
  const changes = last7.slice(1).map((e, i) => Math.abs(e.mood - last7[i].mood))
  const avgChange = changes.reduce((a, b) => a + b, 0) / changes.length
  return Math.max(0, 100 - Math.round(avgChange * 2))
}

function getMoodLabel(mood: number): string {
  if (mood <= 20) return 'Bardzo niski'
  if (mood <= 40) return 'Niski'
  if (mood <= 60) return 'Neutralny'
  if (mood <= 80) return 'Wysoki'
  return 'Bardzo wysoki'
}

function getMoodDescription(mood: number): string {
  if (mood <= 20) return 'Potrzebujesz wsparcia i troski'
  if (mood <= 40) return 'Czas na ≈ÇagodnƒÖ opiekƒô nad sobƒÖ'
  if (mood <= 60) return 'R√≥wnowaga i spok√≥j'
  if (mood <= 80) return 'Energia i rado≈õƒá'
  return 'Pe≈Çnia szczƒô≈õcia i spe≈Çnienia'
}

function getMoodColorClass(mood: number): string {
  if (mood <= 20) return 'bg-gray-600 shadow-gray-700/50'
  if (mood <= 40) return 'bg-blue-600 shadow-blue-700/50'
  if (mood <= 60) return 'bg-green-600 shadow-green-700/50'
  if (mood <= 80) return 'bg-purple-600 shadow-purple-700/50'
  return 'bg-rose-600 shadow-rose-700/50'
}

function getMoodBackgroundClass(mood: number): string {
  if (mood <= 20) return 'bg-gray-500'
  if (mood <= 40) return 'bg-blue-500'
  if (mood <= 60) return 'bg-green-500'
  if (mood <= 80) return 'bg-purple-500'
  return 'bg-rose-500'
}

function getMoodEmoji(mood: number): string {
  if (mood <= 20) return 'üòî'
  if (mood <= 40) return 'üòê'
  if (mood <= 60) return 'üôÇ'
  if (mood <= 80) return 'üòä'
  return 'ü§©'
}

function formatDate(date: Date): string {
  const today = new Date()
  const yesterday = new Date(today)
  yesterday.setDate(yesterday.getDate() - 1)
  
  if (date.toDateString() === today.toDateString()) return 'Dzisiaj'
  if (date.toDateString() === yesterday.toDateString()) return 'Wczoraj'
  
  return date.toLocaleDateString('pl-PL', { 
    day: 'numeric', 
    month: 'short' 
  })
}

function formatTimestamp(timestamp: Date): string {
  const date = new Date(timestamp)
  const today = new Date()
  const yesterday = new Date(today)
  yesterday.setDate(yesterday.getDate() - 1)
  
  if (date.toDateString() === today.toDateString()) {
    return `dzisiaj o ${date.toLocaleTimeString('pl-PL', { 
      hour: '2-digit', 
      minute: '2-digit' 
    })}`
  } else if (date.toDateString() === yesterday.toDateString()) {
    return `wczoraj o ${date.toLocaleTimeString('pl-PL', { 
      hour: '2-digit', 
      minute: '2-digit' 
    })}`
  } else {
    return `${date.toLocaleDateString('pl-PL', { 
      day: 'numeric', 
      month: 'long',
      year: 'numeric'
    })} o ${date.toLocaleTimeString('pl-PL', { 
      hour: '2-digit', 
      minute: '2-digit' 
    })}`
  }
}

// NOWA FUNKCJA DO FORMATOWANIA DOK≈ÅADNEGO CZASU
function formatExactTime(timestamp: Date): string {
  const date = new Date(timestamp)
  return date.toLocaleTimeString('pl-PL', { 
    hour: '2-digit', 
    minute: '2-digit' 
  })
}// src/app/page.tsx - POPRAWIONA WERSJA
'use client'
import { useAuth } from '@/components/providers/auth-provider'
import { redirect } from 'next/navigation'
import Link from 'next/link'

export default function Home() {
  const { user, loading } = useAuth()

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-100 flex items-center justify-center">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500"></div>
      </div>
    )
  }
  
  if (user) {
    redirect('/dashboard')
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-100">
      <div className="container mx-auto px-4 py-16">
        <div className="text-center max-w-4xl mx-auto">
          <div className="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-blue-500/10 border border-blue-500/20 mb-6">
            <span className="text-sm font-medium text-blue-500">Architektura Uwa≈ºno≈õci</span>
          </div>
          
          <h1 className="text-5xl md:text-6xl font-bold text-gray-900 mb-6">
            Spok√≥j w G≈Çowie
          </h1>
          
          <p className="text-xl text-gray-600 mb-8 max-w-2xl mx-auto">
            Do≈ÇƒÖcz do tysiƒôcy u≈ºytkownik√≥w kt√≥rzy ju≈º odkryli si≈Çƒô codziennej uwa≈ºno≈õci i samoobserwacji.
          </p>
          
          <div className="flex gap-4 justify-center">
            <Link 
              href="/auth/register" 
              className="bg-blue-600 text-white px-8 py-4 rounded-full text-lg hover:bg-blue-700 transition-colors"
            >
              Rozpocznij Podr√≥≈º
            </Link>
            <Link 
              href="/auth/login" 
              className="border border-blue-600 text-blue-600 px-8 py-4 rounded-full text-lg hover:bg-blue-50 transition-colors"
            >
              Zaloguj siƒô
            </Link>
          </div>
        </div>
      </div>
    </div>
  )
}@tailwind base;
@tailwind components;
@tailwind utilities;

/* Leaflet CSS */
@import url('https://unpkg.com/leaflet@1.9.4/dist/leaflet.css');

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}

@layer base {
  * {
    border-color: hsl(var(--border));
  }
  
  html {
    font-feature-settings: "cv02", "cv03", "cv04", "cv11";
  }
  
  body {
    background: hsl(var(--background));
    color: hsl(var(--foreground));
    font-feature-settings: "rlig" 1, "calt" 1;
  }
}

@layer components {
  .glass {
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }
  
  .glass-card {
    @apply glass rounded-2xl shadow-sm hover:shadow-md transition-shadow duration-300;
  }

  .glass-dark {
    background: rgba(0, 0, 0, 0.25);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

/* Animacje */
@keyframes widgetAppear {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.widget-animate {
  animation: widgetAppear 0.6s ease-out;
}

/* Map styles */
.mapboxgl-marker {
  z-index: 1000 !important;
}

.mapboxgl-popup {
  z-index: 1001 !important;
}

.leaflet-container {
  height: 100%;
  width: 100%;
  z-index: 1;
}

.leaflet-marker-icon {
  z-index: 1000 !important;
}

.leaflet-popup {
  z-index: 1001 !important;
}// src/app/login/page.tsx - STW√ìRZ TEN PLIK
import { redirect } from 'next/navigation'

export default function LoginPage() {
  redirect('/auth/login')
}import * as React from 'react'

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={`rounded-xl border border-gray-200 bg-white text-gray-900 shadow-sm ${className}`}
    {...props}
  />
))
Card.displayName = 'Card'

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={`flex flex-col space-y-1.5 p-6 ${className}`}
    {...props}
  />
))
CardHeader.displayName = 'CardHeader'

const CardTitle = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLHeadingElement>
>(({ className, ...props }, ref) => (
  <h3
    ref={ref}
    className={`text-2xl font-semibold leading-none tracking-tight ${className}`}
    {...props}
  />
))
CardTitle.displayName = 'CardTitle'

const CardDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
  <p
    ref={ref}
    className={`text-sm text-gray-600 ${className}`}
    {...props}
  />
))
CardDescription.displayName = 'CardDescription'

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={`p-6 pt-0 ${className}`} {...props} />
))
CardContent.displayName = 'CardContent'

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={`flex items-center p-6 pt-0 ${className}`}
    {...props}
  />
))
CardFooter.displayName = 'CardFooter'

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }'use client'

import * as React from 'react'

interface ProgressProps {
  value?: number
  className?: string
}

const Progress = React.forwardRef<
  HTMLDivElement,
  ProgressProps
>(({ className, value = 0, ...props }, ref) => (
  <div
    ref={ref}
    className={`relative h-4 w-full overflow-hidden rounded-full bg-gray-200 ${className}`}
    {...props}
  >
    <div
      className="h-full w-full flex-1 bg-blue-500 transition-all"
      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}
    />
  </div>
))
Progress.displayName = 'Progress'

export { Progress }'use client'

import React, { useState, useRef, useCallback, useEffect } from 'react'
import { cn } from '@/lib/utils'

interface MoodSliderProps {
  value: number
  onValueChange: (value: number) => void
  onValueCommit?: (value: number) => void
  className?: string
}

const getMoodColor = (val: number) => {
  if (val <= 20) return 'rgba(75, 85, 99, 0.8)'
  if (val <= 40) return 'rgba(59, 130, 246, 0.9)'
  if (val <= 60) return 'rgba(100, 130, 220, 0.9)'
  if (val <= 80) return 'rgba(168, 85, 230, 0.9)'
  return 'rgba(156, 39, 176, 1)'
}

const getMoodEmoji = (val: number) => {
  if (val <= 20) return 'üòî'
  if (val <= 40) return 'üòê'
  if (val <= 60) return 'üôÇ'
  if (val <= 80) return 'üòä'
  return 'ü§©'
}

const getMoodLabel = (val: number) => {
  if (val <= 20) return 'Bardzo niski'
  if (val <= 40) return 'Niski'
  if (val <= 60) return 'Neutralny'
  if (val <= 80) return 'Wysoki'
  return 'Bardzo wysoki'
}

export const MoodSlider: React.FC<MoodSliderProps> = ({
  value,
  onValueChange,
  onValueCommit,
  className
}) => {
  const [isDragging, setIsDragging] = useState(false)
  const [localValue, setLocalValue] = useState(value)
  const sliderRef = useRef<HTMLDivElement>(null)
  const [isMobile, setIsMobile] = useState(false)

  // Sprawd≈∫, czy jeste≈õmy na urzƒÖdzeniu mobilnym
  useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth <= 768)
    }
    checkMobile()
    window.addEventListener('resize', checkMobile)
    return () => window.removeEventListener('resize', checkMobile)
  }, [])

  // P≈Çynna aktualizacja warto≈õci
  useEffect(() => {
    setLocalValue(value)
  }, [value])

  const updateValue = useCallback((clientX: number) => {
    if (!sliderRef.current) return

    const rect = sliderRef.current.getBoundingClientRect()
    const x = Math.max(0, Math.min(rect.width, clientX - rect.left))
    const percentage = x / rect.width
    const newValue = Math.round(percentage * 100)
    
    setLocalValue(newValue)
    onValueChange(newValue)
  }, [onValueChange])

  const handleInteractionStart = useCallback((e: React.MouseEvent | React.TouchEvent) => {
    e.preventDefault()
    setIsDragging(true)
    const clientX = 'touches' in e ? e.touches[0].clientX : e.clientX
    updateValue(clientX)

    const handleMove = (moveEvent: MouseEvent | TouchEvent) => {
      if (!isDragging) return
      moveEvent.preventDefault()
      const moveClientX = 'touches' in moveEvent ? moveEvent.touches[0].clientX : moveEvent.clientX
      updateValue(moveClientX)
    }

    const handleEnd = () => {
      setIsDragging(false)
      onValueCommit?.(localValue)
      
      document.removeEventListener('mousemove', handleMove as EventListener)
      document.removeEventListener('touchmove', handleMove as EventListener)
      document.removeEventListener('mouseup', handleEnd)
      document.removeEventListener('touchend', handleEnd)
    }

    document.addEventListener('mousemove', handleMove as EventListener)
    document.addEventListener('touchmove', handleMove as EventListener)
    document.addEventListener('mouseup', handleEnd)
    document.addEventListener('touchend', handleEnd)
  }, [isDragging, localValue, onValueCommit, updateValue])

  return (
    <div className={cn(
      "w-full space-y-5 sm:space-y-6",
      "bg-white/80 backdrop-blur-sm rounded-2xl p-4 sm:p-5",
      "shadow-md border border-gray-100",
      className
    )}>
      {/* Wy≈õwietlacz warto≈õci - responsywny */}
      <div className="text-center">
        <div className="text-3xl sm:text-4xl mb-1 sm:mb-2">
          {getMoodEmoji(localValue)}
        </div>
        <div className="text-xl sm:text-2xl font-medium text-gray-900">
          {localValue}%
        </div>
        <div className="text-sm text-gray-500 mt-1 sm:mt-2">
          {getMoodLabel(localValue)}
        </div>
      </div>

      {/* Slider - z optymalizacjƒÖ dla urzƒÖdze≈Ñ mobilnych */}
      <div className="space-y-4">
        <div 
          ref={sliderRef}
          className="relative h-3 sm:h-2.5 rounded-full cursor-pointer touch-none"
          onMouseDown={handleInteractionStart}
          onTouchStart={handleInteractionStart}
        >
          {/* T≈Ço slidera - subtelne i przezroczyste */}
          <div className="absolute inset-0 rounded-full bg-gray-200/50" />
          
          {/* Wype≈Çnienie - responsywny gradient zgodny z kolorystykƒÖ aplikacji */}
          <div 
            className="absolute inset-y-0 rounded-l-full transition-all duration-300"
            style={{ 
              width: `${localValue}%`,
              backgroundColor: getMoodColor(localValue)
            }}
          />
          
          {/* Thumb - optymalizacja dla urzƒÖdze≈Ñ mobilnych */}
          <div
            className={cn(
              "absolute top-1/2 transform -translate-y-1/2 -translate-x-1/2 rounded-full border-2 border-white bg-white cursor-grab",
              "transition-all duration-300 shadow-sm",
              isDragging && "cursor-grabbing scale-125",
              "group-hover:scale-110",
              isMobile ? "w-8 h-8" : "w-6 h-6"
            )}
            style={{ 
              left: `${localValue}%`,
              boxShadow: isDragging ? '0 2px 6px rgba(0,0,0,0.15)' : '0 1px 3px rgba(0,0,0,0.08)',
              transition: 'transform 0.2s ease'
            }}
          />
        </div>

        {/* Skala - odpowiednio dostosowana */}
        <div className="flex justify-between text-xs sm:text-sm text-gray-500 px-2">
          <span>Bardzo niski</span>
          <span>Neutralny</span>
          <span>Bardzo wysoki</span>
        </div>
      </div>

      {/* Szybkie presetty - responsywny uk≈Çad */}
      <div className={cn(
        "flex gap-2 flex-wrap justify-center",
        isMobile ? "px-2" : ""
      )}>
        {[0, 25, 50, 75, 100].map((preset) => (
          <button
            key={preset}
            onClick={() => {
              setLocalValue(preset)
              onValueChange(preset)
              onValueCommit?.(preset)
            }}
            className={cn(
              "px-3 py-1.5 sm:px-3 sm:py-2 rounded-lg text-xs sm:text-sm transition-all duration-300",
              "bg-white border border-gray-200 text-gray-700",
              "hover:border-blue-300 hover:bg-blue-50",
              localValue === preset && cn(
                "bg-blue-500 text-white border-blue-500",
                "transform scale-105"
              ),
              isMobile && "w-14"
            )}
          >
            {preset}%
          </button>
        ))}
      </div>
    </div>
  )
}
'use client'

import { useState, useEffect, useRef } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { cn } from '@/lib/utils'
import { getMoodLabel, getMoodEmoji, getMoodColor } from '@/lib/mood-utils'
import { MoodEntryForm } from '@/components/mood-entry-form'
import { Sparkles, Lightbulb, Brain, Target, Zap, X } from 'lucide-react'

interface MoodEntry {
  id: string
  mood: number
  note?: string
  date: string
  timestamp: Date
}

interface CircularMoodTrackerProps {
  value: number
  onValueChange: (value: number) => void
  onSaveMood: (data: { mood: number; note?: string }) => Promise<void>
  size?: number
  moodEntries?: MoodEntry[]
  streak?: number
  trend?: number
  consistency?: number
  averageMood?: number
  level?: number
}

interface AIMoodInsights {
  analysis: string
  suggestions: string[]
  pattern: string
  encouragement: string
  specialTip: string
}

export const CircularMoodTracker: React.FC<CircularMoodTrackerProps> = ({
  value,
  onValueChange,
  onSaveMood,
  size = 200,
  moodEntries = [],
  streak = 0,
  trend = 0,
  consistency = 0,
  averageMood = 50,
  level = 1
}) => {
  const [currentMood, setCurrentMood] = useState(value)
  const [isDragging, setIsDragging] = useState(false)
  const [hovered, setHovered] = useState<{id: string, content: string} | null>(null)
  const [isMobile, setIsMobile] = useState(false)
  const [showAISuggestions, setShowAISuggestions] = useState(false)
  const [isSaving, setIsSaving] = useState(false)
  const [saveSuccess, setSaveSuccess] = useState(false)
  const [aiInsights, setAiInsights] = useState<AIMoodInsights | null>(null)
  const [loadingAI, setLoadingAI] = useState(false)
  const ringRef = useRef<HTMLDivElement>(null)
  const modalRef = useRef<HTMLDivElement>(null)

  useEffect(() => {
    setCurrentMood(value)
  }, [value])

  useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth <= 768)
    }
    checkMobile()
    window.addEventListener('resize', checkMobile)
    return () => window.removeEventListener('resize', checkMobile)
  }, [])

  // Close AI insights when clicking outside
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (modalRef.current && !modalRef.current.contains(event.target as Node)) {
        setShowAISuggestions(false)
      }
    }

    if (showAISuggestions) {
      document.addEventListener('mousedown', handleClickOutside)
      document.body.style.overflow = 'hidden'
    } else {
      document.body.style.overflow = 'unset'
    }

    return () => {
      document.removeEventListener('mousedown', handleClickOutside)
      document.body.style.overflow = 'unset'
    }
  }, [showAISuggestions])

  // Get AI Insights when showing suggestions
  useEffect(() => {
    if (showAISuggestions && !aiInsights && !loadingAI) {
      fetchAIInsights()
    }
  }, [showAISuggestions])

  const fetchAIInsights = async () => {
    try {
      setLoadingAI(true)
      
      const response = await fetch('/api/ai-mood-insights', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          mood: currentMood,
          streak,
          trend,
          consistency,
          averageMood,
          level,
          moodHistory: moodEntries.slice(0, 14)
        }),
      })

      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`)

      const data = await response.json()
      setAiInsights(data)
      
    } catch (error) {
      console.error('Error fetching AI insights:', error)
      // Fallback insights
      setAiInsights({
        analysis: "Analizujƒô Tw√≥j nastr√≥j w kontek≈õcie wszystkich danych...",
        suggestions: [
          "Zr√≥b 5 g≈Çƒôbokich oddech√≥w i skup siƒô na chwili obecnej",
          "Zapisz 3 rzeczy za kt√≥re jeste≈õ wdziƒôczny dzisiaj",
          "Wyjd≈∫ na kr√≥tki spacer i zauwa≈º piƒôkno wok√≥≈Ç siebie"
        ],
        pattern: `Konsystencja na poziomie ${consistency}% wskazuje na ${getConsistencyDescription(consistency).toLowerCase()}`,
        encouragement: "Tw√≥j streak pokazuje zaanga≈ºowanie w samoobserwacjƒô! üåü",
        specialTip: "Dopasuj tempo do swojego samopoczucia - s≈Çuchaj siebie"
      })
    } finally {
      setLoadingAI(false)
    }
  }

  const handleDragStart = (e: React.MouseEvent | React.TouchEvent) => {
    e.preventDefault()
    setIsDragging(true)
    handleDragMove(e)
  }

  const handleDragMove = (e: React.MouseEvent | React.TouchEvent) => {
    if (!isDragging || !ringRef.current) return
    
    const rect = ringRef.current.getBoundingClientRect()
    const clientX = 'touches' in e ? e.touches[0].clientX : e.clientX
    const clientY = 'touches' in e ? e.touches[0].clientY : e.clientY
    
    const x = clientX - rect.left - rect.width / 2
    const y = clientY - rect.top - rect.height / 2
    let angle = Math.atan2(y, x) * (180 / Math.PI) + 90
    if (angle < 0) angle += 360
    let newMood = Math.round((angle / 360) * 100)
    newMood = Math.min(Math.max(newMood, 0), 100)
    
    setCurrentMood(newMood)
    onValueChange(newMood)
  }

  const handleDragEnd = () => {
    setIsDragging(false)
  }

  const handleSaveMood = async (data: { mood: number; note?: string }) => {
    setIsSaving(true)
    setSaveSuccess(false)
    try {
      await onSaveMood(data)
      setSaveSuccess(true)
      // Automatically show AI insights after 1 second
      setTimeout(() => setShowAISuggestions(true), 1000)
    } catch (error) {
      console.error('Error saving mood:', error)
    } finally {
      setIsSaving(false)
    }
  }

  useEffect(() => {
    if (isDragging) {
      const handleMove = (e: MouseEvent | TouchEvent) => {
        handleDragMove(e as any)
      }
      const handleEnd = () => handleDragEnd()

      window.addEventListener('mousemove', handleMove)
      window.addEventListener('mouseup', handleEnd)
      window.addEventListener('touchmove', handleMove)
      window.addEventListener('touchend', handleEnd)

      return () => {
        window.removeEventListener('mousemove', handleMove)
        window.removeEventListener('mouseup', handleEnd)
        window.removeEventListener('touchmove', handleMove)
        window.removeEventListener('touchend', handleEnd)
      }
    }
  }, [isDragging])

  const getRingPercentage = () => currentMood / 100
  const recentHistory = [...moodEntries].reverse().slice(0, 7).reverse()

  return (
    <>
      <div className={cn(
        "relative flex flex-col items-center justify-center select-none w-full max-w-[360px] mx-auto p-4 sm:p-5 rounded-2xl",
        "bg-white/80 backdrop-blur-sm",
        "shadow-md border border-gray-100",
        "transition-colors duration-500",
        "touch-none"
      )}>
        {/* G≈Ç√≥wne pole ringa */}
        <div className="relative w-full aspect-square mb-4">
          <div 
            ref={ringRef}
            className="w-full h-full rounded-full relative cursor-grab active:cursor-grabbing"
            onMouseDown={handleDragStart}
            onTouchStart={handleDragStart}
          >
            <div className="absolute inset-0 rounded-full bg-gray-100/50" />
            
            <div 
              className="absolute inset-0 rounded-full"
              style={{
                background: `conic-gradient(from 0deg, ${getMoodColor(currentMood)} ${getRingPercentage() * 360}deg, transparent ${getRingPercentage() * 360}deg)`,
                clipPath: 'inset(10% 10% 10% 10%)'
              }}
            />
            
            <motion.div
              className="absolute top-0 left-1/2 w-1 h-7 sm:h-8 rounded-t-full bg-white shadow-md"
              style={{ 
                transform: `translateX(-50%) rotate(${currentMood * 3.6}deg)`,
                transformOrigin: '50% 100%'
              }}
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ duration: 0.5 }}
            />
            
            {/* Centrum ringa */}
            <div className="absolute inset-0 flex flex-col items-center justify-center rounded-full bg-white/80 backdrop-blur">
              <motion.div
                key={currentMood}
                initial={{ scale: 0.8, opacity: 0 }}
                animate={{ scale: 1, opacity: 1 }}
                transition={{ type: 'spring', stiffness: 500, damping: 30 }}
                className="text-3xl sm:text-4xl font-medium text-gray-900"
              >
                {currentMood}%
              </motion.div>
              <div className="flex items-center mt-1">
                <span>{getMoodEmoji(currentMood)}</span>
                <span className="ml-1.5 text-xs sm:text-sm text-gray-500">
                  {getMoodLabel(currentMood)}
                </span>
              </div>
            </div>
          </div>
        </div>

        {/* Mood Entry Form - ZINTEGROWANY */}
        <div className="w-full mb-4">
          <MoodEntryForm
            currentMood={currentMood}
            onSave={handleSaveMood}
            isLoading={isSaving}
            isSuccess={saveSuccess}
          />
        </div>

        {/* AI Insights Button */}
        {saveSuccess && (
          <motion.div
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            className="w-full"
          >
            <button
              onClick={() => setShowAISuggestions(true)}
              className="w-full flex items-center justify-center gap-2 py-3 px-4 rounded-xl bg-gradient-to-r from-blue-50 to-purple-50 hover:from-blue-100 hover:to-purple-100 border border-blue-200 text-blue-700 font-medium transition-all duration-200 shadow-sm"
            >
              <Sparkles className="h-4 w-4" />
              Zobacz AI Insights
            </button>
          </motion.div>
        )}

        {/* Historia nastroj√≥w */}
        <div className="w-full mb-4">
          <div className="flex items-center justify-between mb-2">
            <span className="text-xs sm:text-sm font-medium text-gray-700">Ostatnie 7 dni</span>
            <span className="text-xs text-gray-500">
              {trend > 0 ? 'üìà' : trend < 0 ? 'üìâ' : '‚û°Ô∏è'} {Math.abs(trend)}%
            </span>
          </div>
          
          <div className="w-full h-12 flex items-center">
            <div className="w-full overflow-x-auto px-1">
              <div className="flex items-center justify-between min-w-max h-full space-x-1">
                {recentHistory.map((entry, index) => {
                  const isHovered = hovered?.id === entry.id
                  
                  return (
                    <div 
                      key={entry.id}
                      className="relative flex flex-col items-center flex-shrink-0"
                      onMouseEnter={() => setHovered({
                        id: entry.id,
                        content: `${entry.mood}% ‚Ä¢ ${formatDate(entry.timestamp)}${entry.note ? `\n${entry.note}` : ''}`
                      })}
                      onMouseLeave={() => setHovered(null)}
                    >
                      <motion.div
                        className="w-2.5 h-2.5 rounded-full mb-1.5"
                        style={{ 
                          backgroundColor: getMoodColor(entry.mood),
                          boxShadow: isHovered ? `0 0 0 4px ${getMoodColor(entry.mood)}20` : 'none'
                        }}
                        initial={{ scale: 0.8, opacity: 0.7 }}
                        animate={{ 
                          scale: isHovered ? 1.3 : 1,
                          opacity: 1
                        }}
                        transition={{ type: 'spring', stiffness: 400, damping: 20 }}
                      />
                      
                      <AnimatePresence>
                        {isHovered && (
                          <motion.div
                            initial={{ opacity: 0, y: -10 }}
                            animate={{ opacity: 1, y: -15 }}
                            exit={{ opacity: 0, y: -10 }}
                            className="absolute -top-10 left-1/2 transform -translate-x-1/2 bg-white text-gray-800 text-xs px-2 py-1 rounded shadow-sm border border-gray-100 whitespace-normal max-w-[180px] text-center z-40"
                          >
                            {entry.mood}%
                          </motion.div>
                        )}
                      </AnimatePresence>
                    </div>
                  )
                })}
              </div>
            </div>
          </div>
        </div>

        {/* Wizualizacja trendu */}
        <div className="w-full h-16 mb-2">
          <div className="w-full h-px bg-gray-200" />
          <div className="w-full h-[80%] flex items-end justify-between px-1">
            {recentHistory.map((entry, index) => {
              const height = `${(entry.mood / 100) * 50}px`;
              const isToday = index === recentHistory.length - 1
              
              return (
                <div key={entry.id} className="flex flex-col items-center w-5 flex-shrink-0">
                  <motion.div
                    className="w-1.5 rounded-t-full"
                    style={{ 
                      backgroundColor: getMoodColor(entry.mood),
                      height: height
                    }}
                    initial={{ height: 0 }}
                    animate={{ height: height }}
                    transition={{ duration: 0.6, delay: index * 0.05 }}
                  />
                  {isToday && (
                    <motion.div
                      className="w-2 h-2 rounded-full bg-white mt-1 shadow-sm"
                      style={{ backgroundColor: getMoodColor(entry.mood) }}
                      initial={{ scale: 0 }}
                      animate={{ scale: 1 }}
                      transition={{ delay: 0.5 }}
                    />
                  )}
                </div>
              )
            })}
          </div>
        </div>

        {/* Statystyki */}
        <div className="w-full grid grid-cols-3 gap-2 text-xs">
          <div className="text-center p-2 bg-blue-50 rounded-lg">
            <div className="font-semibold text-blue-700">{streak}</div>
            <div className="text-blue-600">dni</div>
          </div>
          <div className="text-center p-2 bg-green-50 rounded-lg">
            <div className={`font-semibold ${trend > 0 ? 'text-green-700' : trend < 0 ? 'text-red-700' : 'text-gray-700'}`}>
              {trend > 0 ? '+' : ''}{trend}%
            </div>
            <div className="text-gray-600">trend</div>
          </div>
          <div className="text-center p-2 bg-purple-50 rounded-lg">
            <div className="font-semibold text-purple-700">{consistency}%</div>
            <div className="text-purple-600">konsyst.</div>
          </div>
        </div>
      </div>

      {/* POPRAWIONY MODAL AI INSIGHTS - IDEALNIE W ≈öRODKU */}
      <AnimatePresence>
        {showAISuggestions && (
          <>
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              className="fixed inset-0 bg-black/20 backdrop-blur-sm z-50 flex items-center justify-center p-4"
              onClick={() => setShowAISuggestions(false)}
            >
              <motion.div
                ref={modalRef}
                initial={{ opacity: 0, scale: 0.9, y: 20 }}
                animate={{ opacity: 1, scale: 1, y: 0 }}
                exit={{ opacity: 0, scale: 0.9, y: 20 }}
                transition={{ type: "spring", damping: 25, stiffness: 300 }}
                className="bg-white rounded-3xl shadow-2xl border border-gray-200 w-full max-w-2xl max-h-[85vh] flex flex-col overflow-hidden"
                onClick={(e) => e.stopPropagation()}
              >
                {/* Header */}
                <div className="flex items-center justify-between p-6 border-b border-gray-100 bg-gradient-to-r from-blue-50 to-purple-50 flex-shrink-0">
                  <div className="flex items-center gap-3">
                    <div className="p-2 bg-white rounded-xl shadow-sm">
                      <Brain className="h-6 w-6 text-purple-500" />
                    </div>
                    <div>
                      <h3 className="font-bold text-gray-900 text-lg">AI Analiza Twojego Nastroju</h3>
                      <p className="text-sm text-gray-600">Spersonalizowane insights bazujƒÖce na Twoich danych</p>
                    </div>
                  </div>
                  <button 
                    onClick={() => setShowAISuggestions(false)}
                    className="p-2 hover:bg-white rounded-xl transition-colors"
                  >
                    <X className="h-5 w-5 text-gray-400 hover:text-gray-600" />
                  </button>
                </div>
                
                {/* Scrollable Content */}
                <div className="flex-1 overflow-y-auto p-6">
                  {loadingAI ? (
                    <div className="space-y-4">
                      <div className="flex items-center gap-3">
                        <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-500" />
                        <div>
                          <div className="h-4 bg-gray-200 rounded w-32 mb-2 animate-pulse"></div>
                          <div className="h-3 bg-gray-200 rounded w-48 animate-pulse"></div>
                        </div>
                      </div>
                      {[1, 2, 3].map(i => (
                        <div key={i} className="animate-pulse">
                          <div className="h-4 bg-gray-200 rounded w-3/4 mb-2"></div>
                          <div className="h-3 bg-gray-200 rounded w-full mb-3"></div>
                        </div>
                      ))}
                    </div>
                  ) : aiInsights ? (
                    <div className="space-y-6">
                      {/* Analiza */}
                      <div className="p-4 bg-blue-50 rounded-xl border border-blue-100">
                        <div className="flex items-start gap-3">
                          <Target className="h-5 w-5 text-blue-500 mt-0.5 flex-shrink-0" />
                          <div>
                            <p className="font-semibold text-blue-900 mb-2">Analiza Nastroju</p>
                            <p className="text-blue-800 leading-relaxed">{aiInsights.analysis}</p>
                          </div>
                        </div>
                      </div>

                      {/* Sugestie */}
                      <div>
                        <p className="font-semibold text-gray-900 mb-3 flex items-center gap-2">
                          <Zap className="h-5 w-5 text-yellow-500" />
                          Spersonalizowane Sugestie
                        </p>
                        <div className="space-y-3">
                          {aiInsights.suggestions.map((suggestion, index) => (
                            <div key={index} className="flex items-start gap-3 p-3 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors border border-gray-100">
                              <Lightbulb className="h-4 w-4 text-yellow-500 mt-0.5 flex-shrink-0" />
                              <span className="text-gray-700 leading-relaxed">{suggestion}</span>
                            </div>
                          ))}
                        </div>
                      </div>

                      {/* Wzorzec i Encouragement */}
                      <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
                        <div className="p-3 bg-green-50 rounded-lg border border-green-100">
                          <p className="text-sm font-semibold text-green-800 mb-1">üéØ Wykryty Wzorzec</p>
                          <p className="text-sm text-green-700">{aiInsights.pattern}</p>
                        </div>
                        <div className="p-3 bg-purple-50 rounded-lg border border-purple-100">
                          <p className="text-sm font-semibold text-purple-800 mb-1">üí´ Motywacja</p>
                          <p className="text-sm text-purple-700">{aiInsights.encouragement}</p>
                        </div>
                      </div>

                      {/* Special Tip */}
                      {aiInsights.specialTip && (
                        <div className="p-3 bg-orange-50 rounded-lg border border-orange-100">
                          <p className="text-sm font-semibold text-orange-800 mb-1">üí° Specjalna Rada</p>
                          <p className="text-sm text-orange-700">{aiInsights.specialTip}</p>
                        </div>
                      )}

                      {/* Dane u≈ºytkownika */}
                      <div className="pt-4 border-t border-gray-100">
                        <p className="text-xs font-medium text-gray-700 mb-2">Twoje Statystyki:</p>
                        <div className="grid grid-cols-2 sm:grid-cols-4 gap-2 text-xs">
                          <div className="text-center p-2 bg-blue-50 rounded-lg">
                            <div className="font-semibold text-blue-700">{streak}</div>
                            <div className="text-blue-600">dni streak</div>
                          </div>
                          <div className="text-center p-2 bg-green-50 rounded-lg">
                            <div className="font-semibold text-green-700">{averageMood}%</div>
                            <div className="text-green-600">≈õrednia</div>
                          </div>
                          <div className="text-center p-2 bg-purple-50 rounded-lg">
                            <div className="font-semibold text-purple-700">{consistency}%</div>
                            <div className="text-purple-600">konsystencja</div>
                          </div>
                          <div className="text-center p-2 bg-gray-50 rounded-lg">
                            <div className={`font-semibold ${trend > 0 ? 'text-green-700' : trend < 0 ? 'text-red-700' : 'text-gray-700'}`}>
                              {trend > 0 ? '+' : ''}{trend}%
                            </div>
                            <div className="text-gray-600">trend</div>
                          </div>
                        </div>
                      </div>
                    </div>
                  ) : null}
                </div>
                
                {/* Fixed Footer */}
                <div className="p-4 border-t border-gray-100 bg-gray-50 flex-shrink-0">
                  <button
                    onClick={() => setShowAISuggestions(false)}
                    className="w-full py-3 bg-blue-500 text-white rounded-xl hover:bg-blue-600 transition-colors font-medium"
                  >
                    Zamknij
                  </button>
                </div>
              </motion.div>
            </motion.div>
          </>
        )}
      </AnimatePresence>
    </>
  )
}

function formatDate(date: Date): string {
  const today = new Date()
  const yesterday = new Date(today)
  yesterday.setDate(yesterday.getDate() - 1)
  
  if (date.toDateString() === today.toDateString()) return 'Dzi≈õ'
  if (date.toDateString() === yesterday.toDateString()) return 'Wcz.'
  
  return date.toLocaleDateString('pl-PL', { 
    day: 'numeric', 
    month: 'short' 
  }).replace(' ', '')
}

function getConsistencyDescription(consistency: number): string {
  if (consistency >= 80) return 'Wysoka stabilno≈õƒá'
  if (consistency >= 60) return 'Umiarkowana stabilno≈õƒá'
  if (consistency >= 40) return 'Zmienne emocje'
  return 'Du≈ºa zmienno≈õƒá'
}.button {
  padding: 12px 24px;
  border: none;
  border-radius: 12px;
  font-weight: 600;
  cursor: pointer;
  font-size: 16px;
  transition: all 0.2s;
}

.primary {
  background: #007AFF;
  color: white;
}

.primary:hover {
  background: #0056CC;
}

.secondary {
  background: #F5F5F7;
  color: #1d1d1f;
}

.secondary:hover {
  background: #E5E5E7;
}// src/components/ui/mood-chart-7days.tsx
'use client'

import { useMemo } from 'react'
import { motion } from 'framer-motion'
import { 
  LineChart, 
  Line, 
  XAxis, 
  YAxis, 
  CartesianGrid, 
  Tooltip,
  ResponsiveContainer,
  BarChart,
  Bar,
  AreaChart,
  Area
} from 'recharts'

// Helper functions at the TOP
const getMoodColor = (mood: number) => {
  if (mood < 25) return '#f87171'
  if (mood < 50) return '#60a5fa' 
  if (mood < 75) return '#34d399'
  return '#8b5cf6'
}

const getMoodGradient = (mood: number) => {
  if (mood < 25) return ['#fecaca', '#f87171']
  if (mood < 50) return ['#bfdbfe', '#60a5fa']
  if (mood < 75) return ['#a7f3d0', '#34d399']
  return ['#ddd6fe', '#8b5cf6']
}

interface MoodEntry {
  mood: number
  timestamp: any
  id?: string
  note?: string
}

interface MoodChart7DaysProps {
  moodEntries?: MoodEntry[]
  height?: number
  showLabels?: boolean
  showGrid?: boolean
  compact?: boolean
  variant?: 'line' | 'bar' | 'area'
  showTooltip?: boolean
  className?: string
}

interface ChartDay {
  date: string
  day: string
  fullDay: string
  mood: number | null
  index: number
  fill?: string
}

export function MoodChart7Days({ 
  moodEntries = [], 
  height = 200, 
  showLabels = true, 
  showGrid = true,
  compact = false,
  variant = 'line',
  showTooltip = true,
  className = ""
}: MoodChart7DaysProps) {
  const chartData = useMemo(() => {
    const days: ChartDay[] = []
    const dayNames = compact ? ['N', 'P', 'W', '≈ö', 'C', 'P', 'S'] : ['Nd', 'Pn', 'Wt', '≈ör', 'Cz', 'Pt', 'Sb']
    const fullDayNames = ['Niedziela', 'Poniedzia≈Çek', 'Wtorek', '≈öroda', 'Czwartek', 'PiƒÖtek', 'Sobota']
    
    // Generate last 7 days
    for (let i = 6; i >= 0; i--) {
      const date = new Date()
      date.setDate(date.getDate() - i)
      const dateString = date.toISOString().split('T')[0]
      const dayIndex = date.getDay()
      
      // Initialize day data
      const dayData: ChartDay = {
        date: dateString,
        day: dayNames[dayIndex],
        fullDay: fullDayNames[dayIndex],
        mood: null,
        index: 6 - i
      }

      // Try to find matching mood entry
      try {
        const matchingEntry = moodEntries.find(entry => {
          let entryDate: Date
          
          // Handle different timestamp formats
          if (entry.timestamp?.toDate) {
            entryDate = entry.timestamp.toDate()
          } else if (entry.timestamp instanceof Date) {
            entryDate = entry.timestamp
          } else if (typeof entry.timestamp === 'string') {
            entryDate = new Date(entry.timestamp)
          } else if (entry.timestamp?.seconds) {
            entryDate = new Date(entry.timestamp.seconds * 1000)
          } else {
            return false
          }

          if (isNaN(entryDate.getTime())) return false
          
          const entryDateString = entryDate.toISOString().split('T')[0]
          return entryDateString === dateString
        })

        if (matchingEntry) {
          const moodValue = Math.max(0, Math.min(100, matchingEntry.mood || 50))
          dayData.mood = moodValue
          dayData.fill = getMoodColor(moodValue)
        }
      } catch (error) {
        console.error('Error processing mood entry:', error)
      }

      days.push(dayData)
    }

    return days
  }, [moodEntries, compact])

  const CustomTooltip = ({ active, payload, label }: any) => {
    if (active && payload && payload.length) {
      const data = payload[0].payload
      return (
        <motion.div
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          className="bg-white/95 backdrop-blur-sm p-3 rounded-lg border border-slate-200 shadow-xl"
        >
          <p className="font-semibold text-slate-800 text-sm">{data.fullDay}</p>
          <p className="text-slate-600 text-sm mt-1">
            Nastr√≥j: <span className="font-bold" style={{ color: getMoodColor(payload[0].value) }}>
              {payload[0].value}%
            </span>
          </p>
          {data.date && (
            <p className="text-slate-500 text-xs mt-1">
              {new Date(data.date).toLocaleDateString('pl-PL')}
            </p>
          )}
        </motion.div>
      )
    }
    return null
  }

  const CustomizedDot = (props: any) => {
    const { cx, cy, payload } = props

    if (payload.mood === null) return null

    return (
      <motion.circle
        initial={{ scale: 0, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        transition={{ duration: 0.5, delay: payload.index * 0.1 }}
        whileHover={{ scale: 1.5 }}
        cx={cx}
        cy={cy}
        r={4}
        fill={getMoodColor(payload.mood)}
        stroke="#fff"
        strokeWidth={2}
        className="cursor-pointer"
      />
    )
  }

  // Check if we have any data
  const hasData = chartData.some(day => day.mood !== null)
  const dataWithValues = chartData.filter(day => day.mood !== null)

  // If no data, show empty state
  if (!hasData || dataWithValues.length === 0) {
    return (
      <EmptyChartState 
        height={height} 
        compact={compact}
        className={className}
      />
    )
  }

  // For single data point, we need to handle it differently
  const isSinglePoint = dataWithValues.length === 1

  return (
    <div 
      className={`w-full ${className}`}
      style={{ height }}
    >
      <ResponsiveContainer width="100%" height="100%">
        {variant === 'line' ? (
          <LineChart 
            data={isSinglePoint ? [dataWithValues[0], dataWithValues[0]] : chartData} 
            margin={{ top: 10, right: 10, left: 0, bottom: compact ? 0 : 10 }}
          >
            {showGrid && (
              <CartesianGrid 
                strokeDasharray="3 3" 
                stroke="#f1f5f9"
                horizontal={true}
                vertical={false}
              />
            )}
            
            <XAxis 
              dataKey="day"
              axisLine={false}
              tickLine={false}
              tick={{ 
                fontSize: compact ? 10 : 12, 
                fill: '#64748b',
                fontWeight: 500 
              }}
              tickMargin={8}
              interval={0}
            />
            
            {showLabels && (
              <YAxis 
                axisLine={false}
                tickLine={false}
                tick={{ 
                  fontSize: compact ? 10 : 12, 
                  fill: '#64748b' 
                }}
                tickMargin={8}
                domain={[0, 100]}
                tickFormatter={(value) => compact ? `${value}` : `${value}%`}
                width={compact ? 20 : 30}
              />
            )}
            
            {showTooltip && <Tooltip content={<CustomTooltip />} />}
            
            <Line
              type={isSinglePoint ? "linear" : "monotone"}
              dataKey="mood"
              stroke="#8b5cf6"
              strokeWidth={2}
              dot={<CustomizedDot />}
              activeDot={{ 
                r: 6, 
                fill: '#7c3aed',
                stroke: '#fff',
                strokeWidth: 2
              }}
              connectNulls={false}
            />
          </LineChart>
        ) : variant === 'area' ? (
          <AreaChart 
            data={isSinglePoint ? [dataWithValues[0], dataWithValues[0]] : chartData}
            margin={{ top: 10, right: 10, left: 0, bottom: compact ? 0 : 10 }}
          >
            {showGrid && (
              <CartesianGrid 
                strokeDasharray="3 3" 
                stroke="#f1f5f9"
                horizontal={true}
                vertical={false}
              />
            )}
            
            <XAxis 
              dataKey="day"
              axisLine={false}
              tickLine={false}
              tick={{ 
                fontSize: compact ? 10 : 12, 
                fill: '#64748b',
                fontWeight: 500 
              }}
              tickMargin={8}
              interval={0}
            />
            
            {showLabels && (
              <YAxis 
                axisLine={false}
                tickLine={false}
                tick={{ 
                  fontSize: compact ? 10 : 12, 
                  fill: '#64748b' 
                }}
                tickMargin={8}
                domain={[0, 100]}
                tickFormatter={(value) => compact ? `${value}` : `${value}%`}
                width={compact ? 20 : 30}
              />
            )}
            
            {showTooltip && <Tooltip content={<CustomTooltip />} />}
            
            <defs>
              <linearGradient id="moodAreaGradient" x1="0" y1="0" x2="0" y2="1">
                <stop offset="5%" stopColor="#8b5cf6" stopOpacity={0.3}/>
                <stop offset="95%" stopColor="#8b5cf6" stopOpacity={0}/>
              </linearGradient>
            </defs>
            
            <Area
              type="monotone"
              dataKey="mood"
              stroke="#8b5cf6"
              strokeWidth={2}
              fill="url(#moodAreaGradient)"
              dot={<CustomizedDot />}
              activeDot={{ 
                r: 6, 
                fill: '#7c3aed',
                stroke: '#fff',
                strokeWidth: 2
              }}
              connectNulls={false}
            />
          </AreaChart>
        ) : (
          // Bar Chart
          <BarChart 
            data={chartData}
            margin={{ top: 10, right: 10, left: 0, bottom: compact ? 0 : 10 }}
          >
            {showGrid && (
              <CartesianGrid 
                strokeDasharray="3 3" 
                stroke="#f1f5f9"
                horizontal={true}
                vertical={false}
              />
            )}
            
            <XAxis 
              dataKey="day"
              axisLine={false}
              tickLine={false}
              tick={{ 
                fontSize: compact ? 10 : 12, 
                fill: '#64748b',
                fontWeight: 500 
              }}
              tickMargin={8}
              interval={0}
            />
            
            {showLabels && (
              <YAxis 
                axisLine={false}
                tickLine={false}
                tick={{ 
                  fontSize: compact ? 10 : 12, 
                  fill: '#64748b' 
                }}
                tickMargin={8}
                domain={[0, 100]}
                tickFormatter={(value) => compact ? `${value}` : `${value}%`}
                width={compact ? 20 : 30}
              />
            )}
            
            {showTooltip && <Tooltip content={<CustomTooltip />} />}
            
            <Bar 
              dataKey="mood" 
              fill="#8b5cf6"
              radius={[4, 4, 0, 0]}
              className="transition-all duration-300 hover:opacity-80"
            />
          </BarChart>
        )}
      </ResponsiveContainer>
    </div>
  )
}

// Empty state component
function EmptyChartState({ height, compact, className }: { height: number, compact: boolean, className: string }) {
  return (
    <div 
      className={`flex flex-col items-center justify-center text-slate-400 ${className}`}
      style={{ height }}
    >
      <motion.div
        initial={{ opacity: 0, scale: 0.8 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{ duration: 0.5 }}
        className="text-center"
      >
        <div className="text-3xl mb-3">üìä</div>
        <p className={`${compact ? 'text-xs' : 'text-sm'} font-medium`}>
          {compact ? 'Brak danych' : 'Brak danych z ostatnich 7 dni'}
        </p>
        {!compact && (
          <p className="text-xs text-slate-500 mt-1">
            Dodaj wpisy nastroju, aby zobaczyƒá wykres
          </p>
        )}
      </motion.div>
    </div>
  )
}

// Simple compact version for small widgets
export function SimpleMoodChart({ 
  moodEntries = [], 
  height = 60,
  variant = 'bar'
}: MoodChart7DaysProps) {
  const chartData = useMemo(() => {
    const days: any[] = []
    const dayNames = ['N', 'P', 'W', '≈ö', 'C', 'P', 'S']
    
    for (let i = 6; i >= 0; i--) {
      const date = new Date()
      date.setDate(date.getDate() - i)
      const dateString = date.toISOString().split('T')[0]
      
      const dayData: any = {
        day: dayNames[date.getDay()],
        mood: null
      }

      try {
        const matchingEntry = moodEntries.find(entry => {
          let entryDate: Date
          
          if (entry.timestamp?.toDate) {
            entryDate = entry.timestamp.toDate()
          } else if (entry.timestamp instanceof Date) {
            entryDate = entry.timestamp
          } else if (typeof entry.timestamp === 'string') {
            entryDate = new Date(entry.timestamp)
          } else if (entry.timestamp?.seconds) {
            entryDate = new Date(entry.timestamp.seconds * 1000)
          } else {
            return false
          }

          if (isNaN(entryDate.getTime())) return false
          return entryDate.toISOString().split('T')[0] === dateString
        })

        if (matchingEntry) {
          dayData.mood = Math.max(0, Math.min(100, matchingEntry.mood || 50))
        }
      } catch (error) {
        console.error('Error processing mood entry:', error)
      }

      days.push(dayData)
    }

    return days
  }, [moodEntries])

  const hasData = chartData.some(day => day.mood !== null)

  if (!hasData) {
    return (
      <div style={{ height }} className="flex items-center justify-center text-slate-300">
        <span className="text-xs">-</span>
      </div>
    )
  }

  return (
    <div style={{ height }} className="w-full">
      <ResponsiveContainer width="100%" height="100%">
        {variant === 'line' ? (
          <LineChart data={chartData} margin={{ top: 2, right: 2, left: 2, bottom: 2 }}>
            <Line
              type="monotone"
              dataKey="mood"
              stroke="#8b5cf6"
              strokeWidth={2}
              dot={false}
              activeDot={false}
            />
          </LineChart>
        ) : (
          <BarChart data={chartData} margin={{ top: 5, right: 0, left: 0, bottom: 0 }}>
            <Bar 
              dataKey="mood" 
              fill="#8b5cf6"
              radius={[2, 2, 0, 0]}
            />
          </BarChart>
        )}
      </ResponsiveContainer>
    </div>
  )
}

// Mini sparkline version for really small spaces
export function MoodSparkline({ moodEntries = [], height = 20 }: MoodChart7DaysProps) {
  const chartData = useMemo(() => {
    const days: any[] = []
    
    for (let i = 6; i >= 0; i--) {
      const date = new Date()
      date.setDate(date.getDate() - i)
      const dateString = date.toISOString().split('T')[0]
      
      const dayData: any = {
        mood: null
      }

      try {
        const matchingEntry = moodEntries.find(entry => {
          let entryDate: Date
          
          if (entry.timestamp?.toDate) {
            entryDate = entry.timestamp.toDate()
          } else if (entry.timestamp instanceof Date) {
            entryDate = entry.timestamp
          } else if (typeof entry.timestamp === 'string') {
            entryDate = new Date(entry.timestamp)
          } else if (entry.timestamp?.seconds) {
            entryDate = new Date(entry.timestamp.seconds * 1000)
          } else {
            return false
          }

          if (isNaN(entryDate.getTime())) return false
          return entryDate.toISOString().split('T')[0] === dateString
        })

        if (matchingEntry) {
          dayData.mood = Math.max(0, Math.min(100, matchingEntry.mood || 50))
        }
      } catch (error) {
        console.error('Error processing mood entry:', error)
      }

      days.push(dayData)
    }

    return days
  }, [moodEntries])

  const hasData = chartData.some(day => day.mood !== null)

  if (!hasData) {
    return (
      <div style={{ height }} className="flex items-center justify-center">
        <div className="w-full h-1 bg-slate-200 rounded-full"></div>
      </div>
    )
  }

  return (
    <div style={{ height }} className="w-full">
      <ResponsiveContainer width="100%" height="100%">
        <LineChart data={chartData} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>
          <Line
            type="monotone"
            dataKey="mood"
            stroke="#8b5cf6"
            strokeWidth={1.5}
            dot={false}
            activeDot={false}
          />
        </LineChart>
      </ResponsiveContainer>
    </div>
  )
}

export default MoodChart7Days// src/components/ui/avatar.tsx
import React from 'react';

interface AvatarProps {
  className?: string;
  children?: React.ReactNode;
}

export const Avatar: React.FC<AvatarProps> = ({ className, children }) => (
  <div className={`relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full ${className}`}>
    {children}
  </div>
);

export const AvatarImage: React.FC<{ src: string; alt: string }> = ({ src, alt }) => (
  <img src={src} alt={alt} className="aspect-square h-full w-full" />
);

export const AvatarFallback: React.FC<{ className?: string }> = ({ className, children }) => (
  <div className={`flex h-full w-full items-center justify-center rounded-full bg-muted ${className}`}>
    {children}
  </div>
);import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const badgeVariants = cva(
  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
        outline: "text-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

export interface BadgeProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof badgeVariants> {}

function Badge({ className, variant, ...props }: BadgeProps) {
  return (
    <div className={cn(badgeVariants({ variant }), className)} {...props} />
  )
}

export { Badge, badgeVariants }import * as React from 'react'

interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
  variant?: 'primary' | 'secondary' | 'outline'
  size?: 'sm' | 'md' | 'lg'
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant = 'primary', size = 'md', ...props }, ref) => {
    return (
      <button
        className={`
          inline-flex items-center justify-center rounded-lg font-medium transition-colors
          ${variant === 'primary' ? 'bg-primary text-white hover:bg-primary/90' : ''}
          ${variant === 'secondary' ? 'bg-surface text-text-primary hover:bg-surface/80' : ''}
          ${variant === 'outline' ? 'border border-border-light bg-background hover:bg-surface' : ''}
          ${size === 'sm' ? 'h-9 px-3 text-sm' : ''}
          ${size === 'md' ? 'h-10 px-4 py-2' : ''}
          ${size === 'lg' ? 'h-11 px-8' : ''}
          ${className}
        `}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = 'Button'

export { Button }// src/components/ui/textarea.tsx
import * as React from "react"
import { cn } from "@/lib/utils"

export interface TextareaProps
  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}

const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(
  ({ className, ...props }, ref) => {
    return (
      <textarea
        className={cn(
          "flex min-h-[80px] w-full rounded-lg border border-gray-300 bg-white px-3 py-2 text-sm",
          "placeholder:text-gray-500",
          "focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
          "disabled:cursor-not-allowed disabled:opacity-50",
          "transition-colors duration-200",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Textarea.displayName = "Textarea"

export { Textarea }import * as React from 'react'

export interface InputProps
  extends React.InputHTMLAttributes<HTMLInputElement> {}

const Input = React.forwardRef<HTMLInputElement, InputProps>(
  ({ className, type, ...props }, ref) => {
    return (
      <input
        type={type}
        className={
          `flex h-10 w-full rounded-lg border border-gray-300 bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 ${className}`
        }
        ref={ref}
        {...props}
      />
    )
  }
)
Input.displayName = 'Input'

export { Input }'use client'

import { useState, useEffect } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { cn } from '@/lib/utils'
import { Sparkles, Brain, Zap, Target, Heart, Smartphone } from 'lucide-react'

interface MoodEntry {
  id: string
  mood: number
  note?: string
  timestamp: Date
  date: string
}

interface ModernMoodPickerProps {
  value: number
  onValueChange?: (value: number) => void
  moodEntries?: MoodEntry[]
  streak?: number
  trend?: number
  consistency?: number
  averageMood?: number
  level?: number
  onSaveMood?: (mood: number) => void
  onAddNote?: () => void
  todayEntry?: MoodEntry | null
}

interface AIMoodInsights {
  analysis: string
  suggestions: string[]
  pattern: string
  encouragement: string
  specialTip: string
}

// System kolor√≥w
const getMoodColor = (value: number) => {
  if (value <= 20) return 'from-gray-400 to-gray-500'
  if (value <= 40) return 'from-blue-400 to-blue-500'
  if (value <= 60) return 'from-green-400 to-green-500'
  if (value <= 80) return 'from-purple-400 to-purple-500'
  return 'from-rose-400 to-rose-500'
}

const getMoodGradient = (value: number) => {
  if (value <= 20) return 'bg-gradient-to-br from-gray-100 to-gray-200'
  if (value <= 40) return 'bg-gradient-to-br from-blue-50 to-blue-100'
  if (value <= 60) return 'bg-gradient-to-br from-green-50 to-green-100'
  if (value <= 80) return 'bg-gradient-to-br from-purple-50 to-purple-100'
  return 'bg-gradient-to-br from-rose-50 to-rose-100'
}

const MoodEmoji = ({ mood, size = "text-3xl" }: { mood: number; size?: string }) => {
  if (mood <= 20) return <span className={size}>üòî</span>
  if (mood <= 40) return <span className={size}>üòê</span>
  if (mood <= 60) return <span className={size}>üôÇ</span>
  if (mood <= 80) return <span className={size}>üòä</span>
  return <span className={size}>ü§©</span>
}

const getMoodLabel = (mood: number): string => {
  if (mood <= 20) return 'B. niski'
  if (mood <= 40) return 'Niski'
  if (mood <= 60) return 'Neutralny'
  if (mood <= 80) return 'Wysoki'
  return 'B. wysoki'
}

const getMoodDescription = (mood: number): string => {
  if (mood <= 20) return 'Potrzebujesz wsparcia'
  if (mood <= 40) return 'Czas na opiekƒô nad sobƒÖ'
  if (mood <= 60) return 'R√≥wnowaga i spok√≥j'
  if (mood <= 80) return 'Energia i rado≈õƒá'
  return 'Pe≈Çnia szczƒô≈õcia'
}

export const ModernMoodPicker: React.FC<ModernMoodPickerProps> = ({
  value,
  onValueChange,
  moodEntries = [],
  streak = 0,
  trend = 0,
  consistency = 0,
  averageMood = 50,
  level = 1,
  onSaveMood,
  onAddNote,
  todayEntry
}) => {
  const [currentMood, setCurrentMood] = useState(value)
  const [selectedMood, setSelectedMood] = useState<number | null>(null)
  const [showAISuggestions, setShowAISuggestions] = useState(false)
  const [aiInsights, setAiInsights] = useState<AIMoodInsights | null>(null)
  const [loadingAI, setLoadingAI] = useState(false)
  const [isMobile, setIsMobile] = useState(false)

  const moodLevels = [20, 40, 60, 80, 100]

  useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth <= 768)
    }
    checkMobile()
    window.addEventListener('resize', checkMobile)
    return () => window.removeEventListener('resize', checkMobile)
  }, [])

  useEffect(() => {
    setCurrentMood(value)
  }, [value])

  const handleMoodSelect = (mood: number) => {
    setSelectedMood(mood)
    setCurrentMood(mood)
    onValueChange?.(mood)
  }

  const handleSave = () => {
    if (selectedMood !== null) {
      onSaveMood?.(selectedMood)
      setSelectedMood(null)
    }
  }

  const fetchAIInsights = async () => {
    try {
      setLoadingAI(true)
      
      const response = await fetch('/api/ai-mood-insights', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          mood: currentMood,
          streak,
          trend,
          consistency,
          averageMood,
          level,
          moodHistory: moodEntries.slice(0, 14)
        }),
      })

      if (!response.ok) throw new Error('AI unavailable')
      
      const data = await response.json()
      setAiInsights(data)
      
    } catch (error) {
      console.error('Error fetching AI insights:', error)
      setAiInsights({
        analysis: "Analizujƒô Tw√≥j nastr√≥j w kontek≈õcie codziennych do≈õwiadcze≈Ñ...",
        suggestions: [
          "Zr√≥b 5 g≈Çƒôbokich oddech√≥w i skup siƒô na chwili obecnej",
          "Zapisz 3 rzeczy za kt√≥re jeste≈õ wdziƒôczny dzisiaj", 
          "Wyjd≈∫ na kr√≥tki spacer i zauwa≈º piƒôkno wok√≥≈Ç siebie"
        ],
        pattern: `Konsystencja na poziomie ${consistency}% wskazuje na ${getConsistencyDescription(consistency).toLowerCase()}`,
        encouragement: "Tw√≥j streak pokazuje zaanga≈ºowanie w samoobserwacjƒô! üåü",
        specialTip: "Dopasuj tempo do swojego samopoczucia - s≈Çuchaj siebie"
      })
    } finally {
      setLoadingAI(false)
    }
  }

  return (
    <div className="w-full max-w-4xl mx-auto">
      {/* G≈Ç√≥wny kontener - ZWIƒòKSZONE PADDINGI */}
      <div className={cn(
        "rounded-3xl p-6 sm:p-8 md:p-10 backdrop-blur-sm border border-white/20 shadow-2xl",
        getMoodGradient(currentMood)
      )}>
        {/* Nag≈Ç√≥wek - ZWIƒòKSZONE MARGINESY */}
        <div className="text-center mb-8 sm:mb-12">
          <motion.h2 
            className="text-2xl sm:text-3xl md:text-4xl font-light text-gray-800 mb-4 sm:mb-6"
            initial={{ opacity: 0, y: -10 }}
            animate={{ opacity: 1, y: 0 }}
          >
            {todayEntry ? 'Tw√≥j dzisiejszy nastr√≥j' : 'Jak siƒô dzi≈õ czujesz?'}
          </motion.h2>
          <motion.p 
            className="text-gray-600 text-base sm:text-lg md:text-xl font-medium"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.1 }}
          >
            {getMoodDescription(currentMood)}
          </motion.p>
        </div>

        {/* Mood Selector - POPRAWIONE ODSTƒòPY */}
        <div className="mb-8 sm:mb-12">
          {/* Mood buttons - WIƒòKSZE ODSTƒòPY */}
          <div className="flex sm:grid sm:grid-cols-5 gap-3 sm:gap-4 md:gap-6 mb-6 sm:mb-10 overflow-x-auto pb-3 sm:pb-0 hide-scrollbar">
            {moodLevels.map((mood) => (
              <motion.button
                key={mood}
                className={cn(
                  "relative group rounded-2xl sm:rounded-3xl p-4 sm:p-5 md:p-6 transition-all duration-300 transform hover:scale-105 flex-shrink-0",
                  "border-2 backdrop-blur-sm min-w-[80px] sm:min-w-0 flex flex-col items-center justify-between",
                  selectedMood === mood || currentMood === mood
                    ? `border-white shadow-xl sm:shadow-2xl scale-105 ${getMoodGradient(mood)}`
                    : `border-transparent ${getMoodGradient(mood)} opacity-70 hover:opacity-100`
                )}
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                onClick={() => handleMoodSelect(mood)}
              >
                {/* Emoji - WIƒòKSZE MARGINESY */}
                <div className="text-center mb-3 sm:mb-4">
                  <MoodEmoji 
                    mood={mood} 
                    size={isMobile ? "text-3xl" : "text-4xl sm:text-5xl"} 
                  />
                </div>
                
                {/* Label i procent - OPTYMALNE ODSTƒòPY */}
                <div className="text-center space-y-2 w-full">
                  <div className={cn(
                    "text-sm sm:text-base font-semibold transition-colors",
                    selectedMood === mood || currentMood === mood 
                      ? "text-gray-900" 
                      : "text-gray-700"
                  )}>
                    {getMoodLabel(mood)}
                  </div>
                  <div className="text-xs sm:text-sm text-gray-600 bg-white/60 rounded-full px-3 py-1.5 backdrop-blur-sm border border-white/30 font-medium">
                    {mood}%
                  </div>
                </div>

                {/* Active Indicator */}
                {(selectedMood === mood || currentMood === mood) && (
                  <motion.div
                    className="absolute -top-2 -right-2 w-3 h-3 sm:w-4 sm:h-4 rounded-full bg-white shadow-lg border border-gray-200"
                    initial={{ scale: 0 }}
                    animate={{ scale: 1 }}
                    transition={{ type: "spring", stiffness: 500, damping: 30 }}
                  />
                )}
              </motion.button>
            ))}
          </div>

          {/* Current Mood Display - ZWIƒòKSZONE ODSTƒòPY */}
          <motion.div 
            className="text-center mb-6 sm:mb-8"
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 0.2 }}
          >
            <div className="inline-flex items-center gap-4 sm:gap-6 px-6 sm:px-8 py-4 sm:py-5 rounded-2xl sm:rounded-3xl bg-white/90 backdrop-blur-sm border border-white/30 shadow-xl">
              <MoodEmoji 
                mood={currentMood} 
                size={isMobile ? "text-3xl" : "text-4xl"} 
              />
              <div className="text-left space-y-1">
                <div className="text-lg sm:text-xl font-bold text-gray-900">
                  {getMoodLabel(currentMood)}
                </div>
                <div className="text-sm sm:text-base text-gray-700 flex items-center gap-3">
                  <span className="bg-gray-100 rounded-full px-3 py-1.5 border border-gray-200 font-medium">
                    {currentMood}%
                  </span>
                  <span className="text-gray-500">‚Ä¢</span>
                  <span>{getMoodDescription(currentMood)}</span>
                </div>
              </div>
            </div>
          </motion.div>

          {/* Action Buttons - WIƒòKSZE PRZYCISKI I ODSTƒòPY */}
          {!todayEntry && (
            <motion.div 
              className="flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.3 }}
            >
              <button
                onClick={handleSave}
                disabled={selectedMood === null}
                className={cn(
                  "px-6 sm:px-8 md:px-10 py-4 sm:py-5 rounded-2xl font-semibold text-white transition-all duration-300 transform hover:scale-105",
                  "shadow-xl flex items-center justify-center gap-3 text-base sm:text-lg min-h-[60px]",
                  selectedMood === null 
                    ? "bg-gray-400 cursor-not-allowed" 
                    : `bg-gradient-to-r ${getMoodColor(currentMood)} hover:shadow-2xl`
                )}
              >
                <Zap className="h-5 w-5 sm:h-6 sm:w-6" />
                {isMobile ? 'Zapisz' : 'Zapisz nastr√≥j'}
              </button>
              
              <button
                onClick={onAddNote}
                className="px-6 sm:px-8 md:px-10 py-4 sm:py-5 rounded-2xl font-semibold border-2 border-gray-300 text-gray-700 transition-all duration-300 transform hover:scale-105 hover:border-gray-400 flex items-center justify-center gap-3 text-base sm:text-lg min-h-[60px] bg-white/80 backdrop-blur-sm hover:bg-white"
              >
                <Heart className="h-5 w-5 sm:h-6 sm:w-6" />
                {isMobile ? 'Notatka' : 'Dodaj notatkƒô'}
              </button>

              <button
                onClick={() => {
                  setShowAISuggestions(true)
                  fetchAIInsights()
                }}
                className="px-6 sm:px-8 md:px-10 py-4 sm:py-5 rounded-2xl font-semibold bg-white/80 backdrop-blur-sm border-2 border-blue-200 text-blue-700 transition-all duration-300 transform hover:scale-105 hover:bg-white flex items-center justify-center gap-3 text-base sm:text-lg min-h-[60px]"
              >
                <Brain className="h-5 w-5 sm:h-6 sm:w-6" />
                {isMobile ? 'AI' : 'AI Insights'}
              </button>
            </motion.div>
          )}
        </div>

        {/* Quick Stats - WIƒòKSZE KARTY I ODSTƒòPY */}
        <motion.div 
          className="grid grid-cols-2 sm:grid-cols-4 gap-4 sm:gap-6"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.4 }}
        >
          <div className="text-center p-4 sm:p-5 rounded-xl sm:rounded-2xl bg-white/70 backdrop-blur-sm border border-white/30 shadow-lg">
            <div className="text-xl sm:text-2xl font-bold text-blue-600 mb-2">{streak}</div>
            <div className="text-sm text-gray-700 font-medium">dni streak</div>
          </div>
          <div className="text-center p-4 sm:p-5 rounded-xl sm:rounded-2xl bg-white/70 backdrop-blur-sm border border-white/30 shadow-lg">
            <div className="text-xl sm:text-2xl font-bold text-green-600 mb-2">{averageMood}%</div>
            <div className="text-sm text-gray-700 font-medium">≈õrednia</div>
          </div>
          <div className="text-center p-4 sm:p-5 rounded-xl sm:rounded-2xl bg-white/70 backdrop-blur-sm border border-white/30 shadow-lg">
            <div className={`text-xl sm:text-2xl font-bold mb-2 ${trend > 0 ? 'text-green-600' : trend < 0 ? 'text-red-600' : 'text-gray-600'}`}>
              {trend > 0 ? '+' : ''}{trend}%
            </div>
            <div className="text-sm text-gray-700 font-medium">trend</div>
          </div>
          <div className="text-center p-4 sm:p-5 rounded-xl sm:rounded-2xl bg-white/70 backdrop-blur-sm border border-white/30 shadow-lg">
            <div className="text-xl sm:text-2xl font-bold text-purple-600 mb-2">{consistency}%</div>
            <div className="text-sm text-gray-700 font-medium">konsystencja</div>
          </div>
        </motion.div>
      </div>

      {/* AI Insights Modal - POPRAWIONE ODSTƒòPY */}
      <AnimatePresence>
        {showAISuggestions && (
          <>
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50"
              onClick={() => setShowAISuggestions(false)}
            />
            
            <motion.div
              initial={{ opacity: 0, scale: 0.9, y: 20 }}
              animate={{ opacity: 1, scale: 1, y: 0 }}
              exit={{ opacity: 0, scale: 0.9, y: 20 }}
              transition={{ type: "spring", damping: 25, stiffness: 300 }}
              className="fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-50 w-[95vw] sm:w-[90vw] max-w-2xl max-h-[90vh] sm:max-h-[85vh] overflow-hidden bg-white rounded-3xl shadow-2xl border border-gray-200"
            >
              <div className="flex items-center justify-between p-6 sm:p-8 border-b border-gray-100 bg-gradient-to-r from-blue-50 to-purple-50">
                <div className="flex items-center gap-3 sm:gap-4">
                  <div className="p-3 bg-white rounded-xl shadow-sm">
                    <Sparkles className="h-6 w-6 sm:h-7 sm:w-7 text-purple-500" />
                  </div>
                  <div>
                    <h3 className="font-bold text-gray-900 text-lg sm:text-xl">AI Analiza Twojego Nastroju</h3>
                    <p className="text-gray-600 text-sm sm:text-base">Spersonalizowane insights</p>
                  </div>
                </div>
                <button 
                  onClick={() => setShowAISuggestions(false)}
                  className="p-3 hover:bg-white rounded-xl transition-colors"
                >
                  <span className="text-2xl sm:text-3xl text-gray-400 hover:text-gray-600">√ó</span>
                </button>
              </div>
              
              <div className="p-6 sm:p-8 max-h-[65vh] sm:max-h-[60vh] overflow-y-auto">
                {loadingAI ? (
                  <div className="space-y-6 text-center py-8 sm:py-12">
                    <div className="animate-spin rounded-full h-12 w-12 sm:h-14 sm:w-14 border-b-2 border-blue-500 mx-auto"></div>
                    <p className="text-gray-600 text-base sm:text-lg">AI analizuje Tw√≥j nastr√≥j...</p>
                  </div>
                ) : aiInsights ? (
                  <div className="space-y-6 sm:space-y-8">
                    {/* Analiza */}
                    <div className="p-5 sm:p-6 bg-blue-50 rounded-2xl border border-blue-100">
                      <div className="flex items-start gap-4 sm:gap-5">
                        <Target className="h-6 w-6 sm:h-7 sm:w-7 text-blue-500 mt-0.5 flex-shrink-0" />
                        <div className="space-y-3">
                          <p className="font-bold text-blue-900 text-lg sm:text-xl">Analiza Nastroju</p>
                          <p className="text-blue-800 leading-relaxed text-base sm:text-lg">{aiInsights.analysis}</p>
                        </div>
                      </div>
                    </div>

                    {/* Sugestie */}
                    <div className="space-y-4">
                      <p className="font-bold text-gray-900 text-lg sm:text-xl flex items-center gap-3">
                        <Zap className="h-6 w-6 sm:h-7 sm:w-7 text-yellow-500" />
                        Spersonalizowane Sugestie
                      </p>
                      <div className="space-y-4">
                        {aiInsights.suggestions.map((suggestion, index) => (
                          <div key={index} className="flex items-start gap-4 p-4 sm:p-5 rounded-xl bg-gray-50 hover:bg-gray-100 transition-colors border border-gray-100">
                            <Heart className="h-5 w-5 sm:h-6 sm:w-6 text-rose-500 mt-0.5 flex-shrink-0" />
                            <span className="text-gray-700 leading-relaxed text-base sm:text-lg flex-1">{suggestion}</span>
                          </div>
                        ))}
                      </div>
                    </div>

                    {/* Wzorzec i Encouragement */}
                    <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-6">
                      <div className="p-4 sm:p-5 bg-green-50 rounded-xl border border-green-100">
                        <p className="text-sm sm:text-base font-bold text-green-800 mb-2">üéØ Wykryty Wzorzec</p>
                        <p className="text-sm sm:text-base text-green-700">{aiInsights.pattern}</p>
                      </div>
                      <div className="p-4 sm:p-5 bg-purple-50 rounded-xl border border-purple-100">
                        <p className="text-sm sm:text-base font-bold text-purple-800 mb-2">üí´ Motywacja</p>
                        <p className="text-sm sm:text-base text-purple-700">{aiInsights.encouragement}</p>
                      </div>
                    </div>

                    {/* Special Tip */}
                    {aiInsights.specialTip && (
                      <div className="p-4 sm:p-5 bg-orange-50 rounded-xl border border-orange-100">
                        <p className="text-sm sm:text-base font-bold text-orange-800 mb-2">üí° Specjalna Rada</p>
                        <p className="text-sm sm:text-base text-orange-700">{aiInsights.specialTip}</p>
                      </div>
                    )}
                  </div>
                ) : null}
              </div>
              
              <div className="p-6 sm:p-8 border-t border-gray-100 bg-gray-50">
                <button
                  onClick={() => setShowAISuggestions(false)}
                  className="w-full py-4 sm:py-5 bg-blue-500 text-white rounded-xl hover:bg-blue-600 transition-colors font-semibold text-lg shadow-lg"
                >
                  Zamknij
                </button>
              </div>
            </motion.div>
          </>
        )}
      </AnimatePresence>

      {/* CSS dla ukrycia scrollbara na mobile */}
      <style jsx>{`
        .hide-scrollbar {
          -ms-overflow-style: none;
          scrollbar-width: none;
        }
        .hide-scrollbar::-webkit-scrollbar {
          display: none;
        }
      `}</style>
    </div>
  )
}

function getConsistencyDescription(consistency: number): string {
  if (consistency >= 80) return 'Wysoka stabilno≈õƒá'
  if (consistency >= 60) return 'Umiarkowana stabilno≈õƒá'
  if (consistency >= 40) return 'Zmienne emocje'
  return 'Du≈ºa zmienno≈õƒá'
}'use client'

import { useState, useEffect, useRef, useCallback, useMemo } from 'react'
import { motion } from 'framer-motion'
import { Card, CardContent } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Brain, Target, Zap, X, Sparkles, Clock, RefreshCw, GraduationCap, Activity, Lightbulb } from 'lucide-react'
import { cn } from '@/lib/utils'

// Cache dla komponentu
const componentCache = new Map()

// Prawdziwe wywo≈Çanie AI - u≈ºywamy twojego dzia≈ÇajƒÖcego endpointu
const fetchAIAnalysis = async (userData: any) => {
  const cacheKey = JSON.stringify({
    mood: userData.currentMood,
    streak: userData.streak,
    trend: userData.trend,
    consistency: userData.consistency,
    level: userData.level,
    entriesCount: userData.moodEntries?.length || 0,
    notesCount: userData.userNotes?.length || 0
  })

  // Sprawd≈∫ cache
  if (componentCache.has(cacheKey)) {
    const cached = componentCache.get(cacheKey)
    if (Date.now() - cached.timestamp < 5 * 60 * 1000) {
      console.log('üíæ Using component cache')
      return cached.data
    }
  }

  try {
    const moodEntries = userData.moodEntries || []
    const userNotes = userData.userNotes || []
    
    // Przygotuj dane dla AI
    const moodDescription = getMoodDescription(userData.currentMood || 50)
    const recentMoods = moodEntries.slice(-5).map((e: any) => e.mood || 50)
    const averageRecentMood = recentMoods.length > 0 
      ? Math.round(recentMoods.reduce((a: number, b: number) => a + b, 0) / recentMoods.length)
      : 50

    // Stw√≥rz prompt dla analizy nastroju
    const analysisPrompt = `Jeste≈õ asystentem wellbeing w aplikacji "Spok√≥j w G≈Çowie" dla m≈Çodzie≈ºy.

DANE U≈ªYTKOWNIKA:
- Aktualny nastr√≥j: ${userData.currentMood || 50}/100 (${moodDescription})
- Streak: ${userData.streak || 0} dni
- Poziom: ${userData.level || 1}
- Trend nastroju: ${userData.trend || 0}%
- Stabilno≈õƒá: ${userData.consistency || 50}%
- ≈öredni nastr√≥j: ${userData.averageMood || 50}%
- Liczba wpis√≥w: ${moodEntries.length}
- Ostatnie nastroje: ${recentMoods.join(', ')}
- ≈öredni z ostatnich 5 dni: ${averageRecentMood}%

PROSZƒò O ANALIZƒò W TYM FORMACIE:
{
"deepAnalysis": "2-3 zdania analizy obecnego nastroju i trend√≥w",
"personalizedChallenge": "kr√≥tkie wyzwanie na dzi≈õ (max 8 s≈Ç√≥w)",
"scienceBackedTool": "konkretna technika wellbeing (max 6 s≈Ç√≥w)", 
"supportEcosystem": "strategia wsparcia (max 8 s≈Ç√≥w)",
"breakthroughInsight": "motywujƒÖcy wglƒÖd o nastoju",
"immediateBreakthrough": "natychmiastowa akcja (max 5 s≈Ç√≥w)"
}

BƒÖd≈∫:
- Konkretny i praktyczny
- WspierajƒÖcy ale nie infantylny
- Dopasowany do nastroju i streak
- W jƒôzyku polskim
- Max 200 znak√≥w w ka≈ºdym polu`

    console.log('üîç Fetching AI analysis from chat endpoint...')

    const controller = new AbortController()
    const timeoutId = setTimeout(() => controller.abort(), 15000)

    // U≈ºywamy twojego dzia≈ÇajƒÖcego endpointu /api/ai-chat
    const response = await fetch('/api/ai-chat', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      signal: controller.signal,
      body: JSON.stringify({ 
        message: analysisPrompt 
      })
    })
    
    clearTimeout(timeoutId)

    if (!response.ok) {
      throw new Error(`AI API failed: ${response.status}`)
    }

    const data = await response.json()
    console.log('üìÑ AI Response received:', data)

    // Parsujemy odpowied≈∫ tekstowƒÖ na obiekt
    const aiResponse = parseAIResponse(data.response, userData)
    const result = transformAIResponse(aiResponse, userData)
    
    // Zapisz w cache
    componentCache.set(cacheKey, {
      data: result,
      timestamp: Date.now()
    })
    
    return result
    
  } catch (error) {
    if (error.name === 'AbortError') {
      console.log('‚è∞ Request timeout')
    } else {
      console.error('AI fetch failed:', error)
    }
    return generateLocalAIAnalysis(userData)
  }
}

// Funkcja do parsowania odpowiedzi AI
const parseAIResponse = (responseText: string, userData: any) => {
  try {
    // Spr√≥buj znale≈∫ƒá JSON w odpowiedzi
    const jsonMatch = responseText.match(/\{[\s\S]*\}/)
    if (jsonMatch) {
      const jsonString = jsonMatch[0]
      return JSON.parse(jsonString)
    }
    
    // Je≈õli nie ma JSON, u≈ºyj fallback
    throw new Error('No JSON found in response')
  } catch (error) {
    console.log('‚ùå Could not parse AI response as JSON, using text analysis')
    // Analizujemy tekst i tworzymy strukturƒô na podstawie tre≈õci
    return createAnalysisFromText(responseText, userData)
  }
}

// Tworzy strukturƒô analizy z tekstowej odpowiedzi AI
const createAnalysisFromText = (text: string, userData: any) => {
  const sentences = text.split('.').filter(s => s.trim().length > 0)
  
  return {
    deepAnalysis: sentences[0] || "Analiza Twojego nastroju w trakcie...",
    personalizedChallenge: sentences[1] || "Zr√≥b 3 g≈Çƒôbokie oddechy",
    scienceBackedTool: "Technika oddechu 4-7-8",
    supportEcosystem: "Poranna rutyna z 3 oddechami", 
    breakthroughInsight: sentences[2] || "Ma≈Çe kroki prowadzƒÖ do wielkich zmian",
    immediateBreakthrough: "Zr√≥b pauzƒô na oddech",
    isRealAI: true
  }
}

// Transformacja odpowiedzi AI
const transformAIResponse = (aiData: any, userData: any) => {
  const safeUserData = {
    currentMood: userData.currentMood || 50,
    consistency: userData.consistency || 50,
    trend: userData.trend || 0,
    streak: userData.streak || 0
  }
  
  return {
    deepAnalysis: aiData.deepAnalysis || "AI analizuje Tw√≥j nastr√≥j w kontek≈õcie codziennych do≈õwiadcze≈Ñ...",
    sections: [
      {
        icon: <Target className="h-5 w-5" />,
        title: "üéØ Analiza Profilu",
        subtitle: "Tw√≥j unikalny profil emocjonalny", 
        content: aiData.deepAnalysis || "Przeanalizuj sw√≥j nastr√≥j w kontek≈õcie codziennych do≈õwiadcze≈Ñ.",
        color: "purple",
        duration: "Refleksja",
        priority: "high",
        type: "analysis"
      },
      {
        icon: <Zap className="h-5 w-5" />,
        title: "üöÄ Wyzwanie",
        subtitle: "Dopasowane do Ciebie",
        content: aiData.personalizedChallenge || "Stw√≥rz codzienny rytua≈Ç samoobserwacji przez 5 dni.",
        color: "blue", 
        duration: "5 dni",
        priority: "high",
        type: "challenge"
      },
      {
        icon: <GraduationCap className="h-5 w-5" />,
        title: "üß† Technika",
        subtitle: "Naukowa metoda",
        content: aiData.scienceBackedTool || "Technika oddechu 4-7-8: 4s wdech, 7s pauza, 8s wydech.",
        color: "green",
        duration: "5-10 min", 
        priority: "high",
        type: "tool"
      },
      {
        icon: <Activity className="h-5 w-5" />,
        title: "üí´ Strategia",
        subtitle: "Tw√≥j ekosystem wsparcia",
        content: aiData.supportEcosystem || "Poranny rytua≈Ç: 3 g≈Çƒôbokie oddechy + intencja na dzie≈Ñ.",
        color: "orange",
        duration: "Codziennie",
        priority: "medium",
        type: "strategy"
      },
      {
        icon: <Lightbulb className="h-5 w-5" />,
        title: "üîç WglƒÖd", 
        subtitle: "Odkrycie o sobie",
        content: aiData.breakthroughInsight || "Regularno≈õƒá w obserwacji nastroju sama w sobie jest terapiƒÖ.",
        color: "pink",
        duration: "Przemy≈õlenia",
        priority: "medium",
        type: "insight"
      },
      {
        icon: <Sparkles className="h-5 w-5" />,
        title: "‚ö° Akcja",
        subtitle: "Zacznij teraz",
        content: aiData.immediateBreakthrough || "Zr√≥b 2-minutowƒÖ pauzƒô na ≈õwiadomy oddech.",
        color: "red",
        duration: "15 min",
        priority: "high", 
        type: "action"
      }
    ],
    isRealAI: aiData.isRealAI !== false,
    timestamp: new Date().toISOString(),
    profileType: getProfileType(
      safeUserData.currentMood, 
      safeUserData.consistency, 
      safeUserData.trend, 
      safeUserData.streak
    )
  }
}

// Lokalna generacja tylko jako fallback
const generateLocalAIAnalysis = (userData: any) => {
  const currentMood = userData.currentMood || 50
  const streak = userData.streak || 0
  const trend = userData.trend || 0
  const consistency = userData.consistency || 50
  
  return {
    deepAnalysis: `AI analizuje Tw√≥j nastr√≥j ${currentMood}% w kontek≈õcie ${streak}-dniowej praktyki. Trend ${trend}% i stabilno≈õƒá ${consistency}% tworzƒÖ unikalny wzorzec emocjonalny.`,
    personalizedChallenge: `Przez 3-5 dni praktykuj uwa≈ºnƒÖ obserwacjƒô swoich reakcji emocjonalnych w kluczowych momentach dnia.`,
    scienceBackedTool: "Technika oddechu 4-7-8: 4s wdech, 7s pauza, 8s wydech. Reguluje system nerwowy.",
    supportEcosystem: "Stw√≥rz codzienny rytua≈Ç samoobserwacji wykorzystujƒÖcy Twoje obecne nawyki.",
    breakthroughInsight: "Twoja regularno≈õƒá w zapisywaniu nastroju sama w sobie jest potƒô≈ºnym narzƒôdziem samopoznania.",
    immediateBreakthrough: "Zr√≥b 2-minutowƒÖ pauzƒô na ≈õwiadomy oddech i zauwa≈º jak wp≈Çywa na Tw√≥j nastr√≥j.",
    isRealAI: false,
    timestamp: new Date().toISOString(),
    sections: [
      {
        icon: <Target className="h-5 w-5" />,
        title: "üéØ Analiza Profilu",
        subtitle: "Tw√≥j unikalny profil emocjonalny", 
        content: `AI analizuje Tw√≥j nastr√≥j ${currentMood}% w kontek≈õcie ${streak}-dniowej praktyki.`,
        color: "purple",
        duration: "Refleksja",
        priority: "high",
        type: "analysis"
      },
      {
        icon: <Zap className="h-5 w-5" />,
        title: "üöÄ Wyzwanie",
        subtitle: "Dopasowane do Ciebie",
        content: "Przez 3-5 dni praktykuj uwa≈ºnƒÖ obserwacjƒô swoich reakcji emocjonalnych.",
        color: "blue", 
        duration: "5 dni",
        priority: "high",
        type: "challenge"
      },
      {
        icon: <GraduationCap className="h-5 w-5" />,
        title: "üß† Technika",
        subtitle: "Naukowa metoda",
        content: "Technika oddechu 4-7-8: 4s wdech, 7s pauza, 8s wydech.",
        color: "green",
        duration: "5-10 min", 
        priority: "high",
        type: "tool"
      },
      {
        icon: <Activity className="h-5 w-5" />,
        title: "üí´ Strategia",
        subtitle: "Tw√≥j ekosystem wsparcia",
        content: "Stw√≥rz codzienny rytua≈Ç samoobserwacji wykorzystujƒÖcy Twoje obecne nawyki.",
        color: "orange",
        duration: "Codziennie",
        priority: "medium",
        type: "strategy"
      },
      {
        icon: <Lightbulb className="h-5 w-5" />,
        title: "üîç WglƒÖd", 
        subtitle: "Odkrycie o sobie",
        content: "Twoja regularno≈õƒá w zapisywaniu nastroju sama w sobie jest potƒô≈ºnym narzƒôdziem samopoznania.",
        color: "pink",
        duration: "Przemy≈õlenia",
        priority: "medium",
        type: "insight"
      },
      {
        icon: <Sparkles className="h-5 w-5" />,
        title: "‚ö° Akcja",
        subtitle: "Zacznij teraz",
        content: "Zr√≥b 2-minutowƒÖ pauzƒô na ≈õwiadomy oddech i zauwa≈º jak wp≈Çywa na Tw√≥j nastr√≥j.",
        color: "red",
        duration: "15 min",
        priority: "high", 
        type: "action"
      }
    ],
    profileType: getProfileType(currentMood, consistency, trend, streak)
  }
}

function getMoodDescription(mood: number): string {
  if (mood <= 20) return 'bardzo niski'
  if (mood <= 40) return 'niski'
  if (mood <= 60) return 'neutralny'
  if (mood <= 80) return 'wysoki'
  return 'bardzo wysoki'
}

function getProfileType(mood: number, consistency: number, trend: number, streak: number): string {
  if (consistency > 70 && trend > 0) return 'STABILNY WZROST'
  if (consistency > 70 && trend < 0) return 'STABILNA REFLEKSJA' 
  if (consistency < 50 && trend > 0) return 'DYNAMICZNY WZROST'
  if (consistency < 50 && trend < 0) return 'WRA≈ªLIWO≈öƒÜ'
  if (streak > 7) return 'ZAAWANSOWANY'
  return '≈öWIADOMY'
}

interface AIMoodInsightsProps {
  currentMood?: number
  moodEntries?: any[]
  streak?: number
  trend?: number
  consistency?: number
  averageMood?: number
  level?: number
  onBack: () => void
  userNotes?: any[]
}

export const AIMoodInsights = ({
  currentMood = 50,
  moodEntries = [],
  streak = 0,
  trend = 0,
  consistency = 50,
  averageMood = 50,
  level = 1,
  onBack,
  userNotes = []
}: AIMoodInsightsProps) => {
  const [aiData, setAiData] = useState<any>(null)
  const [isLoading, setIsLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const modalRef = useRef<HTMLDivElement>(null)
  const isMounted = useRef(true)
  const requestInProgress = useRef(false)

  // Stabilizuj dane u≈ºytkownika
  const userData = useMemo(() => ({
    currentMood,
    moodEntries,
    streak,
    trend,
    consistency,
    averageMood,
    level,
    userNotes
  }), [currentMood, streak, trend, consistency, level, 
      moodEntries.length,
      userNotes.length
  ])

  const loadAIAnalysis = useCallback(async () => {
    if (requestInProgress.current) {
      console.log('üõë Request already in progress, skipping...')
      return
    }

    requestInProgress.current = true
    
    try {
      setIsLoading(true)
      setError(null)
      
      console.log('üöÄ Starting AI analysis...')
      const analysis = await fetchAIAnalysis(userData)
      
      if (isMounted.current) {
        setAiData(analysis)
        console.log('‚úÖ AI analysis completed')
      }
    } catch (err) {
      console.error('‚ùå AI analysis failed:', err)
      if (isMounted.current) {
        setError('Nie uda≈Ço siƒô za≈Çadowaƒá analizy AI')
      }
    } finally {
      if (isMounted.current) {
        setIsLoading(false)
      }
      requestInProgress.current = false
    }
  }, [userData])

  useEffect(() => {
    isMounted.current = true
    
    // Uruchom tylko raz przy montowaniu
    loadAIAnalysis()

    return () => {
      isMounted.current = false
    }
  }, [loadAIAnalysis])

  const getColorClasses = (color: string, type = 'card') => {
    const colorMap: any = {
      purple: {
        card: 'bg-purple-50/80 border-purple-200',
        icon: 'bg-purple-100 text-purple-600',
        text: 'text-purple-900',
        badge: 'bg-purple-100 text-purple-700'
      },
      blue: {
        card: 'bg-blue-50/80 border-blue-200', 
        icon: 'bg-blue-100 text-blue-600',
        text: 'text-blue-900',
        badge: 'bg-blue-100 text-blue-700'
      },
      green: {
        card: 'bg-green-50/80 border-green-200',
        icon: 'bg-green-100 text-green-600',
        text: 'text-green-900',
        badge: 'bg-green-100 text-green-700'
      },
      orange: {
        card: 'bg-orange-50/80 border-orange-200',
        icon: 'bg-orange-100 text-orange-600',
        text: 'text-orange-900',
        badge: 'bg-orange-100 text-orange-700'
      },
      pink: {
        card: 'bg-pink-50/80 border-pink-200',
        icon: 'bg-pink-100 text-pink-600',
        text: 'text-pink-900',
        badge: 'bg-pink-100 text-pink-700'
      },
      red: {
        card: 'bg-red-50/80 border-red-200',
        icon: 'bg-red-100 text-red-600',
        text: 'text-red-900',
        badge: 'bg-red-100 text-red-700'
      }
    }
    return colorMap[color]?.[type] || colorMap.blue[type]
  }

  const handleRefresh = async () => {
    if (requestInProgress.current) {
      console.log('üõë Request in progress, please wait...')
      return
    }

    // Wyczy≈õƒá cache dla obecnych parametr√≥w
    const cacheKey = JSON.stringify({
      mood: currentMood,
      streak: streak,
      trend: trend,
      consistency: consistency,
      level: level,
      entriesCount: moodEntries.length,
      notesCount: userNotes.length
    })
    componentCache.delete(cacheKey)

    setIsLoading(true)
    setError(null)
    
    await loadAIAnalysis()
  }

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/40 backdrop-blur-sm">
      <motion.div
        ref={modalRef}
        initial={{ opacity: 0, scale: 0.95 }}
        animate={{ opacity: 1, scale: 1 }}
        className="bg-white rounded-2xl shadow-xl border border-gray-200 w-full max-w-6xl max-h-[95vh] overflow-hidden flex flex-col"
      >
        {/* Header */}
        <div className="flex items-center justify-between p-4 border-b border-gray-100 bg-gradient-to-r from-blue-50/50 to-purple-50/50">
          <div className="flex items-center gap-3">
            <div className="p-2 bg-white rounded-xl shadow-sm border border-gray-100">
              <Brain className="h-6 w-6 text-purple-500" />
            </div>
            <div>
              <h2 className="font-bold text-gray-900">Spok√≥j AI</h2>
              <p className="text-xs text-gray-600">Personalizowana analiza Twojego nastroju</p>
            </div>
          </div>
          <div className="flex items-center gap-2">
            {aiData?.isRealAI && (
              <div className="flex items-center gap-1 px-2 py-1 bg-green-100 text-green-700 rounded-full text-xs">
                <Sparkles className="h-3 w-3" />
                AI Premium
              </div>
            )}
            <Button
              onClick={onBack}
              variant="ghost"
              size="sm"
              className="h-8 w-8 p-0 hover:bg-gray-100"
            >
              <X className="h-4 w-4" />
            </Button>
          </div>
        </div>

        {/* Content */}
        <div className="flex-1 overflow-y-auto">
          {isLoading ? (
            <div className="flex flex-col items-center justify-center py-16 space-y-4">
              <motion.div
                animate={{ rotate: 360 }}
                transition={{ duration: 2, repeat: Infinity, ease: "linear" }}
                className="w-12 h-12 border-3 border-blue-200 border-t-blue-600 rounded-full"
              />
              <div className="text-center">
                <p className="font-semibold text-gray-900">AI analizuje Tw√≥j nastr√≥j...</p>
                <p className="text-sm text-gray-600 mt-1">To potrwa tylko chwilƒô</p>
              </div>
            </div>
          ) : error ? (
            <div className="flex flex-col items-center justify-center py-16 space-y-4">
              <div className="text-red-500 text-lg">‚ùå</div>
              <p className="text-gray-900">{error}</p>
              <Button onClick={handleRefresh} variant="outline">
                Spr√≥buj ponownie
              </Button>
            </div>
          ) : aiData ? (
            <div className="p-6 space-y-6">
              {/* Stats Grid */}
              <div className="grid grid-cols-4 gap-3">
                <CompactStatCard icon="üòä" value={currentMood} label="Nastr√≥j" />
                <CompactStatCard icon="üî•" value={streak} label="Streak" />
                <CompactStatCard icon="üìà" value={`${trend > 0 ? '+' : ''}${trend}%`} label="Trend" />
                <CompactStatCard icon="üí™" value={`${consistency}%`} label="Stabilno≈õƒá" />
              </div>

              {/* Profile Badge */}
              {aiData.profileType && (
                <div className="flex justify-center">
                  <div className="bg-gradient-to-r from-purple-500 to-blue-500 text-white px-4 py-2 rounded-full text-sm font-medium shadow-sm">
                    üë§ Profil: {aiData.profileType}
                  </div>
                </div>
              )}

              {/* G≈Ç√≥wna analiza */}
              <Card className="border-0 bg-gradient-to-r from-blue-50 to-purple-50 shadow-sm">
                <CardContent className="p-4">
                  <div className="flex items-start gap-3">
                    <div className="p-2 bg-white rounded-lg shadow-xs border border-blue-200">
                      <Target className="h-4 w-4 text-blue-600" />
                    </div>
                    <div className="flex-1">
                      <h3 className="font-semibold text-gray-900 text-sm mb-2">Analiza AI</h3>
                      <p className="text-gray-700 text-sm leading-relaxed">{aiData.deepAnalysis}</p>
                      <div className="flex items-center gap-3 mt-3 text-xs text-gray-500">
                        <div className="flex items-center gap-1">
                          <Clock className="h-3 w-3" />
                          {new Date(aiData.timestamp).toLocaleTimeString('pl-PL')}
                        </div>
                        {aiData.isRealAI && (
                          <div className="flex items-center gap-1">
                            <Sparkles className="h-3 w-3" />
                            AI Premium
                          </div>
                        )}
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>

              {/* Sekcje AI */}
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {aiData.sections?.map((section: any, index: number) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: index * 0.1 }}
                  >
                    <Card className={cn(
                      "border-0 shadow-xs hover:shadow-sm transition-all duration-200 h-full",
                      getColorClasses(section.color, 'card')
                    )}>
                      <CardContent className="p-4">
                        <div className="flex items-start justify-between mb-3">
                          <div className="flex items-center gap-2">
                            <div className={cn(
                              "p-1.5 rounded-lg",
                              getColorClasses(section.color, 'icon')
                            )}>
                              {section.icon}
                            </div>
                            <div>
                              <h4 className={cn(
                                "font-semibold text-sm",
                                getColorClasses(section.color, 'text')
                              )}>
                                {section.title}
                              </h4>
                              <p className="text-xs text-gray-600">{section.subtitle}</p>
                            </div>
                          </div>
                          <span className={cn(
                            "text-xs px-2 py-1 rounded-full whitespace-nowrap",
                            getColorClasses(section.color, 'badge')
                          )}>
                            {section.duration}
                          </span>
                        </div>

                        <p className={cn(
                          "text-sm leading-relaxed",
                          getColorClasses(section.color, 'text')
                        )}>
                          {section.content}
                        </p>

                        {section.priority === 'high' && (
                          <div className="flex items-center gap-1 mt-3">
                            <div className="w-2 h-2 bg-red-500 rounded-full animate-pulse" />
                            <span className="text-xs text-red-600 font-medium">Wysoki priorytet</span>
                          </div>
                        )}
                      </CardContent>
                    </Card>
                  </motion.div>
                ))}
              </div>
            </div>
          ) : null}
        </div>

        {/* Footer */}
        <div className="p-4 border-t border-gray-100 bg-gray-50/50">
          <div className="flex gap-3">
            <Button
              onClick={onBack}
              variant="outline"
              className="flex-1 border-gray-300"
            >
              Wr√≥ƒá
            </Button>
            <Button
              onClick={handleRefresh}
              disabled={isLoading}
              className="flex-1 bg-blue-600 hover:bg-blue-700"
            >
              <RefreshCw className="h-4 w-4 mr-2" />
              {isLoading ? '≈Åadowanie...' : 'Nowa Analiza'}
            </Button>
          </div>
        </div>
      </motion.div>
    </div>
  )
}

function CompactStatCard({ icon, value, label }: { icon: string, value: string | number, label: string }) {
  return (
    <div className="text-center p-3 bg-white rounded-lg border border-gray-200 shadow-xs">
      <div className="text-lg mb-1">{icon}</div>
      <div className="font-bold text-gray-900 text-sm">{value}</div>
      <div className="text-xs text-gray-600">{label}</div>
    </div>
  )
}// src/components/protected-route.tsx
'use client'
import { useAuth } from '@/components/providers/auth-provider'
import { redirect } from 'next/navigation'

export default function ProtectedRoute({ children }: { children: React.ReactNode }) {
  const { user, loading } = useAuth()

  if (loading) {
    return (
      <div className="flex justify-center items-center min-h-screen">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500"></div>
      </div>
    )
  }

  if (!user) {
    redirect('/login')
  }

  return <>{children}</>
}'use client'

import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { MessageCircle } from 'lucide-react'
import { ChatInterface } from './ChatInterface'

export function ChatButton() {
  const [isChatOpen, setIsChatOpen] = useState(false)

  return (
    <>
      <Button
        onClick={() => setIsChatOpen(true)}
        className="fixed bottom-6 right-6 w-14 h-14 rounded-full shadow-2xl bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 z-40"
        size="icon"
      >
        <MessageCircle className="h-6 w-6 text-white" />
      </Button>

      <ChatInterface 
        isOpen={isChatOpen} 
        onClose={() => setIsChatOpen(false)} 
      />
    </>
  )
}'use client'

import { useState, useEffect, useRef } from 'react'
import { useAuth } from '@/components/providers/auth-provider'
import { chatService, type Conversation, type ChatMessage } from '@/lib/chat-service'
import userService from '@/lib/user-service'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { 
  MessageCircle, 
  Send, 
  Users, 
  Search,
  X,
  Clock
} from 'lucide-react'
import { cn } from '@/lib/utils'
import { motion, AnimatePresence } from 'framer-motion'

interface ChatInterfaceProps {
  isOpen: boolean
  onClose: () => void
}

export function ChatInterface({ isOpen, onClose }: ChatInterfaceProps) {
  const { user } = useAuth()
  const [conversations, setConversations] = useState<Conversation[]>([])
  const [activeConversation, setActiveConversation] = useState<string | null>(null)
  const [messages, setMessages] = useState<ChatMessage[]>([])
  const [newMessage, setNewMessage] = useState('')
  const [loading, setLoading] = useState(false)
  const messagesEndRef = useRef<HTMLDivElement>(null)
  const [userProfiles, setUserProfiles] = useState<Map<string, any>>(new Map())

  // ≈Åaduj konwersacje
  useEffect(() => {
    if (!user?.uid || !isOpen) return

    const unsubscribe = chatService.subscribeToConversations(user.uid, async (convs) => {
      setConversations(convs)
      
      // Pobierz profile u≈ºytkownik√≥w
      const profiles = new Map()
      for (const conv of convs) {
        for (const participantId of conv.participants) {
          if (participantId !== user.uid && !profiles.has(participantId)) {
            const profile = await userService.getUserProfile(participantId)
            if (profile) {
              profiles.set(participantId, profile)
            }
          }
        }
      }
      setUserProfiles(profiles)
    })

    return () => unsubscribe()
  }, [user?.uid, isOpen])

  // ≈Åaduj wiadomo≈õci gdy konwersacja aktywna
  useEffect(() => {
    if (!activeConversation || !user?.uid) return

    const unsubscribe = chatService.subscribeToMessages(activeConversation, (msgs) => {
      setMessages(msgs)
      // Oznacz jako przeczytane
      chatService.markMessagesAsRead(activeConversation, user.uid!)
    })

    return () => unsubscribe()
  }, [activeConversation, user?.uid])

  // Scroll do najnowszej wiadomo≈õci
  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })
  }, [messages])

  const handleSendMessage = async () => {
    if (!newMessage.trim() || !activeConversation || !user?.uid) return

    const otherUserId = activeConversation.split('_').find(id => id !== user.uid)!
    
    setLoading(true)
    try {
      await chatService.sendMessage(activeConversation, user.uid, otherUserId, newMessage)
      setNewMessage('')
    } catch (error) {
      console.error('B≈ÇƒÖd wysy≈Çania wiadomo≈õci:', error)
    } finally {
      setLoading(false)
    }
  }

  const startNewConversation = async (friendId: string) => {
    if (!user?.uid) return
    
    const conversationId = await chatService.createConversation(user.uid, friendId)
    setActiveConversation(conversationId)
  }

  const getOtherParticipant = (conversation: Conversation) => {
    return conversation.participants.find(id => id !== user?.uid)!
  }

  const getParticipantName = (participantId: string) => {
    const profile = userProfiles.get(participantId)
    return profile?.displayName || 'Nieznany u≈ºytkownik'
  }

  if (!isOpen) return null

  return (
    <div className="fixed bottom-4 right-4 w-96 h-[600px] bg-white rounded-2xl shadow-2xl border border-gray-200 flex flex-col z-50">
      {/* Header */}
      <div className="flex items-center justify-between p-4 border-b border-gray-200 bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-t-2xl">
        <div className="flex items-center gap-2">
          <MessageCircle className="h-5 w-5" />
          <span className="font-semibold">Wiadomo≈õci</span>
          {conversations.some(conv => conv.unreadCount > 0) && (
            <span className="bg-red-500 text-white text-xs px-2 py-1 rounded-full">
              {conversations.reduce((acc, conv) => acc + conv.unreadCount, 0)}
            </span>
          )}
        </div>
        <Button
          variant="ghost"
          size="sm"
          onClick={onClose}
          className="text-white hover:bg-white/20"
        >
          <X className="h-4 w-4" />
        </Button>
      </div>

      {/* Content */}
      <div className="flex-1 flex">
        {/* Lista konwersacji */}
        {!activeConversation ? (
          <div className="flex-1 flex flex-col">
            <div className="p-4 border-b border-gray-100">
              <Input
                placeholder="Szukaj konwersacji..."
                className="w-full"
              />
            </div>
            
            <div className="flex-1 overflow-y-auto">
              {conversations.length === 0 ? (
                <div className="text-center py-8 text-gray-500">
                  <Users className="h-12 w-12 mx-auto mb-3 text-gray-300" />
                  <p>Brak konwersacji</p>
                  <p className="text-sm">Rozpocznij czat z znajomym!</p>
                </div>
              ) : (
                conversations.map(conversation => (
                  <ConversationItem
                    key={conversation.id}
                    conversation={conversation}
                    userProfiles={userProfiles}
                    currentUserId={user?.uid!}
                    isActive={activeConversation === conversation.id}
                    onClick={() => setActiveConversation(conversation.id)}
                  />
                ))
              )}
            </div>
          </div>
        ) : (
          /* Czat */
          <div className="flex-1 flex flex-col">
            {/* Header czatu */}
            <div className="p-3 border-b border-gray-100 flex items-center gap-3">
              <Button
                variant="ghost"
                size="sm"
                onClick={() => setActiveConversation(null)}
                className="text-gray-600"
              >
                ‚Üê
              </Button>
              <div className="flex-1">
                <div className="font-semibold text-gray-900">
                  {getParticipantName(getOtherParticipant(
                    conversations.find(c => c.id === activeConversation)!
                  ))}
                </div>
              </div>
            </div>

            {/* Wiadomo≈õci */}
            <div className="flex-1 overflow-y-auto p-4 space-y-3">
              {messages.map(message => (
                <MessageBubble
                  key={message.id}
                  message={message}
                  isOwn={message.senderId === user?.uid}
                  senderName={getParticipantName(message.senderId)}
                />
              ))}
              <div ref={messagesEndRef} />
            </div>

            {/* Input wiadomo≈õci */}
            <div className="p-3 border-t border-gray-100">
              <div className="flex gap-2">
                <Input
                  value={newMessage}
                  onChange={(e) => setNewMessage(e.target.value)}
                  onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                  placeholder="Napisz wiadomo≈õƒá..."
                  disabled={loading}
                  className="flex-1"
                />
                <Button
                  onClick={handleSendMessage}
                  disabled={!newMessage.trim() || loading}
                  className="bg-blue-500 hover:bg-blue-600"
                >
                  <Send className="h-4 w-4" />
                </Button>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  )
}

function ConversationItem({ conversation, userProfiles, currentUserId, isActive, onClick }: any) {
  const otherUserId = conversation.participants.find((id: string) => id !== currentUserId)!
  const profile = userProfiles.get(otherUserId)
  
  return (
    <div
      onClick={onClick}
      className={cn(
        "p-3 border-b border-gray-100 cursor-pointer hover:bg-gray-50 transition-colors",
        isActive && "bg-blue-50 border-blue-200"
      )}
    >
      <div className="flex items-center gap-3">
        <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-semibold">
          {profile?.displayName?.charAt(0) || 'U'}
        </div>
        <div className="flex-1 min-w-0">
          <div className="font-semibold text-gray-900 truncate">
            {profile?.displayName || 'Nieznany u≈ºytkownik'}
          </div>
          <div className="text-sm text-gray-600 truncate">
            {conversation.lastMessage || 'Brak wiadomo≈õci'}
          </div>
        </div>
        <div className="text-right">
          <div className="text-xs text-gray-500">
            {conversation.lastMessageTime.toLocaleTimeString('pl-PL', { 
              hour: '2-digit', 
              minute: '2-digit' 
            })}
          </div>
          {conversation.unreadCount > 0 && (
            <div className="bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center mt-1">
              {conversation.unreadCount}
            </div>
          )}
        </div>
      </div>
    </div>
  )
}

function MessageBubble({ message, isOwn, senderName }: any) {
  return (
    <div className={cn(
      "flex",
      isOwn ? "justify-end" : "justify-start"
    )}>
      <div className={cn(
        "max-w-xs lg:max-w-md px-4 py-2 rounded-2xl",
        isOwn 
          ? "bg-blue-500 text-white rounded-br-none" 
          : "bg-gray-100 text-gray-900 rounded-bl-none"
      )}>
        {!isOwn && (
          <div className="text-xs font-medium text-blue-600 mb-1">
            {senderName}
          </div>
        )}
        <div className="text-sm">{message.content}</div>
        <div className={cn(
          "text-xs mt-1",
          isOwn ? "text-blue-100" : "text-gray-500"
        )}>
          {message.timestamp.toLocaleTimeString('pl-PL', { 
            hour: '2-digit', 
            minute: '2-digit' 
          })}
        </div>
      </div>
    </div>
  )
}import * as React from 'react'
import { cn } from '@/lib/utils'

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      'rounded-2xl border border-border-light bg-background text-text-primary shadow-sm',
      className
    )}
    {...props}
  />
))
Card.displayName = 'Card'

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn('flex flex-col space-y-1.5 p-6', className)}
    {...props}
  />
))
CardHeader.displayName = 'CardHeader'

const CardTitle = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLHeadingElement>
>(({ className, ...props }, ref) => (
  <h3
    ref={ref}
    className={cn(
      'text-2xl font-semibold leading-none tracking-tight',
      className
    )}
    {...props}
  />
))
CardTitle.displayName = 'CardTitle'

const CardDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
  <p
    ref={ref}
    className={cn('text-sm text-text-secondary', className)}
    {...props}
  />
))
CardDescription.displayName = 'CardDescription'

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />
))
CardContent.displayName = 'CardContent'

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn('flex items-center p-6 pt-0', className)}
    {...props}
  />
))
CardFooter.displayName = 'CardFooter'

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }'use client'

import * as React from 'react'
import * as SliderPrimitive from '@radix-ui/react-slider'
import { cn } from '@/lib/utils'

const Slider = React.forwardRef<
  React.ElementRef<typeof SliderPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>
>(({ className, ...props }, ref) => (
  <SliderPrimitive.Root
    ref={ref}
    className={cn(
      'relative flex w-full touch-none select-none items-center',
      className
    )}
    {...props}
  >
    <SliderPrimitive.Track className="relative h-2 w-full grow overflow-hidden rounded-full bg-surface">
      <SliderPrimitive.Range className="absolute h-full bg-primary" />
    </SliderPrimitive.Track>
    <SliderPrimitive.Thumb className="block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50" />
  </SliderPrimitive.Root>
))
Slider.displayName = SliderPrimitive.Root.displayName

export { Slider }'use client'

import * as React from 'react'
import { cn } from '@/lib/utils'

interface ProgressProps {
  value?: number
  className?: string
}

const Progress = React.forwardRef<
  HTMLDivElement,
  ProgressProps
>(({ className, value = 0, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      'relative h-4 w-full overflow-hidden rounded-full bg-surface',
      className
    )}
    {...props}
  >
    <div
      className="h-full w-full flex-1 bg-primary transition-all"
      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}
    />
  </div>
))
Progress.displayName = 'Progress'

export { Progress }import { ReactNode } from 'react'
import Header from './header'
import Footer from './footer'

interface MainLayoutProps {
  children: ReactNode
}

export default function MainLayout({ children }: MainLayoutProps) {
  return (
    <div className="min-h-screen bg-white">
      <Header />
      <main className="container mx-auto px-4 py-8">
        {children}
      </main>
      <Footer />
    </div>
  )
}export default function Footer() {
  return (
    <footer className="border-t border-gray-200 bg-white/80 backdrop-blur-xl">
      <div className="container mx-auto px-4 sm:px-6 py-8">
        <div className="flex flex-col md:flex-row justify-between items-center gap-4">
          
          {/* Logo i copyright */}
          <div className="flex items-center gap-3">
            <div className="flex h-6 w-6 items-center justify-center rounded-lg bg-gradient-to-br from-blue-500 to-purple-600">
              <span className="text-xs font-bold text-white">S</span>
            </div>
            <span className="text-sm text-gray-600">
              ¬© 2024 Spok√≥j w g≈Çowie. Wszelkie prawa zastrze≈ºone.
            </span>
          </div>

          {/* Links */}
          <div className="flex items-center gap-6 text-sm">
            <a href="#" className="text-gray-600 hover:text-gray-900 transition-colors">
              Polityka prywatno≈õci
            </a>
            <a href="#" className="text-gray-600 hover:text-gray-900 transition-colors">
              Warunki u≈ºytkowania
            </a>
            <a href="#" className="text-gray-600 hover:text-gray-900 transition-colors">
              Wsparcie
            </a>
          </div>
        </div>
      </div>
    </footer>
  )
}'use client'

import Link from 'next/link'
import { useAuth } from '@/components/providers/auth-provider'
import { useRouter, usePathname } from 'next/navigation'
import { Button } from '@/components/ui/button'
import { LogOut, User, Sparkles, Menu, X, Home, BarChart3, Heart, MapPin, Users, BookOpen, Shield, FileText } from 'lucide-react'
import { signOut } from 'firebase/auth'
import { auth } from '@/lib/firebase'
import { useState, useEffect, useRef } from 'react'
import { cn } from '@/lib/utils'

// Konfiguracja 8 UNIKALNYCH kolor√≥w dla ka≈ºdej sekcji
const SECTION_CONFIG = {
  dashboard: {
    bg: 'bg-blue-50',
    border: 'border-blue-200',
    text: 'text-blue-700',
    activeDot: 'bg-blue-500',
    hover: 'hover:border-blue-300',
    iconColor: 'text-blue-600'
  },
  mood: {
    bg: 'bg-purple-50',
    border: 'border-purple-200',
    text: 'text-purple-700',
    activeDot: 'bg-purple-500',
    hover: 'hover:border-purple-300',
    iconColor: 'text-purple-600'
  },
  articles: {
    bg: 'bg-amber-50',
    border: 'border-amber-200',
    text: 'text-amber-700',
    activeDot: 'bg-amber-500',
    hover: 'hover:border-amber-300',
    iconColor: 'text-amber-600'
  },
  adminArticles: {
    bg: 'bg-emerald-50',
    border: 'border-emerald-200',
    text: 'text-emerald-700',
    activeDot: 'bg-emerald-500',
    hover: 'hover:border-emerald-300',
    iconColor: 'text-emerald-600'
  },
  map: {
    bg: 'bg-green-50',
    border: 'border-green-200',
    text: 'text-green-700',
    activeDot: 'bg-green-500',
    hover: 'hover:border-green-300',
    iconColor: 'text-green-600'
  },
  friends: {
    bg: 'bg-orange-50',
    border: 'border-orange-200',
    text: 'text-orange-700',
    activeDot: 'bg-orange-500',
    hover: 'hover:border-orange-300',
    iconColor: 'text-orange-600'
  },
  ai: {
    bg: 'bg-gradient-to-r from-indigo-50 to-purple-50',
    border: 'border-indigo-200',
    text: 'text-indigo-700',
    activeDot: 'bg-indigo-500',
    hover: 'hover:border-indigo-300',
    iconColor: 'text-indigo-600'
  },
  profile: {
    bg: 'bg-rose-50',
    border: 'border-rose-200',
    text: 'text-rose-700',
    activeDot: 'bg-rose-500',
    hover: 'hover:border-rose-300',
    iconColor: 'text-rose-600'
  }
}

// Konfiguracja nawigacji
const NAV_ITEMS = [
  { 
    href: '/dashboard', 
    icon: Home, 
    label: 'Dashboard', 
    section: 'dashboard',
    description: 'Strona g≈Ç√≥wna'
  },
  { 
    href: '/mood', 
    icon: BarChart3, 
    label: 'Nastr√≥j', 
    section: 'mood',
    description: 'Dziennik nastroju'
  },
  { 
    href: '/articles', 
    icon: BookOpen, 
    label: 'Artyku≈Çy', 
    section: 'articles',
    description: 'Baza wiedzy'
  },
  { 
    href: '/admin/articles', 
    icon: FileText, 
    label: 'Artyku≈Çy Admina', 
    section: 'adminArticles',
    description: 'ZarzƒÖdzanie artyku≈Çami',
    adminOnly: true
  },
  { 
    href: '/map', 
    icon: MapPin, 
    label: 'Mapa Wsparcia', 
    section: 'map',
    description: 'Miejsca pomocy'
  },
  { 
    href: '/dashboard/friends', 
    icon: Users, 
    label: 'Przyjaciele', 
    section: 'friends',
    description: 'Twoje kontakty'
  },
  { 
    href: '/ai', 
    icon: Sparkles, 
    label: 'Pomoc AI', 
    section: 'ai',
    description: 'Wsparcie AI'
  },
  { 
    href: '/dashboard/profile', 
    icon: User, 
    label: 'Profil', 
    section: 'profile',
    description: 'Twoje konto'
  }
]

export default function Header({ onClick }: { onClick?: () => void }) {
  const { user, loading } = useAuth()
  const router = useRouter()
  const pathname = usePathname()
  const [isMobile, setIsMobile] = useState(false)
  const [isMenuOpen, setIsMenuOpen] = useState(false)
  const [isScrolled, setIsScrolled] = useState(false)
  const menuRef = useRef<HTMLDivElement>(null)

  // Sprawdz scroll i rozmiar ekranu
  useEffect(() => {
    const checkMobile = () => setIsMobile(window.innerWidth <= 768)
    const handleScroll = () => setIsScrolled(window.scrollY > 10)
    
    checkMobile()
    handleScroll()
    
    window.addEventListener('resize', checkMobile)
    window.addEventListener('scroll', handleScroll, { passive: true })
    
    return () => {
      window.removeEventListener('resize', checkMobile)
      window.removeEventListener('scroll', handleScroll)
    }
  }, [])

  // Zamknij menu po zmianie na desktop lub route
  useEffect(() => {
    setIsMenuOpen(false)
  }, [pathname, isMobile])

  // Zamknij menu po klikniƒôciu na zewnƒÖtrz
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {
        setIsMenuOpen(false)
      }
    }

    document.addEventListener('mousedown', handleClickOutside)
    return () => document.removeEventListener('mousedown', handleClickOutside)
  }, [])

  const handleLogout = async () => {
    try {
      await signOut(auth)
      router.push('/')
    } catch (error) {
      console.error('B≈ÇƒÖd wylogowania:', error)
      router.push('/')
    }
  }

  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen)
  }

  const isActiveRoute = (route: string) => {
    return pathname === route
  }

  const getSectionConfig = (section: string) => {
    return SECTION_CONFIG[section as keyof typeof SECTION_CONFIG] || SECTION_CONFIG.dashboard
  }

  // Filtrowanie element√≥w nawigacji
  const filteredNavItems = NAV_ITEMS.filter(item => 
    !item.adminOnly || (item.adminOnly && user?.role === 'admin')
  )

  return (
    <>
      <header 
        className={cn(
          "border-b bg-white/95 backdrop-blur-xl sticky top-0 z-50 transition-all duration-500 ease-out",
          isScrolled 
            ? "border-gray-100/80 shadow-sm shadow-black/5" 
            : "border-transparent"
        )}
        onClick={onClick}
      >
        <div className="container mx-auto px-4 sm:px-6">
          <div className="flex items-center justify-between h-16">
            
            {/* Logo z micro-interactions */}
            <Link 
              href={user ? "/dashboard" : "/"} 
              className="flex items-center gap-3 group flex-shrink-0 relative"
            >
              {/* Animated logo container */}
              <div className="relative">
                <div className={cn(
                  "w-8 h-8 sm:w-10 sm:h-10 rounded-xl flex items-center justify-center shadow-sm transition-all duration-500 group-hover:shadow-md",
                  "bg-gradient-to-br from-gray-900 to-gray-800 group-hover:from-gray-800 group-hover:to-gray-700"
                )}>
                  {/* Animated logo icon */}
                  <div className="w-4 h-4 sm:w-6 sm:h-6 bg-gradient-to-br from-white to-white/80 rounded-lg transition-transform duration-300 group-hover:scale-110"/>
                  
                  {/* Subtle shine effect */}
                  <div className="absolute inset-0 rounded-xl bg-gradient-to-br from-white/10 to-transparent"/>
                </div>
                
                {/* Hover pulse effect */}
                <div className="absolute inset-0 rounded-xl bg-gray-900/20 scale-0 group-hover:scale-100 transition-transform duration-500 opacity-0 group-hover:opacity-100"/>
              </div>
              
              {/* Text container */}
              <div className="flex flex-col">
                <span className="text-lg sm:text-xl font-semibold bg-gradient-to-br from-gray-900 to-gray-700 bg-clip-text text-transparent leading-tight">
                  Spok√≥j w G≈Çowie
                </span>
                <span className="text-xs text-gray-500 leading-tight hidden sm:block transition-opacity duration-300 group-hover:opacity-80">
                  Architektura Uwa≈ºno≈õci
                </span>
              </div>
            </Link>

            {/* Desktop Navigation */}
            <nav className="hidden lg:flex items-center gap-2" ref={menuRef}>
              {loading ? (
                // Skeleton loading z lepszƒÖ animacjƒÖ
                <div className="flex items-center gap-3">
                  {[...Array(8)].map((_, i) => (
                    <div 
                      key={i}
                      className="w-24 h-10 bg-gradient-to-r from-gray-100 to-gray-200 rounded-xl animate-pulse"
                      style={{ animationDelay: `${i * 0.1}s` }}
                    />
                  ))}
                </div>
              ) : user ? (
                <div className="flex items-center gap-2">
                  {filteredNavItems.map((item) => {
                    const config = getSectionConfig(item.section)
                    const isActive = isActiveRoute(item.href)
                    
                    return (
                      <div key={item.href} className="relative group">
                        <Link 
                          href={item.href}
                          className={cn(
                            "flex items-center gap-2 px-4 py-2.5 rounded-xl transition-all duration-300 border",
                            "relative overflow-hidden group/nav-item",
                            isActive
                              ? `${config.bg} ${config.border} ${config.text} shadow-sm`
                              : "bg-white/80 border-gray-100 text-gray-700 hover:border-gray-200 hover:shadow-sm"
                          )}
                        >
                          <item.icon className={cn(
                            "h-4 w-4 transition-transform duration-300",
                            isActive ? `scale-110 ${config.iconColor}` : "text-gray-600 group-hover/nav-item:scale-110 group-hover/nav-item:text-gray-700"
                          )} />
                          <span className="text-sm font-medium">{item.label}</span>
                          
                          {/* Active indicator */}
                          {isActive && (
                            <div className={`absolute bottom-0 left-1/2 transform -translate-x-1/2 w-1 h-1 ${config.activeDot} rounded-full`} />
                          )}

                          {/* Hover gradient effect for AI section */}
                          {item.section === 'ai' && !isActive && (
                            <div className="absolute inset-0 rounded-xl bg-gradient-to-r from-indigo-500/5 to-purple-500/5 opacity-0 transition-opacity duration-300 group-hover/nav-item:opacity-100" />
                          )}
                        </Link>
                        
                        {/* Tooltip */}
                        <div className="absolute -top-12 left-1/2 transform -translate-x-1/2 bg-gray-900 text-white text-xs rounded-lg px-3 py-2 opacity-0 group-hover:opacity-100 transition-all duration-300 pointer-events-none shadow-lg z-50">
                          {item.description}
                          <div className="absolute bottom-0 left-1/2 transform -translate-x-1/2 translate-y-1 w-2 h-2 bg-gray-900 rotate-45" />
                        </div>
                      </div>
                    )
                  })}

                  {/* User Menu z avatar */}
                  <div className="flex items-center gap-2 pl-2 border-l border-gray-100 ml-2">
                    <Button 
                      variant="outline" 
                      size="sm"
                      onClick={handleLogout}
                      className={cn(
                        "rounded-xl transition-all duration-300 relative overflow-hidden group",
                        "border-gray-200 hover:border-red-300 hover:text-red-600 hover:shadow-sm"
                      )}
                    >
                      <LogOut className="h-4 w-4 mr-2 transition-transform duration-300 group-hover:scale-110"/>
                      <span className="text-sm font-medium">Wyloguj</span>
                    </Button>
                  </div>
                </div>
              ) : (
                <div className="flex items-center gap-3">
                  <Link href="/auth/login">
                    <Button 
                      variant="outline" 
                      size="sm"
                      className="rounded-xl border-gray-200 hover:border-gray-300 transition-all duration-300 hover:shadow-sm"
                    >
                      Zaloguj siƒô
                    </Button>
                  </Link>
                  <Link href="/auth/register">
                    <Button 
                      size="sm"
                      className="rounded-xl bg-gradient-to-r from-gray-900 to-gray-800 text-white hover:from-gray-800 hover:to-gray-700 transition-all duration-300 shadow-sm hover:shadow-md"
                    >
                      Rozpocznij podr√≥≈º
                    </Button>
                  </Link>
                </div>
              )}
            </nav>

            {/* Mobile Menu Button z lepszƒÖ animacjƒÖ */}
            <div className="lg:hidden">
              <Button
                variant="ghost"
                size="sm"
                onClick={toggleMenu}
                className={cn(
                  "p-2 rounded-xl transition-all duration-300 relative",
                  "hover:bg-gray-100 border border-transparent hover:border-gray-200",
                  isMenuOpen && "bg-gray-100 border-gray-200"
                )}
              >
                {isMenuOpen ? (
                  <X className="h-5 w-5 transition-transform duration-300 rotate-90 scale-110" />
                ) : (
                  <Menu className="h-5 w-5 transition-transform duration-300" />
                )}
              </Button>
            </div>
          </div>
        </div>

        {/* Premium Mobile Menu */}
        {isMenuOpen && (
          <div 
            ref={menuRef}
            className="lg:hidden absolute top-full left-0 right-0 bg-white/95 backdrop-blur-xl border-b border-gray-100 shadow-xl shadow-black/10 animate-in slide-in-from-top duration-300"
          >
            <div className="container mx-auto px-4 py-4">
              {loading ? (
                <div className="space-y-3">
                  {[...Array(8)].map((_, i) => (
                    <div 
                      key={i}
                      className="h-12 bg-gradient-to-r from-gray-100 to-gray-200 rounded-xl animate-pulse"
                      style={{ animationDelay: `${i * 0.1}s` }}
                    />
                  ))}
                </div>
              ) : user ? (
                <div className="space-y-2">
                  {filteredNavItems.map((item) => {
                    const config = getSectionConfig(item.section)
                    const isActive = isActiveRoute(item.href)
                    
                    return (
                      <Link 
                        key={item.href}
                        href={item.href}
                        className={cn(
                          "flex items-center gap-4 px-4 py-3 rounded-xl transition-all duration-300 w-full group",
                          "border-2 backdrop-blur-sm",
                          isActive
                            ? `${config.bg} ${config.border} ${config.text} shadow-sm`
                            : "bg-white/80 border-gray-100 text-gray-700 hover:border-gray-200 hover:shadow-sm"
                        )}
                        onClick={() => setIsMenuOpen(false)}
                      >
                        <item.icon className={cn(
                          "h-5 w-5 transition-transform duration-300",
                          isActive ? `scale-110 ${config.iconColor}` : "text-gray-600 group-hover:scale-110 group-hover:text-gray-700"
                        )} />
                        <div className="flex-1">
                          <span className="text-base font-medium block">{item.label}</span>
                          <span className="text-xs text-gray-500 mt-0.5">{item.description}</span>
                        </div>
                        
                        {/* Active dot */}
                        {isActive && (
                          <div className={`w-2 h-2 rounded-full ${config.activeDot}`} />
                        )}
                      </Link>
                    )
                  })}
                  
                  {/* Logout button */}
                  <Button 
                    variant="outline" 
                    className="w-full justify-start gap-4 px-4 py-3 rounded-xl border-2 border-gray-200 text-gray-700 hover:border-red-300 hover:text-red-600 transition-all duration-300 mt-4"
                    onClick={() => {
                      setIsMenuOpen(false)
                      setTimeout(handleLogout, 200)
                    }}
                  >
                    <LogOut className="h-5 w-5"/>
                    <span className="text-base font-medium">Wyloguj</span>
                  </Button>
                </div>
              ) : (
                <div className="space-y-3">
                  <Link 
                    href="/auth/login"
                    className={cn(
                      "flex items-center justify-center px-4 py-3 rounded-xl transition-all duration-300 w-full",
                      "border-2 border-gray-200 text-gray-700 hover:border-gray-300 hover:shadow-sm font-medium"
                    )}
                    onClick={() => setIsMenuOpen(false)}
                  >
                    Zaloguj siƒô
                  </Link>
                  <Link 
                    href="/auth/register"
                    className={cn(
                      "flex items-center justify-center px-4 py-3 rounded-xl transition-all duration-300 w-full",
                      "bg-gradient-to-r from-gray-900 to-gray-800 text-white hover:from-gray-800 hover:to-gray-700 shadow-sm hover:shadow-md font-medium"
                    )}
                    onClick={() => setIsMenuOpen(false)}
                  >
                    Rozpocznij podr√≥≈º
                  </Link>
                </div>
              )}
            </div>
          </div>
        )}
      </header>

      {/* Premium Overlay dla mobile menu */}
      {isMenuOpen && (
        <div 
          className="fixed inset-0 bg-black/30 backdrop-blur-sm z-40 lg:hidden animate-in fade-in duration-300"
          onClick={() => setIsMenuOpen(false)}
        />
      )}
    </>
  )
}'use client'

import * as React from 'react'
import * as DialogPrimitive from '@radix-ui/react-dialog'
import { X } from 'lucide-react'
import { cn } from '@/lib/utils'

const Dialog = DialogPrimitive.Root

const DialogTrigger = DialogPrimitive.Trigger

const DialogPortal = DialogPrimitive.Portal

const DialogClose = DialogPrimitive.Close

const DialogOverlay = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Overlay
    ref={ref}
    className={cn(
      'fixed inset-0 z-50 bg-black/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',
      className
    )}
    {...props}
  />
))
DialogOverlay.displayName = DialogPrimitive.Overlay.displayName

const DialogContent = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DialogPortal>
    <DialogOverlay />
    <DialogPrimitive.Content
      ref={ref}
      className={cn(
        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-2xl',
        className
      )}
      {...props}
    >
      {children}
      <DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </DialogPrimitive.Close>
    </DialogPrimitive.Content>
  </DialogPortal>
))
DialogContent.displayName = DialogPrimitive.Content.displayName

const DialogHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      'flex flex-col space-y-1.5 text-center sm:text-left',
      className
    )}
    {...props}
  />
)
DialogHeader.displayName = 'DialogHeader'

const DialogFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',
      className
    )}
    {...props}
  />
)
DialogFooter.displayName = 'DialogFooter'

const DialogTitle = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Title
    ref={ref}
    className={cn(
      'text-lg font-semibold leading-none tracking-tight',
      className
    )}
    {...props}
  />
))
DialogTitle.displayName = DialogPrimitive.Title.displayName

const DialogDescription = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Description
    ref={ref}
    className={cn('text-sm text-gray-600', className)}
    {...props}
  />
))
DialogDescription.displayName = DialogPrimitive.Description.displayName

export {
  Dialog,
  DialogPortal,
  DialogOverlay,
  DialogClose,
  DialogTrigger,
  DialogContent,
  DialogHeader,
  DialogFooter,
  DialogTitle,
  DialogDescription,
}import * as React from 'react'
import { Slot } from '@radix-ui/react-slot'
import { cva, type VariantProps } from 'class-variance-authority'
import { cn } from '@/lib/utils'

const buttonVariants = cva(
  'inline-flex items-center justify-center whitespace-nowrap rounded-lg text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',
  {
    variants: {
      variant: {
        primary: 'bg-primary text-white hover:bg-primary/90',
        secondary: 'bg-surface text-text-primary hover:bg-surface/80',
        outline: 'border border-border-light bg-background hover:bg-surface',
        ghost: 'hover:bg-surface hover:text-text-primary',
        success: 'bg-accent-green text-white hover:bg-accent-green/90',
        warning: 'bg-accent-orange text-white hover:bg-accent-orange/90',
        error: 'bg-accent-red text-white hover:bg-accent-red/90',
        glass: 'glass-card text-text-primary hover:bg-white/90',
      },
      size: {
        sm: 'h-9 px-3',
        md: 'h-10 px-4 py-2',
        lg: 'h-11 px-8',
        xl: 'h-12 px-10 text-base',
        icon: 'h-10 w-10',
      },
    },
    defaultVariants: {
      variant: 'primary',
      size: 'md',
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : 'button'
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = 'Button'

export { Button, buttonVariants }import * as React from 'react'
import { cn } from '@/lib/utils'

export interface InputProps
  extends React.InputHTMLAttributes<HTMLInputElement> {}

const Input = React.forwardRef<HTMLInputElement, InputProps>(
  ({ className, type, ...props }, ref) => {
    return (
      <input
        type={type}
        className={cn(
          'flex h-10 w-full rounded-lg border border-border-light bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-text-tertiary focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Input.displayName = 'Input'

export { Input }import { cn } from '@/lib/utils'

function Skeleton({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) {
  return (
    <div
      className={cn('animate-pulse rounded-md bg-surface', className)}
      {...props}
    />
  )
}

export { Skeleton }// src/components/providers/auth-provider.tsx
'use client'

import React, { createContext, useContext, useEffect, useState } from 'react'
import { User } from 'firebase/auth'
import { onAuthStateChanged } from 'firebase/auth'
import { doc, getDoc } from 'firebase/firestore'
import { auth, db } from '@/lib/firebase'

interface AuthUser extends User {
  role?: 'user' | 'admin'
  isAdmin?: boolean
}

interface AuthContextType {
  user: AuthUser | null
  loading: boolean
}

const AuthContext = createContext<AuthContextType>({ user: null, loading: true })

export function AuthProvider({ children }: { children: React.ReactNode }) {
  const [user, setUser] = useState<AuthUser | null>(null)
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {
      if (firebaseUser) {
        // Pobierz dodatkowe dane u≈ºytkownika z Firestore
        try {
          const userDoc = await getDoc(doc(db, 'users', firebaseUser.uid))
          const userData = userDoc.data()
          
          const authUser: AuthUser = {
            ...firebaseUser,
            role: userData?.role || 'user',
            isAdmin: userData?.role === 'admin'
          }
          
          setUser(authUser)
        } catch (error) {
          console.error('Error fetching user data:', error)
          // Je≈õli nie ma danych w Firestore, ustaw domy≈õlne warto≈õci
          const authUser: AuthUser = {
            ...firebaseUser,
            role: 'user',
            isAdmin: false
          }
          setUser(authUser)
        }
      } else {
        setUser(null)
      }
      setLoading(false)
    })

    return () => unsubscribe()
  }, [])

  return (
    <AuthContext.Provider value={{ user, loading }}>
      {children}
    </AuthContext.Provider>
  )
}

export function useAuth() {
  return useContext(AuthContext)
}'use client'

import { useState, useEffect, useRef, useCallback, useMemo } from 'react'
import { motion } from 'framer-motion'
import { Card, CardContent } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Brain, Target, Zap, X, Sparkles, Clock, RefreshCw, GraduationCap, Activity, Lightbulb } from 'lucide-react'
import { cn } from '@/lib/utils'

// Cache dla komponentu
const componentCache = new Map()

// Funkcje pomocnicze
const getMoodDescription = (mood: number): string => {
  if (mood <= 20) return 'bardzo niski'
  if (mood <= 40) return 'niski'
  if (mood <= 60) return 'neutralny'
  if (mood <= 80) return 'wysoki'
  return 'bardzo wysoki'
}

const getProfileType = (mood: number, consistency: number, trend: number, streak: number): string => {
  if (consistency > 70 && trend > 0) return 'STABILNY WZROST'
  if (consistency > 70 && trend < 0) return 'STABILNA REFLEKSJA' 
  if (consistency < 50 && trend > 0) return 'DYNAMICZNY WZROST'
  if (consistency < 50 && trend < 0) return 'WRA≈ªLIWO≈öƒÜ'
  if (streak > 7) return 'ZAAWANSOWANY'
  return '≈öWIADOMY'
}

// G≈Ç√≥wna funkcja fetch AI
const fetchAIAnalysis = async (userData: any) => {
  const cacheKey = JSON.stringify({
    mood: userData.currentMood,
    streak: userData.streak,
    trend: userData.trend,
    consistency: userData.consistency,
    level: userData.level,
    entriesCount: userData.moodEntries?.length || 0,
    notesCount: userData.userNotes?.length || 0
  })

  // Sprawd≈∫ cache
  if (componentCache.has(cacheKey)) {
    const cached = componentCache.get(cacheKey)
    if (Date.now() - cached.timestamp < 5 * 60 * 1000) {
      console.log('üíæ Using component cache')
      return cached.data
    }
  }

  try {
    const moodEntries = userData.moodEntries || []
    const userNotes = userData.userNotes || []
    
    // Przygotuj dane dla AI
    const moodDescription = getMoodDescription(userData.currentMood || 50)
    const recentMoods = moodEntries.slice(-5).map((e: any) => e.mood || 50)
    const averageRecentMood = recentMoods.length > 0 
      ? Math.round(recentMoods.reduce((a: number, b: number) => a + b, 0) / recentMoods.length)
      : 50

    // Prompt dla AI
    const analysisPrompt = `Jeste≈õ asystentem wellbeing w aplikacji "Spok√≥j w G≈Çowie" dla m≈Çodzie≈ºy.

DANE U≈ªYTKOWNIKA:
- Aktualny nastr√≥j: ${userData.currentMood || 50}/100 (${moodDescription})
- Streak: ${userData.streak || 0} dni
- Poziom: ${userData.level || 1}
- Trend nastroju: ${userData.trend || 0}%
- Stabilno≈õƒá: ${userData.consistency || 50}%
- ≈öredni nastr√≥j: ${userData.averageMood || 50}%
- Liczba wpis√≥w: ${moodEntries.length}
- Ostatnie nastroje: ${recentMoods.join(', ')}
- ≈öredni z ostatnich 5 dni: ${averageRecentMood}%

PROSZƒò O ANALIZƒò W TYM FORMACIE:
{
"deepAnalysis": "2-3 zdania analizy obecnego nastroju i trend√≥w",
"personalizedChallenge": "kr√≥tkie wyzwanie na dzi≈õ (max 8 s≈Ç√≥w)",
"scienceBackedTool": "konkretna technika wellbeing (max 6 s≈Ç√≥w)", 
"supportEcosystem": "strategia wsparcia (max 8 s≈Ç√≥w)",
"breakthroughInsight": "motywujƒÖcy wglƒÖd o nastoju",
"immediateBreakthrough": "natychmiastowa akcja (max 5 s≈Ç√≥w)"
}

BƒÖd≈∫:
- Konkretny i praktyczny
- WspierajƒÖcy ale nie infantylny
- Dopasowany do nastroju i streak
- W jƒôzyku polskim
- Max 200 znak√≥w w ka≈ºdym polu`

    console.log('üîç Fetching AI analysis from chat endpoint...')

    const controller = new AbortController()
    const timeoutId = setTimeout(() => controller.abort(), 15000)

    const response = await fetch('/api/ai-recommendations', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      signal: controller.signal,
      body: JSON.stringify({ 
        message: analysisPrompt 
      })
    })
    
    clearTimeout(timeoutId)

    if (!response.ok) {
      throw new Error(`AI API failed: ${response.status}`)
    }

    const data = await response.json()
    console.log('üìÑ AI Response received:', data)

    // Parsujemy odpowied≈∫ tekstowƒÖ
    const aiResponse = parseAIResponse(data.response, userData)
    const result = transformAIResponse(aiResponse, userData)
    
    // Zapisz w cache
    componentCache.set(cacheKey, {
      data: result,
      timestamp: Date.now()
    })
    
    return result
    
  } catch (error) {
    if (error.name === 'AbortError') {
      console.log('‚è∞ Request timeout')
    } else {
      console.error('AI fetch failed:', error)
    }
    return generateLocalAIAnalysis(userData)
  }
}

// Funkcja do parsowania odpowiedzi AI
const parseAIResponse = (responseText: string, userData: any) => {
  console.log('üìù Raw AI response:', responseText)
  
  try {
    // Spr√≥buj bezpo≈õrednio sparsowaƒá ca≈ÇƒÖ odpowied≈∫ jako JSON
    const directParse = JSON.parse(responseText)
    if (directParse && typeof directParse === 'object') {
      console.log('‚úÖ Direct JSON parse successful')
      return directParse
    }
  } catch (directError) {
    console.log('‚ö†Ô∏è Direct parse failed, trying extracted JSON...')
  }

  try {
    // Spr√≥buj znale≈∫ƒá JSON w odpowiedzi (usu≈Ñ ```json i ```)
    const cleanText = responseText
      .replace(/```json\s*/g, '')
      .replace(/```\s*/g, '')
      .trim()

    // Spr√≥buj sparsowaƒá oczyszczony tekst
    const jsonMatch = cleanText.match(/\{[\s\S]*\}/)
    if (jsonMatch) {
      const jsonString = jsonMatch[0]
      console.log('‚úÖ Extracted JSON:', jsonString)
      return JSON.parse(jsonString)
    }
    
    throw new Error('No JSON found in response')
  } catch (error) {
    console.log('‚ùå JSON parse failed, using text analysis')
    return createAnalysisFromText(responseText, userData)
  }
}

// Tworzy strukturƒô analizy z tekstowej odpowiedzi AI
const createAnalysisFromText = (text: string, userData: any) => {
  console.log('üîÑ Creating analysis from text fallback')
  
  const sentences = text.split(/[.!?]+/).filter(s => s.trim().length > 10)
  
  return {
    deepAnalysis: sentences[0]?.trim() + '.' || "Analiza Twojego nastroju wskazuje na potrzebƒô wiƒôkszej samoobserwacji.",
    personalizedChallenge: "Zr√≥b 3 g≈Çƒôbokie oddechy i zapisz jednƒÖ my≈õl",
    scienceBackedTool: "Technika oddechu 4-7-8",
    supportEcosystem: "Poranna rutyna z 3 oddechami", 
    breakthroughInsight: sentences[1]?.trim() + '.' || "Regularna obserwacja nastroju prowadzi do wiƒôkszej samo≈õwiadomo≈õci.",
    immediateBreakthrough: "Zr√≥b pauzƒô na oddech",
    isRealAI: false
  }
}

// Transformacja odpowiedzi AI
const transformAIResponse = (aiData: any, userData: any) => {
  const safeUserData = {
    currentMood: userData.currentMood || 50,
    consistency: userData.consistency || 50,
    trend: userData.trend || 0,
    streak: userData.streak || 0
  }
  
  return {
    deepAnalysis: aiData.deepAnalysis || "AI analizuje Tw√≥j nastr√≥j w kontek≈õcie codziennych do≈õwiadcze≈Ñ...",
    sections: [
      {
        icon: <Target className="h-5 w-5" />,
        title: "üéØ Analiza Profilu",
        subtitle: "Tw√≥j unikalny profil emocjonalny", 
        content: aiData.deepAnalysis || "Przeanalizuj sw√≥j nastr√≥j w kontek≈õcie codziennych do≈õwiadcze≈Ñ.",
        color: "purple",
        duration: "Refleksja",
        priority: "high",
        type: "analysis"
      },
      {
        icon: <Zap className="h-5 w-5" />,
        title: "üöÄ Wyzwanie",
        subtitle: "Dopasowane do Ciebie",
        content: aiData.personalizedChallenge || "Stw√≥rz codzienny rytua≈Ç samoobserwacji przez 5 dni.",
        color: "blue", 
        duration: "5 dni",
        priority: "high",
        type: "challenge"
      },
      {
        icon: <GraduationCap className="h-5 w-5" />,
        title: "üß† Technika",
        subtitle: "Naukowa metoda",
        content: aiData.scienceBackedTool || "Technika oddechu 4-7-8: 4s wdech, 7s pauza, 8s wydech.",
        color: "green",
        duration: "5-10 min", 
        priority: "high",
        type: "tool"
      },
      {
        icon: <Activity className="h-5 w-5" />,
        title: "üí´ Strategia",
        subtitle: "Tw√≥j ekosystem wsparcia",
        content: aiData.supportEcosystem || "Poranny rytua≈Ç: 3 g≈Çƒôbokie oddechy + intencja na dzie≈Ñ.",
        color: "orange",
        duration: "Codziennie",
        priority: "medium",
        type: "strategy"
      },
      {
        icon: <Lightbulb className="h-5 w-5" />,
        title: "üîç WglƒÖd", 
        subtitle: "Odkrycie o sobie",
        content: aiData.breakthroughInsight || "Regularno≈õƒá w obserwacji nastroju sama w sobie jest terapiƒÖ.",
        color: "pink",
        duration: "Przemy≈õlenia",
        priority: "medium",
        type: "insight"
      },
      {
        icon: <Sparkles className="h-5 w-5" />,
        title: "‚ö° Akcja",
        subtitle: "Zacznij teraz",
        content: aiData.immediateBreakthrough || "Zr√≥b 2-minutowƒÖ pauzƒô na ≈õwiadomy oddech.",
        color: "red",
        duration: "15 min",
        priority: "high", 
        type: "action"
      }
    ],
    isRealAI: aiData.isRealAI !== false,
    timestamp: new Date().toISOString(),
    profileType: getProfileType(
      safeUserData.currentMood, 
      safeUserData.consistency, 
      safeUserData.trend, 
      safeUserData.streak
    )
  }
}

// Lokalna generacja tylko jako fallback
const generateLocalAIAnalysis = (userData: any) => {
  const currentMood = userData.currentMood || 50
  const streak = userData.streak || 0
  const trend = userData.trend || 0
  const consistency = userData.consistency || 50
  
  return {
    deepAnalysis: `AI analizuje Tw√≥j nastr√≥j ${currentMood}% w kontek≈õcie ${streak}-dniowej praktyki. Trend ${trend}% i stabilno≈õƒá ${consistency}% tworzƒÖ unikalny wzorzec emocjonalny.`,
    personalizedChallenge: `Przez 3-5 dni praktykuj uwa≈ºnƒÖ obserwacjƒô swoich reakcji emocjonalnych w kluczowych momentach dnia.`,
    scienceBackedTool: "Technika oddechu 4-7-8: 4s wdech, 7s pauza, 8s wydech. Reguluje system nerwowy.",
    supportEcosystem: "Stw√≥rz codzienny rytua≈Ç samoobserwacji wykorzystujƒÖcy Twoje obecne nawyki.",
    breakthroughInsight: "Twoja regularno≈õƒá w zapisywaniu nastroju sama w sobie jest potƒô≈ºnym narzƒôdziem samopoznania.",
    immediateBreakthrough: "Zr√≥b 2-minutowƒÖ pauzƒô na ≈õwiadomy oddech i zauwa≈º jak wp≈Çywa na Tw√≥j nastr√≥j.",
    isRealAI: false,
    timestamp: new Date().toISOString(),
    sections: [
      {
        icon: <Target className="h-5 w-5" />,
        title: "üéØ Analiza Profilu",
        subtitle: "Tw√≥j unikalny profil emocjonalny", 
        content: `AI analizuje Tw√≥j nastr√≥j ${currentMood}% w kontek≈õcie ${streak}-dniowej praktyki.`,
        color: "purple",
        duration: "Refleksja",
        priority: "high",
        type: "analysis"
      },
      {
        icon: <Zap className="h-5 w-5" />,
        title: "üöÄ Wyzwanie",
        subtitle: "Dopasowane do Ciebie",
        content: "Przez 3-5 dni praktykuj uwa≈ºnƒÖ obserwacjƒô swoich reakcji emocjonalnych.",
        color: "blue", 
        duration: "5 dni",
        priority: "high",
        type: "challenge"
      },
      {
        icon: <GraduationCap className="h-5 w-5" />,
        title: "üß† Technika",
        subtitle: "Naukowa metoda",
        content: "Technika oddechu 4-7-8: 4s wdech, 7s pauza, 8s wydech.",
        color: "green",
        duration: "5-10 min", 
        priority: "high",
        type: "tool"
      },
      {
        icon: <Activity className="h-5 w-5" />,
        title: "üí´ Strategia",
        subtitle: "Tw√≥j ekosystem wsparcia",
        content: "Stw√≥rz codzienny rytua≈Ç samoobserwacji wykorzystujƒÖcy Twoje obecne nawyki.",
        color: "orange",
        duration: "Codziennie",
        priority: "medium",
        type: "strategy"
      },
      {
        icon: <Lightbulb className="h-5 w-5" />,
        title: "üîç WglƒÖd", 
        subtitle: "Odkrycie o sobie",
        content: "Twoja regularno≈õƒá w zapisywaniu nastroju sama w sobie jest potƒô≈ºnym narzƒôdziem samopoznania.",
        color: "pink",
        duration: "Przemy≈õlenia",
        priority: "medium",
        type: "insight"
      },
      {
        icon: <Sparkles className="h-5 w-5" />,
        title: "‚ö° Akcja",
        subtitle: "Zacznij teraz",
        content: "Zr√≥b 2-minutowƒÖ pauzƒô na ≈õwiadomy oddech i zauwa≈º jak wp≈Çywa na Tw√≥j nastr√≥j.",
        color: "red",
        duration: "15 min",
        priority: "high", 
        type: "action"
      }
    ],
    profileType: getProfileType(currentMood, consistency, trend, streak)
  }
}

interface AIMoodInsightsProps {
  currentMood?: number
  moodEntries?: any[]
  streak?: number
  trend?: number
  consistency?: number
  averageMood?: number
  level?: number
  onBack: () => void
  userNotes?: any[]
}

export const AIMoodInsights = ({
  currentMood = 50,
  moodEntries = [],
  streak = 0,
  trend = 0,
  consistency = 50,
  averageMood = 50,
  level = 1,
  onBack,
  userNotes = []
}: AIMoodInsightsProps) => {
  const [aiData, setAiData] = useState<any>(null)
  const [isLoading, setIsLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const [usedToday, setUsedToday] = useState(false)
  const [lastUsedDate, setLastUsedDate] = useState<string | null>(null)
  const modalRef = useRef<HTMLDivElement>(null)
  const isMounted = useRef(true)
  const requestInProgress = useRef(false)

  // Sprawdzanie czy ju≈º u≈ºyto dzisiaj
  useEffect(() => {
    const today = new Date().toDateString()
    const lastUsed = localStorage.getItem('ai-insights-last-used')
    
    if (lastUsed === today) {
      setUsedToday(true)
    }
    setLastUsedDate(lastUsed)
  }, [])

  // Zapisywanie u≈ºycia
  const markAsUsedToday = () => {
    const today = new Date().toDateString()
    localStorage.setItem('ai-insights-last-used', today)
    setUsedToday(true)
    setLastUsedDate(today)
  }

  // Sprawdzamy, czy jeste≈õmy w przeglƒÖdarce (client-side)
  const [isClient, setIsClient] = useState(false)
  useEffect(() => {
    setIsClient(true)
  }, [])

  // Stabilizuj dane u≈ºytkownika
  const userData = useMemo(() => ({
    currentMood,
    moodEntries,
    streak,
    trend,
    consistency,
    averageMood,
    level,
    userNotes
  }), [currentMood, streak, trend, consistency, level, 
      moodEntries.length,
      userNotes.length
  ])

  const loadAIAnalysis = useCallback(async () => {
    if (usedToday) {
      setError('Dzisiejsza analiza AI zosta≈Ça ju≈º wykorzystana. Wr√≥ƒá jutro!')
      setIsLoading(false)
      return
    }

    if (requestInProgress.current) {
      console.log('üõë Request already in progress, skipping...')
      return
    }

    requestInProgress.current = true
    
    try {
      setIsLoading(true)
      setError(null)
      
      console.log('üöÄ Starting AI analysis...')
      const analysis = await fetchAIAnalysis(userData)
      
      if (isMounted.current) {
        setAiData(analysis)
        markAsUsedToday() // ‚úÖ Oznacz jako u≈ºyte
        console.log('‚úÖ AI analysis completed')
      }
    } catch (err) {
      console.error('‚ùå AI analysis failed:', err)
      if (isMounted.current) {
        setError('Nie uda≈Ço siƒô za≈Çadowaƒá analizy AI')
      }
    } finally {
      if (isMounted.current) {
        setIsLoading(false)
      }
      requestInProgress.current = false
    }
  }, [userData, usedToday])

  useEffect(() => {
    isMounted.current = true
    
    // Uruchom tylko raz przy montowaniu
    if (!usedToday) {
      loadAIAnalysis()
    } else {
      setIsLoading(false)
    }

    return () => {
      isMounted.current = false
    }
  }, [loadAIAnalysis, usedToday])

  const getColorClasses = (color: string, type = 'card') => {
    const colorMap: any = {
      purple: {
        card: 'bg-purple-50/80 border-purple-200',
        icon: 'bg-purple-100 text-purple-600',
        text: 'text-purple-900',
        badge: 'bg-purple-100 text-purple-700'
      },
      blue: {
        card: 'bg-blue-50/80 border-blue-200', 
        icon: 'bg-blue-100 text-blue-600',
        text: 'text-blue-900',
        badge: 'bg-blue-100 text-blue-700'
      },
      green: {
        card: 'bg-green-50/80 border-green-200',
        icon: 'bg-green-100 text-green-600',
        text: 'text-green-900',
        badge: 'bg-green-100 text-green-700'
      },
      orange: {
        card: 'bg-orange-50/80 border-orange-200',
        icon: 'bg-orange-100 text-orange-600',
        text: 'text-orange-900',
        badge: 'bg-orange-100 text-orange-700'
      },
      pink: {
        card: 'bg-pink-50/80 border-pink-200',
        icon: 'bg-pink-100 text-pink-600',
        text: 'text-pink-900',
        badge: 'bg-pink-100 text-pink-700'
      },
      red: {
        card: 'bg-red-50/80 border-red-200',
        icon: 'bg-red-100 text-red-600',
        text: 'text-red-900',
        badge: 'bg-red-100 text-red-700'
      }
    }
    return colorMap[color]?.[type] || colorMap.blue[type]
  }

  const handleRefresh = async () => {
    if (usedToday) {
      setError('Dzisiejsza analiza AI zosta≈Ça ju≈º wykorzystana. Wr√≥ƒá jutro!')
      return
    }

    if (requestInProgress.current) {
      console.log('üõë Request in progress, please wait...')
      return
    }

    // Wyczy≈õƒá cache dla obecnych parametr√≥w
    const cacheKey = JSON.stringify({
      mood: currentMood,
      streak: streak,
      trend: trend,
      consistency: consistency,
      level: level,
      entriesCount: moodEntries.length,
      notesCount: userNotes.length
    })
    componentCache.delete(cacheKey)

    setIsLoading(true)
    setError(null)
    
    await loadAIAnalysis()
  }

  const handleResetLimit = () => {
    localStorage.removeItem('ai-insights-last-used')
    setUsedToday(false)
    setLastUsedDate(null)
    setError(null)
  }

  if (!isClient) {
    return <div>≈Åadowanie...</div>
  }

  // Ekran gdy wykorzystano dzisiejszy limit
  if (usedToday && !aiData) {
    return (
      <div className="fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/40 backdrop-blur-sm">
        <motion.div
          initial={{ opacity: 0, scale: 0.95 }}
          animate={{ opacity: 1, scale: 1 }}
          className="bg-white rounded-2xl shadow-xl border border-gray-200 w-full max-w-md p-6 text-center"
        >
          <div className="w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <Clock className="h-8 w-8 text-yellow-600" />
          </div>
          
          <h3 className="text-lg font-semibold text-gray-900 mb-2">
            Dzienna analiza wykorzystana
          </h3>
          
          <p className="text-gray-600 mb-4">
            Twoja dzienna analiza AI zosta≈Ça ju≈º wykorzystana. Mo≈ºesz skorzystaƒá z nowej analizy jutro.
          </p>

          {lastUsedDate && (
            <div className="bg-gray-50 rounded-lg p-3 mb-4">
              <p className="text-sm text-gray-600">
                Ostatnia analiza: <strong>{new Date(lastUsedDate).toLocaleDateString('pl-PL')}</strong>
              </p>
            </div>
          )}

          <div className="flex gap-3">
            <Button
              onClick={onBack}
              variant="outline"
              className="flex-1 border-gray-300"
            >
              Wr√≥ƒá
            </Button>
            <Button
              onClick={handleResetLimit}
              className="flex-1 bg-blue-600 hover:bg-blue-700"
            >
              Resetuj Limit
            </Button>
          </div>
        </motion.div>
      </div>
    )
  }

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/40 backdrop-blur-sm">
      <motion.div
        ref={modalRef}
        initial={{ opacity: 0, scale: 0.95 }}
        animate={{ opacity: 1, scale: 1 }}
        className="bg-white rounded-2xl shadow-xl border border-gray-200 w-full max-w-6xl max-h-[95vh] overflow-hidden flex flex-col"
      >
        {/* Header */}
        <div className="flex items-center justify-between p-4 border-b border-gray-100 bg-gradient-to-r from-blue-50/50 to-purple-50/50">
          <div className="flex items-center gap-3">
            <div className="p-2 bg-white rounded-xl shadow-sm border border-gray-100">
              <Brain className="h-6 w-6 text-purple-500" />
            </div>
            <div>
              <h2 className="font-bold text-gray-900">Spok√≥j AI</h2>
              <p className="text-xs text-gray-600">Personalizowana analiza Twojego nastroju</p>
            </div>
          </div>
          <div className="flex items-center gap-2">
            {usedToday ? (
              <div className="flex items-center gap-1 px-2 py-1 bg-yellow-100 text-yellow-700 rounded-full text-xs">
                <Clock className="h-3 w-3" />
                Wykorzystano dzi≈õ
              </div>
            ) : (
              <div className="flex items-center gap-1 px-2 py-1 bg-green-100 text-green-700 rounded-full text-xs">
                <Sparkles className="h-3 w-3" />
                Dostƒôpna
              </div>
            )}
            {aiData?.isRealAI && (
              <div className="flex items-center gap-1 px-2 py-1 bg-green-100 text-green-700 rounded-full text-xs">
                <Sparkles className="h-3 w-3" />
                AI Premium
              </div>
            )}
            <Button
              onClick={onBack}
              variant="ghost"
              size="sm"
              className="h-8 w-8 p-0 hover:bg-gray-100"
            >
              <X className="h-4 w-4" />
            </Button>
          </div>
        </div>

        {/* Content */}
        <div className="flex-1 overflow-y-auto">
          {isLoading ? (
            <div className="flex flex-col items-center justify-center py-16 space-y-4">
              <motion.div
                animate={{ rotate: 360 }}
                transition={{ duration: 2, repeat: Infinity, ease: "linear" }}
                className="w-12 h-12 border-3 border-blue-200 border-t-blue-600 rounded-full"
              />
              <div className="text-center">
                <p className="font-semibold text-gray-900">AI analizuje Tw√≥j nastr√≥j...</p>
                <p className="text-sm text-gray-600 mt-1">To potrwa tylko chwilƒô</p>
              </div>
            </div>
          ) : error ? (
            <div className="flex flex-col items-center justify-center py-16 space-y-4">
              <div className="text-red-500 text-lg">‚ùå</div>
              <p className="text-gray-900">{error}</p>
              <Button onClick={handleRefresh} variant="outline" disabled={usedToday}>
                Spr√≥buj ponownie
              </Button>
            </div>
          ) : aiData ? (
            <div className="p-6 space-y-6">
              {/* Stats Grid */}
              <div className="grid grid-cols-4 gap-3">
                <CompactStatCard icon="üòä" value={currentMood} label="Nastr√≥j" />
                <CompactStatCard icon="üî•" value={streak} label="Streak" />
                <CompactStatCard icon="üìà" value={`${trend > 0 ? '+' : ''}${trend}%`} label="Trend" />
                <CompactStatCard icon="üí™" value={`${consistency}%`} label="Stabilno≈õƒá" />
              </div>

              {/* Profile Badge */}
              {aiData.profileType && (
                <div className="flex justify-center">
                  <div className="bg-gradient-to-r from-purple-500 to-blue-500 text-white px-4 py-2 rounded-full text-sm font-medium shadow-sm">
                    üë§ Profil: {aiData.profileType}
                  </div>
                </div>
              )}

              {/* G≈Ç√≥wna analiza */}
              <Card className="border-0 bg-gradient-to-r from-blue-50 to-purple-50 shadow-sm">
                <CardContent className="p-4">
                  <div className="flex items-start gap-3">
                    <div className="p-2 bg-white rounded-lg shadow-xs border border-blue-200">
                      <Target className="h-4 w-4 text-blue-600" />
                    </div>
                    <div className="flex-1">
                      <h3 className="font-semibold text-gray-900 text-sm mb-2">Analiza AI</h3>
                      <p className="text-gray-700 text-sm leading-relaxed">{aiData.deepAnalysis}</p>
                      <div className="flex items-center gap-3 mt-3 text-xs text-gray-500">
                        <div className="flex items-center gap-1">
                          <Clock className="h-3 w-3" />
                          {new Date(aiData.timestamp).toLocaleTimeString('pl-PL')}
                        </div>
                        {aiData.isRealAI && (
                          <div className="flex items-center gap-1">
                            <Sparkles className="h-3 w-3" />
                            AI Premium
                          </div>
                        )}
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>

              {/* Sekcje AI */}
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {aiData.sections?.map((section: any, index: number) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: index * 0.1 }}
                  >
                    <Card className={cn(
                      "border-0 shadow-xs hover:shadow-sm transition-all duration-200 h-full",
                      getColorClasses(section.color, 'card')
                    )}>
                      <CardContent className="p-4">
                        <div className="flex items-start justify-between mb-3">
                          <div className="flex items-center gap-2">
                            <div className={cn(
                              "p-1.5 rounded-lg",
                              getColorClasses(section.color, 'icon')
                            )}>
                              {section.icon}
                            </div>
                            <div>
                              <h4 className={cn(
                                "font-semibold text-sm",
                                getColorClasses(section.color, 'text')
                              )}>
                                {section.title}
                              </h4>
                              <p className="text-xs text-gray-600">{section.subtitle}</p>
                            </div>
                          </div>
                          <span className={cn(
                            "text-xs px-2 py-1 rounded-full whitespace-nowrap",
                            getColorClasses(section.color, 'badge')
                          )}>
                            {section.duration}
                          </span>
                        </div>

                        <p className={cn(
                          "text-sm leading-relaxed",
                          getColorClasses(section.color, 'text')
                        )}>
                          {section.content}
                        </p>

                        {section.priority === 'high' && (
                          <div className="flex items-center gap-1 mt-3">
                            <div className="w-2 h-2 bg-red-500 rounded-full animate-pulse" />
                            <span className="text-xs text-red-600 font-medium">Wysoki priorytet</span>
                          </div>
                        )}
                      </CardContent>
                    </Card>
                  </motion.div>
                ))}
              </div>
            </div>
          ) : null}
        </div>

        {/* Footer */}
        <div className="p-4 border-t border-gray-100 bg-gray-50/50">
          <div className="flex gap-3">
            <Button
              onClick={onBack}
              variant="outline"
              className="flex-1 border-gray-300"
            >
              Wr√≥ƒá
            </Button>
            <Button
              onClick={handleRefresh}
              disabled={isLoading || usedToday}
              className="flex-1 bg-blue-600 hover:bg-blue-700"
            >
              <RefreshCw className="h-4 w-4 mr-2" />
              {isLoading ? '≈Åadowanie...' : usedToday ? 'Wykorzystano dzi≈õ' : 'Nowa Analiza'}
            </Button>
          </div>
        </div>
      </motion.div>
    </div>
  )
}

const CompactStatCard = ({ icon, value, label }: { icon: string, value: string | number, label: string }) => {
  return (
    <div className="text-center p-3 bg-white rounded-lg border border-gray-200 shadow-xs">
      <div className="text-lg mb-1">{icon}</div>
      <div className="font-bold text-gray-900 text-sm">{value}</div>
      <div className="text-xs text-gray-600">{label}</div>
    </div>
  )
}import React from 'react';
import { useUser } from '../../hooks/useUser';
import './ArticleCard.css';

export const ArticleCard = ({ article, onRead }) => {
  const { user, canReadArticle, readArticle } = useUser();

  const handleRead = () => {
    if (readArticle(article.id)) {
      onRead?.(article.id);
    }
  };

  return (
    <div className="article-card">
      <div className="article-header">
        <h3 className="article-title">{article.title}</h3>
        <span className="article-date">
          {new Date(article.createdAt).toLocaleDateString()}
        </span>
      </div>
      
      <p className="article-excerpt">{article.excerpt}</p>
      
      <div className="article-footer">
        <span className="article-views">üëÅÔ∏è {article.views} wy≈õwietle≈Ñ</span>
        
        {user && (
          <button 
            className={`read-button ${!canReadArticle(article.id) ? 'read' : ''}`}
            onClick={handleRead}
            disabled={!canReadArticle(article.id)}
          >
            {canReadArticle(article.id) ? 'üìñ Przeczytaj (+10 pkt)' : '‚úÖ Przeczytane'}
          </button>
        )}
      </div>
    </div>
  );
};// src/components/articles/article-list.tsx
import { Article } from '@/hooks/useArticles'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { BookOpen, Clock, Eye } from 'lucide-react'
import Link from 'next/link'
import { Button } from '@/components/ui/button'

interface ArticleListProps {
  articles: Article[]
  loading: boolean
  user: { id: string; role: 'user' | 'admin' } | null
  onArticleRead: (id: string) => void
}

export function ArticleList({ articles, loading, user, onArticleRead }: ArticleListProps) {
  if (loading) {
    return <div className="text-center py-10">≈Åadowanie artyku≈Ç√≥w...</div>
  }

  if (articles.length === 0) {
    return (
      <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm">
        <CardContent className="p-8 text-center">
          <BookOpen className="h-16 w-16 text-gray-300 mx-auto mb-4" />
          <h3 className="text-xl font-semibold text-gray-900 mb-2">Brak artyku≈Ç√≥w</h3>
          <p className="text-gray-600">
            {user?.role === 'admin'
              ? 'Dodaj pierwszy artyku≈Ç w panelu administratora.'
              : 'Wkr√≥tce pojawiƒÖ siƒô nowe tre≈õci!'}
          </p>
        </CardContent>
      </Card>
    )
  }

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {articles.map((article) => (
        <Card key={article.id} className="border-0 shadow-lg bg-white/90 hover:shadow-xl transition-shadow">
          <CardHeader>
            <CardTitle className="text-lg font-bold line-clamp-2">{article.title}</CardTitle>
            <div className="text-sm text-gray-600 mt-1">{article.category}</div>
          </CardHeader>
          <CardContent>
            <p className="text-gray-700 text-sm mb-4 line-clamp-3">{article.excerpt}</p>
            <div className="flex items-center gap-4 text-xs text-gray-500 mb-4">
              <span className="flex items-center gap-1"><Clock className="h-3 w-3" /> {article.readTime} min</span>
              <span className="flex items-center gap-1"><Eye className="h-3 w-3" /> {article.views}</span>
            </div>
            <Link href={`/articles/${article.id}`} onClick={() => onArticleRead(article.id)}>
              <Button variant="outline" className="w-full">
                Czytaj artyku≈Ç
              </Button>
            </Link>
          </CardContent>
        </Card>
      ))}
    </div>
  )
}// src/app/articles/page.tsx
'use client'

import { useEffect, useState } from 'react'
import { useAuth } from '@/components/providers/auth-provider'
import { ArticleList } from '@/components/articles/article-list'

export default function ArticlesPage() {
  const { user: authUser } = useAuth()
  const [userData, setUserData] = useState<{
    id: string
    role: 'user' | 'admin'
  } | null>(null)

  useEffect(() => {
    if (authUser) {
      setUserData({
        id: authUser.uid,
        role: authUser.role || 'user',
      })
    } else {
      setUserData({
        id: 'guest',
        role: 'user',
      })
    }
  }, [authUser])

  const handleArticleRead = (articleId: string) => {
    // Ta funkcja zostanie rozbudowana p√≥≈∫niej (np. zapis do Firestore / localStorage)
    console.log('Artyku≈Ç przeczytany:', articleId)
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/20 to-purple-50/10 py-8">
      <div className="container mx-auto px-4 max-w-7xl">
        <ArticleList 
          user={userData}
          onArticleRead={handleArticleRead}
        />
      </div>
    </div>
  )
}// src/components/Admin/ArticleForm.jsx
import { useState } from 'react';
import { useArticles } from '@/hooks/useArticles';
import { useAuth } from '@/components/providers/auth-provider';

export const ArticleForm = () => {
  const { user } = useAuth();
  const { addArticle } = useArticles('admin', user?.uid);

  const [formData, setFormData] = useState({
    title: '',
    excerpt: '',
    content: '',
    category: 'Stres',
    tags: '',
    readTime: 5,
  });

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await addArticle({
        ...formData,
        tags: formData.tags.split(',').map(t => t.trim()).filter(Boolean),
        readTime: Number(formData.readTime),
      });
      alert('‚úÖ Artyku≈Ç zosta≈Ç dodany!');
      setFormData({ title: '', excerpt: '', content: '', category: 'Stres', tags: '', readTime: 5 });
    } catch (err) {
      alert('‚ùå B≈ÇƒÖd: ' + err.message);
    }
  };

  return (
    <form onSubmit={handleSubmit} className="space-y-4">
      <input
        value={formData.title}
        onChange={(e) => setFormData({ ...formData, title: e.target.value })}
        placeholder="Tytu≈Ç"
        required
        className="w-full p-3 border rounded"
      />
      <textarea
        value={formData.excerpt}
        onChange={(e) => setFormData({ ...formData, excerpt: e.target.value })}
        placeholder="Opis"
        required
        className="w-full p-3 border rounded"
        rows="3"
      />
      <textarea
        value={formData.content}
        onChange={(e) => setFormData({ ...formData, content: e.target.value })}
        placeholder="Tre≈õƒá artyku≈Çu"
        required
        className="w-full p-3 border rounded"
        rows="10"
      />
      {/* reszta p√≥l... */}
      <button
        type="submit"
        className="bg-blue-600 text-white px-6 py-3 rounded hover:bg-blue-700"
      >
        Dodaj artyku≈Ç
      </button>
    </form>
  );
};// src/app/admin/articles/page.tsx
'use client';

import { useAuth } from '@/components/providers/auth-provider';
import { useAdminArticles } from '@/hooks/useAdminArticles';
import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import { ArticleForm } from '@/components/Admin/ArticleForm';
import { ArticleList } from '@/components/Admin/ArticleList';
import { Card, CardContent } from '@/components/ui/card';
import { Shield } from 'lucide-react';

export default function AdminArticlesPage() {
  const { user, loading: authLoading } = useAuth();
  const router = useRouter();

  useEffect(() => {
    if (!authLoading && (!user || user.role !== 'admin')) {
      router.push('/articles');
    }
  }, [user, authLoading, router]);

  if (authLoading || !user) {
    return <div className="min-h-screen flex items-center justify-center">≈Åadowanie...</div>;
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/20 to-purple-50/10 py-8">
      <div className="container mx-auto px-4 max-w-7xl">
        <div className="text-center mb-8">
          <div className="flex items-center justify-center gap-3 mb-4">
            <div className="p-3 rounded-2xl bg-gradient-to-r from-blue-500 to-purple-500 shadow-lg">
              <Shield className="h-8 w-8 text-white" />
            </div>
            <h1 className="text-4xl font-bold bg-gradient-to-r from-slate-800 to-slate-600 bg-clip-text text-transparent">
              Panel Administratora
            </h1>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Formularz dodawania */}
          <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm">
            <CardContent className="p-6">
              <ArticleForm adminUid={user.uid} />
            </CardContent>
          </Card>

          {/* Lista artyku≈Ç√≥w */}
          <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm">
            <CardContent className="p-6">
              <ArticleList adminUid={user.uid} />
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}// src/components/Admin/ArticleFormModal.tsx
'use client'

import { useState, useRef, useEffect } from 'react'
import { useArticles } from '@/hooks/useArticles'
import { Button } from '@/components/ui/button'
import { Upload, X, BookOpen } from 'lucide-react'
import ReactQuill from 'react-quill'
import 'react-quill/dist/quill.snow.css'
import { motion, AnimatePresence } from 'framer-motion'

const CATEGORIES = [
  'Stres', 'Lƒôki', 'Matura', 'Nauka', 'Relacje', 'Samopoczucie',
  'Sen', 'Motywacja', 'Prokrastynacja', 'Wsparcie'
]

interface ArticleFormModalProps {
  isOpen: boolean
  onClose: () => void
  uid: string
}

export function ArticleFormModal({ isOpen, onClose, uid }: ArticleFormModalProps) {
  const { addArticle } = useArticles('admin', uid)
  const [isSubmitting, setIsSubmitting] = useState(false)
  const fileInputRef = useRef<HTMLInputElement>(null)

  const [formData, setFormData] = useState({
    title: '',
    excerpt: '',
    content: '',
    category: 'Stres',
    tags: '',
    readTime: 5,
    status: 'draft' as 'draft' | 'published',
    isFeatured: false,
    isTrending: false,
  })

  const [imagePreview, setImagePreview] = useState<string | null>(null)
  const [imageFile, setImageFile] = useState<File | null>(null)

  useEffect(() => {
    if (!isOpen) {
      setFormData({
        title: '',
        excerpt: '',
        content: '',
        category: 'Stres',
        tags: '',
        readTime: 5,
        status: 'draft',
        isFeatured: false,
        isTrending: false,
      })
      setImagePreview(null)
      setImageFile(null)
    }
  }, [isOpen])

  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0]
    if (file) {
      if (!file.type.startsWith('image/')) {
        alert('Wybierz plik obrazu (jpg, png, itp.)')
        return
      }
      setImageFile(file)
      setImagePreview(URL.createObjectURL(file))
    }
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setIsSubmitting(true)
    try {
      await addArticle(formData, imageFile || undefined)
      alert('‚úÖ Artyku≈Ç zosta≈Ç dodany!')
      onClose()
    } catch (err) {
      console.error(err)
      alert('‚ùå B≈ÇƒÖd: ' + (err as Error).message)
    } finally {
      setIsSubmitting(false)
    }
  }

  if (!isOpen) return null

  return (
    <AnimatePresence>
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
        className="fixed inset-0 bg-black/60 backdrop-blur-sm z-50 flex items-center justify-center p-4"
        onClick={onClose}
      >
        <motion.div
          initial={{ scale: 0.9, opacity: 0, y: 20 }}
          animate={{ scale: 1, opacity: 1, y: 0 }}
          exit={{ scale: 0.9, opacity: 0, y: 20 }}
          className="bg-white rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto shadow-2xl"
          onClick={(e) => e.stopPropagation()}
        >
          <div className="flex items-center justify-between p-6 border-b">
            <h2 className="text-xl font-bold flex items-center gap-2">
              <BookOpen className="h-5 w-5" />
              Dodaj nowy artyku≈Ç
            </h2>
            <button
              onClick={onClose}
              className="p-2 hover:bg-gray-100 rounded-full"
            >
              <X className="h-5 w-5" />
            </button>
          </div>

          <form onSubmit={handleSubmit} className="p-6 space-y-6">
            {/* Tytu≈Ç */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Tytu≈Ç artyku≈Çu *
              </label>
              <input
                type="text"
                value={formData.title}
                onChange={(e) => setFormData({ ...formData, title: e.target.value })}
                required
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>

            {/* Kategoria */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Kategoria
              </label>
              <select
                value={formData.category}
                onChange={(e) => setFormData({ ...formData, category: e.target.value })}
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                {CATEGORIES.map(cat => (
                  <option key={cat} value={cat}>{cat}</option>
                ))}
              </select>
            </div>

            {/* Opis */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Kr√≥tki opis *
              </label>
              <textarea
                value={formData.excerpt}
                onChange={(e) => setFormData({ ...formData, excerpt: e.target.value })}
                required
                rows={2}
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>

            {/* Tre≈õƒá ‚Äì PROFESJONALNY EDYTOR */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Tre≈õƒá artyku≈Çu
              </label>
              <ReactQuill
                value={formData.content}
                onChange={(value) => setFormData({ ...formData, content: value })}
                modules={{
                  toolbar: [
                    [{ 'header': [1, 2, 3, false] }],
                    ['bold', 'italic', 'underline', 'strike'],
                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                    ['link', 'image', 'blockquote', 'code-block'],
                    [{ 'color': [] }, { 'background': [] }],
                    ['clean']
                  ]
                }}
                formats={[
                  'header',
                  'bold', 'italic', 'underline', 'strike',
                  'list', 'bullet', 'ordered',
                  'link', 'image', 'blockquote', 'code-block',
                  'color', 'background'
                ]}
                className="h-96 mb-4"
              />
            </div>

            {/* Obrazek ok≈Çadki */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Ok≈Çadka artyku≈Çu (opcjonalnie)
              </label>
              {imagePreview ? (
                <div className="relative inline-block mt-2">
                  <img src={imagePreview} alt="PodglƒÖd" className="w-full max-w-xs h-32 object-cover rounded" />
                  <button
                    type="button"
                    onClick={() => {
                      setImagePreview(null)
                      setImageFile(null)
                      if (fileInputRef.current) fileInputRef.current.value = ''
                    }}
                    className="absolute -top-2 -right-2 bg-red-500 text-white rounded-full p-1"
                  >
                    <X className="h-4 w-4" />
                  </button>
                </div>
              ) : (
                <div
                  onClick={() => fileInputRef.current?.click()}
                  className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer mt-2"
                >
                  <Upload className="h-8 w-8 text-gray-400 mx-auto mb-2" />
                  <p className="text-sm text-gray-600">Kliknij, aby dodaƒá zdjƒôcie</p>
                </div>
              )}
              <input
                ref={fileInputRef}
                type="file"
                accept="image/*"
                onChange={handleImageChange}
                className="hidden"
              />
            </div>

            {/* Opcje */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Czas czytania (min)
                </label>
                <input
                  type="number"
                  min="1"
                  value={formData.readTime}
                  onChange={(e) => setFormData({ ...formData, readTime: Number(e.target.value) })}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Status
                </label>
                <select
                  value={formData.status}
                  onChange={(e) => setFormData({ ...formData, status: e.target.value as any })}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg"
                >
                  <option value="draft">Szkic</option>
                  <option value="published">Opublikowany</option>
                </select>
              </div>

              <div className="flex items-center gap-2 pt-6">
                <input
                  type="checkbox"
                  id="featured"
                  checked={formData.isFeatured}
                  onChange={(e) => setFormData({ ...formData, isFeatured: e.target.checked })}
                  className="h-4 w-4"
                />
                <label htmlFor="featured" className="text-sm font-medium text-gray-700">
                  Wyr√≥≈ºniony
                </label>
              </div>
            </div>

            {/* Przyciski */}
            <div className="flex justify-end gap-3 pt-4">
              <button
                type="button"
                onClick={onClose}
                className="px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50"
              >
                Anuluj
              </button>
              <button
                type="submit"
                disabled={isSubmitting}
                className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50"
              >
                {isSubmitting ? 'Zapisywanie...' : 'Dodaj artyku≈Ç'}
              </button>
            </div>
          </form>
        </motion.div>
      </motion.div>
    </AnimatePresence>
  )
}// src/components/Admin/RichTextEditor.tsx
'use client'

import { useState, forwardRef } from 'react'
import ReactQuill, { Quill } from 'react-quill'
import 'react-quill/dist/quill.snow.css'

// Dodaj modu≈Ç tabel (Quill nie ma go domy≈õlnie)
const Table = Quill.import('formats/table')
const TableRow = Quill.import('formats/table-row')
const TableCell = Quill.import('formats/table-cell')

Quill.register({ 'formats/table': Table })
Quill.register({ 'formats/table-row': TableRow })
Quill.register({ 'formats/table-cell': TableCell })

interface RichTextEditorProps {
  value: string
  onChange: (value: string) => void
}

const RichTextEditor = forwardRef<HTMLDivElement, RichTextEditorProps>(({ value, onChange }, ref) => {
  const [editorRef, setEditorRef] = useState<ReactQuill | null>(null)

  const insertTable = () => {
    if (!editorRef) return
    const editor = editorRef.getEditor()
    const range = editor.getSelection()
    if (!range) return

    // Wstaw prostƒÖ tabelƒô 2x2 jako HTML
    const tableHTML = `
      <table class="table-auto w-full border-collapse">
        <tbody>
          <tr><td class="border p-2">Kom√≥rka 1</td><td class="border p-2">Kom√≥rka 2</td></tr>
          <tr><td class="border p-2">Kom√≥rka 3</td><td class="border p-2">Kom√≥rka 4</td></tr>
        </tbody>
      </table>
    `
    editor.clipboard.dangerouslyPasteHTML(range.index, tableHTML)
  }

  const modules = {
    toolbar: {
      container: [
        [{ 'header': [1, 2, 3, false] }],
        ['bold', 'italic', 'underline', 'strike'],
        [{ 'list': 'ordered' }, { 'list': 'bullet' }],
        ['link', 'image', 'blockquote', 'code-block'],
        [{ 'color': [] }, { 'background': [] }],
        ['clean'],
        ['table'] // niestandardowy przycisk
      ],
      handlers: {
        table: insertTable
      }
    }
  }

  const formats = [
    'header',
    'bold', 'italic', 'underline', 'strike',
    'list', 'bullet', 'ordered',
    'link', 'image', 'blockquote', 'code-block',
    'color', 'background',
    'table'
  ]

  return (
    <div ref={ref}>
      <ReactQuill
        ref={setEditorRef}
        value={value}
        onChange={onChange}
        modules={modules}
        formats={formats}
        className="h-96"
      />
    </div>
  )
})

RichTextEditor.displayName = 'RichTextEditor'
export default RichTextEditor// src/components/Admin/ArticleForm.tsx
'use client'

import { useState, useRef } from 'react'
import { useArticles } from '@/hooks/useArticles'
import { useAuth } from '@/components/providers/auth-provider'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Textarea } from '@/components/ui/textarea'
import { Image as ImageIcon, Upload, X } from 'lucide-react'

const CATEGORIES = [
  'Stres', 'Lƒôki', 'Matura', 'Nauka', 'Relacje', 'Samopoczucie',
  'Sen', 'Motywacja', 'Prokrastynacja', 'Wsparcie'
]

export function ArticleForm() {
  const { user } = useAuth()
  const { addArticle } = useArticles('admin')
  const [isSubmitting, setIsSubmitting] = useState(false)
  const fileInputRef = useRef<HTMLInputElement>(null)

  const [formData, setFormData] = useState({
    title: '',
    excerpt: '',
    content: '',
    category: 'Stres',
    tags: '',
    readTime: 5,
  })

  const [imagePreview, setImagePreview] = useState<string | null>(null)
  const [imageFile, setImageFile] = useState<File | null>(null)

  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0]
    if (file) {
      if (!file.type.startsWith('image/')) {
        alert('Wybierz plik obrazu (jpg, png, itp.)')
        return
      }
      setImageFile(file)
      setImagePreview(URL.createObjectURL(file))
    }
  }

  const removeImage = () => {
    setImagePreview(null)
    setImageFile(null)
    if (fileInputRef.current) fileInputRef.current.value = ''
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    if (!user) return

    setIsSubmitting(true)
    try {
      await addArticle(
        {
          ...formData,
          tags: formData.tags.split(',').map(t => t.trim()).filter(Boolean),
          readTime: Number(formData.readTime),
          status: 'draft',
          isFeatured: false,
          isTrending: false,
        },
        user.uid,
        imageFile || undefined
      )
      alert('‚úÖ Artyku≈Ç zosta≈Ç dodany!')
      // Reset formularza
      setFormData({ title: '', excerpt: '', content: '', category: 'Stres', tags: '', readTime: 5 })
      removeImage()
    } catch (err) {
      console.error(err)
      alert('‚ùå B≈ÇƒÖd: ' + (err as Error).message)
    } finally {
      setIsSubmitting(false)
    }
  }

  return (
    <form onSubmit={handleSubmit} className="space-y-6">
      {/* Tytu≈Ç */}
      <Input
        placeholder="Tytu≈Ç artyku≈Çu"
        value={formData.title}
        onChange={(e) => setFormData({ ...formData, title: e.target.value })}
        required
      />

      {/* Obrazek */}
      <div>
        <label className="block text-sm font-medium text-gray-700 mb-2">
          Ok≈Çadka artyku≈Çu (opcjonalnie)
        </label>
        {imagePreview ? (
          <div className="relative inline-block">
            <img
              src={imagePreview}
              alt="PodglƒÖd ok≈Çadki"
              className="w-full max-w-xs h-32 object-cover rounded-lg border"
            />
            <button
              type="button"
              onClick={removeImage}
              className="absolute -top-2 -right-2 bg-red-500 text-white rounded-full p-1 hover:bg-red-600"
            >
              <X className="h-4 w-4" />
            </button>
          </div>
        ) : (
          <div
            onClick={() => fileInputRef.current?.click()}
            className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:border-blue-400 transition-colors"
          >
            <Upload className="h-8 w-8 text-gray-400 mx-auto mb-2" />
            <p className="text-sm text-gray-600">Kliknij, aby dodaƒá zdjƒôcie</p>
          </div>
        )}
        <input
          ref={fileInputRef}
          type="file"
          accept="image/*"
          onChange={handleImageChange}
          className="hidden"
        />
      </div>

      {/* Opis */}
      <Textarea
        placeholder="Kr√≥tki opis"
        value={formData.excerpt}
        onChange={(e) => setFormData({ ...formData, excerpt: e.target.value })}
        required
        rows={2}
      />

      {/* Tre≈õƒá */}
      <Textarea
        placeholder="Tre≈õƒá artyku≈Çu"
        value={formData.content}
        onChange={(e) => setFormData({ ...formData, content: e.target.value })}
        required
        rows={10}
      />

      {/* Kategoria */}
      <select
        value={formData.category}
        onChange={(e) => setFormData({ ...formData, category: e.target.value })}
        className="w-full p-3 border rounded"
      >
        {CATEGORIES.map(cat => (
          <option key={cat} value={cat}>{cat}</option>
        ))}
      </select>

      {/* Tagi */}
      <Input
        placeholder="Tagi (oddzielone przecinkami)"
        value={formData.tags}
        onChange={(e) => setFormData({ ...formData, tags: e.target.value })}
      />

      {/* Czas czytania */}
      <Input
        type="number"
        min="1"
        max="30"
        placeholder="Czas czytania (minuty)"
        value={formData.readTime}
        onChange={(e) => setFormData({ ...formData, readTime: Number(e.target.value) })}
      />

      {/* Przycisk */}
      <Button type="submit" disabled={isSubmitting} className="w-full">
        {isSubmitting ? 'Zapisywanie...' : 'Dodaj artyku≈Ç'}
      </Button>
    </form>
  )
}
'use client'

import { useState } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { Card, CardContent } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Sparkles, Heart, Zap, Cloud, Sun, CloudRain } from 'lucide-react'
import { cn } from '@/lib/utils'

interface MoodSelectorProps {
  onMoodSelect: (mood: number) => void
  onAddNote: () => void
  currentMood?: number
}

const moodOptions = [
  {
    level: 20,
    label: 'Bardzo niski',
    emoji: 'üòî',
    description: 'Czujƒô siƒô przygnƒôbiony',
    color: 'from-gray-500 to-gray-600',
    icon: CloudRain,
    tips: ['Zr√≥b g≈Çƒôboki oddech', 'Porozmawiaj z kim≈õ', 'Zr√≥b co≈õ mi≈Çego dla siebie']
  },
  {
    level: 40,
    label: 'Niski',
    emoji: 'üòê',
    description: 'Mam gorszy dzie≈Ñ',
    color: 'from-blue-500 to-blue-600',
    icon: Cloud,
    tips: ['Wyjd≈∫ na spacer', 'Pos≈Çuchaj ulubionej muzyki', 'Zr√≥b ma≈Çy krok naprz√≥d']
  },
  {
    level: 60,
    label: 'Neutralny',
    emoji: 'üôÇ',
    description: 'Jest ok',
    color: 'from-green-500 to-green-600',
    icon: Sun,
    tips: ['Doceniaj ma≈Çe rzeczy', 'Planuj dalsze kroki', 'Ciesz siƒô spokojem']
  },
  {
    level: 80,
    label: 'Wysoki',
    emoji: 'üòä',
    description: 'Czujƒô siƒô dobrze',
    color: 'from-purple-500 to-purple-600',
    icon: Zap,
    tips: ['Podziel siƒô energiƒÖ', 'Zr√≥b co≈õ kreatywnego', 'Pom√≥≈º komu≈õ']
  },
  {
    level: 100,
    label: 'Bardzo wysoki',
    emoji: 'ü§©',
    description: 'Fantastycznie!',
    color: 'from-rose-500 to-rose-600',
    icon: Heart,
    tips: ['Ciesz siƒô momentem', 'Zara≈ºaj pozytywnƒÖ energiƒÖ', 'Zapisuj dobre chwile']
  }
]

export const MoodSelector: React.FC<MoodSelectorProps> = ({
  onMoodSelect,
  onAddNote,
  currentMood
}) => {
  const [selectedMood, setSelectedMood] = useState<number | null>(currentMood || null)
  const [showTips, setShowTips] = useState(false)

  const handleMoodSelect = (moodLevel: number) => {
    setSelectedMood(moodLevel)
    setShowTips(true)
  }

  const handleConfirm = () => {
    if (selectedMood !== null) {
      onMoodSelect(selectedMood)
    }
  }

  const selectedOption = moodOptions.find(opt => opt.level === selectedMood)

  return (
    <div className="w-full max-w-4xl mx-auto space-y-6">
      {/* Nag≈Ç√≥wek */}
      <div className="text-center space-y-3">
        <motion.div
          initial={{ scale: 0.8, opacity: 0 }}
          animate={{ scale: 1, opacity: 1 }}
          className="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-white/80 backdrop-blur-sm border border-gray-100"
        >
          <Sparkles className="h-4 w-4 text-blue-500" />
          <span className="text-sm font-medium text-gray-700">Jak siƒô dzi≈õ czujesz?</span>
        </motion.div>
        <h2 className="text-2xl sm:text-3xl font-light text-gray-900">
          Wybierz sw√≥j nastr√≥j
        </h2>
        <p className="text-gray-600 max-w-2xl mx-auto">
          Ta decyzja pomo≈ºe nam lepiej zrozumieƒá Tw√≥j dzie≈Ñ i dostarczyƒá spersonalizowane insights
        </p>
      </div>

      {/* Opcje nastroju */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-3">
        {moodOptions.map((mood, index) => (
          <motion.div
            key={mood.level}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.1 }}
          >
            <Card
              className={cn(
                "cursor-pointer transition-all duration-300 border-2 backdrop-blur-sm",
                selectedMood === mood.level
                  ? "border-blue-500 shadow-lg scale-105 bg-white/90"
                  : "border-gray-200 bg-white/80 hover:border-gray-300 hover:shadow-md"
              )}
              onClick={() => handleMoodSelect(mood.level)}
            >
              <CardContent className="p-4 text-center">
                <div className="text-3xl mb-2">{mood.emoji}</div>
                <div className={cn(
                  "text-xs font-medium px-2 py-1 rounded-full mb-2",
                  selectedMood === mood.level 
                    ? "bg-blue-100 text-blue-700" 
                    : "bg-gray-100 text-gray-700"
                )}>
                  {mood.label}
                </div>
                <p className="text-xs text-gray-600 leading-tight">
                  {mood.description}
                </p>
              </CardContent>
            </Card>
          </motion.div>
        ))}
      </div>

      {/* Wybrane tipsy i akcje */}
      <AnimatePresence>
        {selectedMood !== null && (
          <motion.div
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: 'auto' }}
            exit={{ opacity: 0, height: 0 }}
            className="space-y-4"
          >
            {/* Tipsy */}
            {showTips && selectedOption && (
              <motion.div
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl p-4 border border-blue-100"
              >
                <h4 className="font-semibold text-gray-900 mb-3 flex items-center gap-2">
                  <Sparkles className="h-4 w-4 text-blue-500" />
                  Szybkie wsparcie dla Ciebie:
                </h4>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-2">
                  {selectedOption.tips.map((tip, index) => (
                    <motion.div
                      key={index}
                      initial={{ opacity: 0, x: -10 }}
                      animate={{ opacity: 1, x: 0 }}
                      transition={{ delay: index * 0.1 }}
                      className="flex items-center gap-2 p-2 bg-white/80 rounded-lg text-sm text-gray-700"
                    >
                      <div className="w-2 h-2 rounded-full bg-blue-500 flex-shrink-0" />
                      {tip}
                    </motion.div>
                  ))}
                </div>
              </motion.div>
            )}

            {/* Akcje */}
            <div className="flex gap-3">
              <Button
                onClick={handleConfirm}
                className="flex-1 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 py-3 rounded-xl font-medium text-white shadow-lg hover:shadow-xl transition-all duration-200"
                size="lg"
              >
                <Sparkles className="h-4 w-4 mr-2" />
                Zapisz nastr√≥j i zobacz AI Insights
              </Button>
              
              <Button
                onClick={onAddNote}
                variant="outline"
                className="border-gray-300 text-gray-700 hover:border-gray-400 hover:bg-gray-50 py-3 rounded-xl font-medium"
                size="lg"
              >
                + Dodaj notatkƒô
              </Button>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  )
}'use client'

import { useState, useMemo } from 'react'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Filter, Phone, Clock, MapPin, Heart, School, Users, Shield, Church, AlertTriangle, Home } from 'lucide-react'
import { cn } from '@/lib/utils'
import Header from '@/components/layout/header' // Zaktualizowana ≈õcie≈ºka importu

// Typy danych
interface SupportPlace {
  id: string
  name: string
  type: 'psychologist' | 'hotline' | 'ngo' | 'school' | 'hospital' | 'family' | 'senior' | 'crisis' | 'religious' | 'victim'
  address: string
  phone?: string
  hours?: string
  description?: string
  website?: string
  email?: string
}

// KOMPLETNA BAZA WSPARCIA PSYCHOLOGICZNEGO W WARSZAWIE
const WARSAW_SUPPORT_PLACES: SupportPlace[] = [
  // WSPARCIE PSYCHOLOGICZNE
  {
    id: 'syntonia',
    name: 'Stowarzyszenie Syntonia',
    type: 'psychologist',
    address: 'Warszawa',
    phone: '792 810 820, 792 810 180',
    hours: 'Pon 9:00-13:00, Wt-≈ör 9:00-12:00',
    email: 'wsparcieopiekunow@gmail.com, zapisy@syntonia.org.pl',
    description: 'Wsparcie psychologiczne online'
  },
  {
    id: 'pck',
    name: 'Polski Czerwony Krzy≈º',
    type: 'psychologist',
    address: 'Warszawa',
    phone: '607 050 655',
    hours: 'Pon-Pt 9:00-14:00, Pon 8:00-20:00, Czw 18:00-20:00',
    description: 'Porady psychologiczne'
  },
  {
    id: 'razem',
    name: 'Fundacja Razem',
    type: 'psychologist',
    address: 'Warszawa',
    phone: '733 563 311',
    hours: 'Pon-Pt 10:00-18:00',
    description: 'Wsparcie psychologiczne'
  },

  // TELEFONY ZAUFANIA
  {
    id: 'mali-bracia',
    name: 'Stowarzyszenie Mali Bracia Ubogich',
    type: 'hotline',
    address: 'Warszawa',
    phone: '22 635 09 54',
    hours: 'Pon-Pt 17:00-20:00',
    description: 'Telefon zaufania dla senior√≥w'
  },
  {
    id: 'znajdz-pomoc',
    name: 'Fundacja "Znajd≈∫ Pomoc"',
    type: 'hotline',
    address: 'Warszawa',
    phone: '800 220 280',
    hours: 'Pon-Pt 17:00-20:00',
    description: 'Infolinia wsparcia psychologicznego'
  },
  {
    id: '116-111',
    name: 'Telefon Zaufania dla Dzieci i M≈Çodzie≈ºy',
    type: 'hotline',
    address: 'ul. Nowogrodzka 75, 00-662 Warszawa',
    phone: '116 111',
    hours: '24/7',
    description: 'Bezp≈Çatny, ca≈Çodobowy telefon zaufania'
  },
  {
    id: 'itaka',
    name: 'ITAKA - Antydepresyjny Telefon Zaufania',
    type: 'hotline',
    address: 'ul. Nowogrodzka 49, 00-695 Warszawa',
    phone: '22 654 40 41',
    hours: 'Pon-Pt 17:00-20:00',
    description: 'Wsparcie dla os√≥b w depresji'
  },

  // WSPARCIE DLA RODZIN I SENIOR√ìW
  {
    id: 'wawer-rodzina',
    name: 'Specjalistyczna Poradnia Rodzinna Dzielnicy Wawer',
    type: 'family',
    address: 'Warszawa',
    phone: '22 612 77 94, 22 277 11 98',
    hours: 'Pon-Pt 8:00-16:00',
    description: 'Pomoc dla rodzin, r√≥wnie≈º przez Skype'
  },
  {
    id: 'projekt-starsi',
    name: 'Fundacja Projekt Starsi',
    type: 'senior',
    address: 'Warszawa',
    phone: '537 375 505',
    description: 'Pomoc osobom starszym krzywdzonym przez bliskich'
  },

  // PORADNIE KATOLICKIE
  {
    id: 'katolicka-poradnia',
    name: 'Archidiecezjalna Poradnia Katolicka',
    type: 'religious',
    address: 'ul. Nowogrodzka 49, Warszawa',
    phone: '22 629 02 61',
    hours: '15:00-19:00',
    website: 'http://duszpasterstworodzin.pl',
    description: 'Pomoc psychologiczna, prawna, duchowa'
  },
  {
    id: 'dewajtis',
    name: 'Poradnia Dewajtis',
    type: 'religious',
    address: 'ul. Dzielna 11a, Warszawa',
    phone: '660 511 566',
    hours: 'Pon-Pt 14:00-19:00',
    email: 'kontaktdewajtis@gmail.com',
    website: 'http://www.dewajtis.pl/'
  },
  {
    id: 'bednarska',
    name: 'Poradnia "Bednarska"',
    type: 'religious',
    address: 'ul. Mariensztat 8, Warszawa',
    phone: '22 828 54 83',
    hours: 'Pon-Pt 8:00-20:00',
    website: 'www.opp.bednarska.warszawa.pl'
  },
  {
    id: 'inigo',
    name: 'Fundacja INIGO',
    type: 'religious',
    address: 'ul. A. Boboli 12, Warszawa',
    phone: '797 002 584',
    hours: 'Pon-Czw 16:00-19:00, Pt 9:00-12:00',
    website: 'www.inigo.org.pl'
  },

  // POMOC POKRZYWDZONYM
  {
    id: 'centrum-pomocy',
    name: 'Centrum Psychologicznej Pomocy Rodzinie',
    type: 'victim',
    address: 'ul. Wsp√≥lna 35/8, 00-519 Warszawa',
    phone: '22 621 11 51'
  },
  {
    id: 'dzieci-niczyje',
    name: 'Centrum Pomocy Rodzinie "Dzieci Niczyje"',
    type: 'victim',
    address: 'ul. Walecznych 59, 03-926 Warszawa',
    phone: '22 616 02 68'
  },

  // PORADNIE PSYCHOLOGICZNO-PEDAGOGICZNE (wybrane)
  {
    id: 'ppp1',
    name: 'Poradnia Psychologiczno-Pedagogiczna nr 1',
    type: 'school',
    address: 'ul. Z≈Çota 9 lok. 3, 00-019 Warszawa',
    phone: '22 290 36 99',
    website: 'ppp1.waw.pl',
    email: 'sekretariat.ppp1@eduwarszawa.pl'
  },
  {
    id: 'ppp2',
    name: 'Poradnia Psychologiczno-Pedagogiczna nr 2',
    type: 'school',
    address: 'ul. Karolkowa 53 A, 01-197 Warszawa',
    phone: '22 836 70 88',
    website: 'poradnia2.waw.pl',
    email: 'sekretariat.ppp2@eduwarszawa.pl'
  },
  {
    id: 'ppp3',
    name: 'Poradnia Psychologiczno-Pedagogiczna nr 3',
    type: 'school',
    address: 'ul. Feli≈Ñskiego 15, 01-513 Warszawa',
    phone: '22 277-22-10',
    website: 'poradnia-nr3.pl',
    email: 'sekretariat.ppp3@eduwarszawa.pl'
  },
  {
    id: 'ppp4',
    name: 'Poradnia Psychologiczno-Pedagogiczna nr 4',
    type: 'school',
    address: 'ul. Mi≈Ñska 1/5, 03-806 Warszawa',
    phone: '22 810 20 29',
    website: 'ppp4.edu.pl',
    email: 'ppp4@eduwarszawa.pl'
  },
  {
    id: 'ppp-top',
    name: 'Specjalistyczna Poradnia Psychologiczno-Pedagogiczna "TOP"',
    type: 'school',
    address: 'ul. Raszy≈Ñska 8/10, 02-026 Warszawa',
    phone: '22 822 77 17',
    email: 'sppptop@eduwarszawa.pl',
    website: 'poradnia-top.pl'
  },

  // KRYZYS
  {
    id: 'pogotowie-rodzina',
    name: 'Pogotowie dla Rodziny',
    type: 'crisis',
    address: 'ul. Domaniewska 20, Warszawa',
    phone: '692 032 370',
    website: 'https://www.pogotowiedlarodziny.com'
  },
  {
    id: 'pracownia-dialogu',
    name: 'Pracownia Dialogu',
    type: 'crisis',
    address: 'ul. Freta 20/24a, Warszawa',
    phone: '664 050 178',
    website: 'https://pracowniadialogu.pl/'
  }
]

// Filtry kategorii
const PLACE_TYPES = [
  { 
    id: 'all', 
    label: 'Wszystkie', 
    icon: MapPin, 
    color: 'bg-gradient-to-r from-purple-500 to-pink-500', 
    markerColor: '#8B5CF6',
    emoji: 'üè¢'
  },
  { 
    id: 'school', 
    label: 'Poradnie PPP', 
    icon: School, 
    color: 'bg-gradient-to-r from-purple-500 to-indigo-500', 
    markerColor: '#8B5CF6',
    emoji: 'üè´'
  },
  { 
    id: 'psychologist', 
    label: 'Psychologowie', 
    icon: Heart, 
    color: 'bg-gradient-to-r from-blue-500 to-cyan-500', 
    markerColor: '#3B82F6',
    emoji: 'üß†'
  },
  { 
    id: 'hotline', 
    label: 'Telefony', 
    icon: Phone, 
    color: 'bg-gradient-to-r from-red-500 to-orange-500', 
    markerColor: '#EF4444',
    emoji: 'üìû'
  },
  { 
    id: 'family', 
    label: 'Dla Rodzin', 
    icon: Users, 
    color: 'bg-gradient-to-r from-green-500 to-emerald-500', 
    markerColor: '#10B981',
    emoji: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶'
  },
  { 
    id: 'senior', 
    label: 'Dla Senior√≥w', 
    icon: Home, 
    color: 'bg-gradient-to-r from-amber-500 to-orange-500', 
    markerColor: '#F59E0B',
    emoji: 'üëµ'
  },
  { 
    id: 'religious', 
    label: 'Katolickie', 
    icon: Church, 
    color: 'bg-gradient-to-r from-gray-500 to-gray-700', 
    markerColor: '#6B7280',
    emoji: '‚õ™'
  },
  { 
    id: 'crisis', 
    label: 'Kryzys', 
    icon: AlertTriangle, 
    color: 'bg-gradient-to-r from-red-600 to-rose-600', 
    markerColor: '#DC2626',
    emoji: 'üÜò'
  },
  { 
    id: 'victim', 
    label: 'Pokrzywdzeni', 
    icon: Shield, 
    color: 'bg-gradient-to-r from-purple-600 to-violet-600', 
    markerColor: '#7C3AED',
    emoji: 'üõ°Ô∏è'
  }
]

export default function WarsawMap() {
  const [selectedFilter, setSelectedFilter] = useState('all')
  const [selectedPlace, setSelectedPlace] = useState<SupportPlace | null>(null)
  
  // Filtrowanie miejsc
  const filteredPlaces = useMemo(() => 
    selectedFilter === 'all' 
      ? WARSAW_SUPPORT_PLACES 
      : WARSAW_SUPPORT_PLACES.filter(place => place.type === selectedFilter)
  , [selectedFilter])

  const getTypeConfig = (type: string) => {
    return PLACE_TYPES.find(t => t.id === type) || PLACE_TYPES[0]
  }

  // Funkcja telefonu
  const handleCall = (phone: string) => {
    // Usu≈Ñ spacje i wybierz pierwszy numer
    const cleanPhone = phone.split(',')[0].trim().replace(/\s/g, '')
    window.open(`tel:${cleanPhone}`, '_self')
  }

  // Funkcja nawigacji
  const handleNavigate = (address: string) => {
    const encodedAddress = encodeURIComponent(address)
    window.open(`https://www.google.com/maps/search/?api=1&query=${encodedAddress}`, '_blank')
  }

  // Statystyki
  const stats = useMemo(() => ({
    total: WARSAW_SUPPORT_PLACES.length,
    byType: PLACE_TYPES.filter(t => t.id !== 'all').map(type => ({
      type: type.id,
      label: type.label,
      count: WARSAW_SUPPORT_PLACES.filter(p => p.type === type.id).length,
      emoji: type.emoji
    }))
  }), [])

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-blue-50 to-cyan-50">
      {/* Navbar */}
      <Header />
      
      <div className="py-8">
        <div className="container mx-auto max-w-7xl px-4">
          
          {/* Nag≈Ç√≥wek */}
          <div className="flex items-center justify-between mb-8 p-6 rounded-2xl bg-white/80 backdrop-blur-sm border border-white/40 shadow-lg">
            <div className="text-center flex-1">
              <h1 className="text-2xl sm:text-3xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent leading-tight">
                Mapa Wsparcia Psychologicznego - Warszawa
              </h1>
              <p className="text-gray-600 mt-2 text-sm sm:text-base">
                {stats.total} miejsc pomocy psychologicznej w Warszawie
              </p>
            </div>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
            
            {/* Panel boczny */}
            <div className="lg:col-span-1 space-y-6">
              
              {/* Karta filtr√≥w */}
              <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm border border-white/40">
                <CardHeader className="pb-4">
                  <CardTitle className="flex items-center gap-2 text-lg font-bold text-gray-900">
                    <Filter className="h-5 w-5 text-purple-600" />
                    Filtruj miejsca
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-2">
                  {PLACE_TYPES.map((type) => {
                    const count = WARSAW_SUPPORT_PLACES.filter(p => type.id === 'all' || p.type === type.id).length
                    
                    return (
                      <Button
                        key={type.id}
                        variant={selectedFilter === type.id ? "default" : "outline"}
                        className={cn(
                          "w-full justify-start gap-3 py-4 text-sm font-semibold transition-all duration-200",
                          selectedFilter === type.id 
                            ? "text-white shadow-lg transform scale-[1.02] border-0" 
                            : "border-2 border-gray-200 bg-white/90 hover:bg-white hover:border-gray-300 text-gray-700 hover:scale-[1.01]"
                        )}
                        style={
                          selectedFilter === type.id 
                            ? { background: `linear-gradient(135deg, ${type.markerColor}20, ${type.markerColor}40)`, color: type.markerColor }
                            : {}
                        }
                        onClick={() => setSelectedFilter(type.id)}
                      >
                        <span className="text-lg">{type.emoji}</span>
                        {type.label}
                        <span className="ml-auto text-xs font-medium bg-black/10 px-2 py-1 rounded-full">
                          {count}
                        </span>
                      </Button>
                    )
                  })}
                </CardContent>
              </Card>

              {/* Statystyki */}
              <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm border border-white/40">
                <CardHeader className="pb-4">
                  <CardTitle className="text-lg font-bold text-gray-900">
                    Statystyki
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-3 text-sm">
                  <div className="text-center mb-4">
                    <div className="text-2xl font-bold text-purple-600">{stats.total}</div>
                    <div className="text-gray-600">wszystkich miejsc</div>
                  </div>
                  {stats.byType.map(stat => (
                    <div key={stat.type} className="flex justify-between items-center">
                      <div className="flex items-center gap-2">
                        <span>{stat.emoji}</span>
                        <span className="text-gray-700">{stat.label}:</span>
                      </div>
                      <span className="font-bold">{stat.count}</span>
                    </div>
                  ))}
                </CardContent>
              </Card>
            </div>

            {/* G≈Ç√≥wna lista miejsc */}
            <div className="lg:col-span-3">
              <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm border border-white/40">
                <CardHeader className="pb-4">
                  <CardTitle className="text-lg font-bold text-gray-900">
                    {selectedFilter === 'all' ? 'Wszystkie miejsca wsparcia' : `Miejsca: ${getTypeConfig(selectedFilter).label}`} ({filteredPlaces.length})
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4 max-h-[600px] overflow-y-auto pr-2">
                    {filteredPlaces.map((place) => {
                      const config = getTypeConfig(place.type)
                      return (
                        <div
                          key={place.id}
                          className={cn(
                            "p-6 border-2 rounded-xl transition-all duration-200 hover:shadow-lg group",
                            selectedPlace?.id === place.id
                              ? "border-purple-500 bg-purple-50 shadow-lg ring-2 ring-purple-200"
                              : "border-gray-200 bg-white/90 shadow-sm hover:border-purple-300"
                          )}
                        >
                          <div className="flex items-start justify-between mb-4">
                            <div className="flex-1">
                              <div className="flex items-center gap-3 mb-3">
                                <div 
                                  className="w-12 h-12 rounded-full flex items-center justify-center text-white text-lg font-bold shadow-md"
                                  style={{ backgroundColor: config.markerColor }}
                                >
                                  {config.emoji}
                                </div>
                                <div className="flex-1">
                                  <h3 className="font-bold text-gray-900 text-lg leading-tight">
                                    {place.name}
                                  </h3>
                                  <div className="flex items-center gap-2 mt-1">
                                    <span className="text-sm text-gray-500">{config.label}</span>
                                    {place.hours && (
                                      <span className="text-xs bg-green-100 text-green-700 px-2 py-1 rounded-full">
                                        {place.hours.split(',')[0]}
                                      </span>
                                    )}
                                  </div>
                                </div>
                              </div>
                              
                              <div className="space-y-2 text-sm text-gray-700">
                                <div className="flex items-center gap-2">
                                  <MapPin className="h-4 w-4 text-gray-500 flex-shrink-0" />
                                  <span>{place.address}</span>
                                </div>
                                
                                {place.phone && (
                                  <div className="flex items-center gap-2">
                                    <Phone className="h-4 w-4 text-gray-500 flex-shrink-0" />
                                    <span className="font-bold text-purple-600">{place.phone}</span>
                                  </div>
                                )}
                                
                                {place.hours && (
                                  <div className="flex items-center gap-2">
                                    <Clock className="h-4 w-4 text-gray-500 flex-shrink-0" />
                                    <span className="text-gray-600">{place.hours}</span>
                                  </div>
                                )}
                              </div>

                              {place.description && (
                                <p className="text-sm text-gray-600 mt-3">
                                  {place.description}
                                </p>
                              )}

                              {(place.website || place.email) && (
                                <div className="flex gap-4 mt-3 text-sm">
                                  {place.website && (
                                    <a href={`https://${place.website}`} target="_blank" rel="noopener noreferrer" className="text-blue-600 font-medium hover:underline">
                                      üåê {place.website}
                                    </a>
                                  )}
                                  {place.email && (
                                    <a href={`mailto:${place.email}`} className="text-blue-600 font-medium hover:underline">
                                      ‚úâÔ∏è {place.email}
                                    </a>
                                  )}
                                </div>
                              )}
                            </div>
                          </div>

                          <div className="flex gap-2 mt-4">
                            <Button 
                              className="flex-1 bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white shadow-lg"
                              onClick={() => handleNavigate(place.address)}
                            >
                              <MapPin className="h-4 w-4 mr-2" />
                              Poka≈º na mapie
                            </Button>
                            
                            {place.phone && (
                              <Button 
                                variant="outline" 
                                className="border-gray-200 hover:border-green-300 hover:text-green-600"
                                onClick={() => handleCall(place.phone!)}
                              >
                                <Phone className="h-4 w-4 mr-2" />
                                Zadzwo≈Ñ
                              </Button>
                            )}
                          </div>
                        </div>
                      )
                    })}
                  </div>
                </CardContent>
              </Card>

              {/* Informacja o ewentualnych b≈Çƒôdach */}
              <div className="mt-6 space-y-4">
                <div className="p-4 bg-yellow-50 border border-yellow-200 rounded-lg text-sm text-yellow-800">
                  <div className="flex items-start gap-3">
                    <div className="flex-shrink-0 mt-0.5">
                      <svg className="w-5 h-5 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
                        <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
                      </svg>
                    </div>
                    <div>
                      <p className="font-medium mb-1">Uwaga dotyczƒÖca danych</p>
                      <p className="text-yellow-700">
                        Informacje o miejscach wsparcia mogƒÖ zawieraƒá ewentualne b≈Çƒôdy lub nieaktualne dane. 
                        Godziny otwarcia, numery telefon√≥w i adresy mogƒÖ ulegaƒá zmianom. 
                        Przed wizytƒÖ zalecamy telefoniczne potwierdzenie dostƒôpno≈õci us≈Çug.
                      </p>
                    </div>
                  </div>
                </div>

                {/* Informacja o zg≈Çaszaniu b≈Çƒôd√≥w */}
                <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg text-sm text-blue-800">
                  <div className="flex items-start gap-3">
                    <div className="flex-shrink-0 mt-0.5">
                      <svg className="w-5 h-5 text-blue-500" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" />
                        <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" />
                      </svg>
                    </div>
                    <div>
                      <p className="font-medium mb-1">Znalaz≈Çe≈õ b≈ÇƒÖd w danych?</p>
                      <p className="text-blue-700 mb-2">
                        Je≈ºeli zauwa≈ºy≈Çe≈õ jaki≈õ b≈ÇƒÖd w informacjach lub masz sugestie dotyczƒÖce ulepszenia tej mapy wsparcia, prosimy o kontakt:
                      </p>
                      <a 
                        href="mailto:spokojwglowie.kontakt@gmail.com" 
                        className="inline-flex items-center gap-2 bg-blue-100 hover:bg-blue-200 text-blue-800 font-medium px-3 py-2 rounded-lg transition-colors duration-200"
                      >
                        <svg className="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                          <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" />
                          <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" />
                        </svg>
                        spokojwglowie.kontakt@gmail.com
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}
'use client'

import { useState } from 'react'
import { motion } from 'framer-motion'
import { Button } from '@/components/ui/button'
import { Textarea } from '@/components/ui/textarea'
import { Send, Sparkles } from 'lucide-react'
import { cn } from '@/lib/utils'
import { getMoodLabel, getMoodEmoji } from '@/lib/mood-utils'

interface MoodEntryFormProps {
  currentMood: number
  onSave: (data: { mood: number; note?: string }) => void
  isLoading?: boolean
}

export const MoodEntryForm: React.FC<MoodEntryFormProps> = ({
  currentMood,
  onSave,
  isLoading = false
}) => {
  const [note, setNote] = useState('')
  const [isFocused, setIsFocused] = useState(false)

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    onSave({ mood: currentMood, note: note.trim() || undefined })
  }

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className="w-full max-w-2xl mx-auto space-y-6"
    >
      {/* Nag≈Ç√≥wek */}
      <div className="text-center space-y-3">
        <div className="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-white/80 backdrop-blur-sm border border-gray-100">
          <Sparkles className="h-4 w-4 text-blue-500" />
          <span className="text-sm font-medium text-gray-700">Dodaj notatkƒô do nastroju</span>
        </div>
        <h2 className="text-2xl font-light text-gray-900">
          {getMoodEmoji(currentMood)} {currentMood}% - {getMoodLabel(currentMood)}
        </h2>
      </div>

      {/* Formularz */}
      <form onSubmit={handleSubmit} className="space-y-4">
        <div className="space-y-3">
          <label htmlFor="note" className="text-sm font-medium text-gray-700">
            Notatka (opcjonalnie)
          </label>
          <div className={cn(
            "relative rounded-xl border-2 transition-all duration-200",
            isFocused 
              ? "border-blue-500 bg-blue-50/20 shadow-sm" 
              : "border-gray-200 bg-white hover:border-gray-300"
          )}>
            <Textarea
              id="note"
              value={note}
              onChange={(e) => setNote(e.target.value)}
              onFocus={() => setIsFocused(true)}
              onBlur={() => setIsFocused(false)}
              placeholder="Co wp≈Çywa na Tw√≥j nastr√≥j? Co czujesz w tym momencie? Co Ciƒô cieszy lub martwi?"
              className="min-h-[120px] resize-none border-0 bg-transparent focus:ring-0 text-gray-700 placeholder-gray-400"
            />
            <div className="absolute bottom-3 right-3">
              <span className={cn(
                "text-xs transition-colors",
                note.length > 400 ? "text-rose-500" : "text-gray-400"
              )}>
                {note.length}/500
              </span>
            </div>
          </div>
        </div>

        <Button
          type="submit"
          className="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 py-3 rounded-xl font-medium text-white shadow-lg hover:shadow-xl transition-all duration-200"
          disabled={isLoading}
          size="lg"
        >
          {isLoading ? (
            <>
              <div className="animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent mr-2" />
              Zapisujƒô...
            </>
          ) : (
            <>
              <Send className="h-4 w-4 mr-2" />
              Zapisz notatkƒô i zobacz AI Insights
            </>
          )}
        </Button>
      </form>
    </motion.div>
  )
}// src/components/friends/RealFirebaseSearch.tsx
'use client'

import { useState, useRef, useEffect } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { Search, UserPlus, Users, X, Sparkles, Loader2 } from 'lucide-react'
import { firebaseSearchService, type SearchableUser } from '@/lib/simple-friends-search'
import { useAuth } from '@/components/providers/auth-provider'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { cn } from '@/lib/utils'

export function RealFirebaseSearch() {
  const { user: authUser } = useAuth()
  const [query, setQuery] = useState('')
  const [results, setResults] = useState<SearchableUser[]>([])
  const [allUsers, setAllUsers] = useState<SearchableUser[]>([])
  const [isSearching, setIsSearching] = useState(false)
  const [isLoading, setIsLoading] = useState(false)
  const [searchMethod, setSearchMethod] = useState<'firebase' | 'client'>('firebase')
  const inputRef = useRef<HTMLInputElement>(null)

  // Za≈Çaduj wszystkich u≈ºytkownik√≥w przy starcie
  useEffect(() => {
    if (authUser?.uid) {
      loadAllUsers()
    }
  }, [authUser?.uid])

  const loadAllUsers = async () => {
    if (!authUser?.uid) return
    const users = await firebaseSearchService.getAllUsers(authUser.uid)
    setAllUsers(users)
  }

  const handleSearch = async (searchQuery: string) => {
    if (!authUser?.uid) return
    
    setQuery(searchQuery)
    
    if (searchQuery.length < 2) {
      setResults([])
      setIsSearching(false)
      return
    }

    setIsSearching(true)
    setIsLoading(true)

    try {
      let searchResults: SearchableUser[] = []
      
      if (searchMethod === 'firebase') {
        // Prawdziwe wyszukiwanie Firebase
        searchResults = await firebaseSearchService.searchUsers(searchQuery, authUser.uid)
      } else {
        // Wyszukiwanie po stronie klienta (fallback)
        searchResults = allUsers.filter(user =>
          user.displayName.toLowerCase().includes(searchQuery.toLowerCase()) ||
          user.firstName.toLowerCase().includes(searchQuery.toLowerCase()) ||
          user.lastName.toLowerCase().includes(searchQuery.toLowerCase()) ||
          user.email.toLowerCase().includes(searchQuery.toLowerCase())
        ).slice(0, 10)
      }
      
      setResults(searchResults)
    } catch (error) {
      console.error('Search error:', error)
      // Fallback do wyszukiwania po stronie klienta
      const clientResults = allUsers.filter(user =>
        user.displayName.toLowerCase().includes(searchQuery.toLowerCase()) ||
        user.firstName.toLowerCase().includes(searchQuery.toLowerCase()) ||
        user.lastName.toLowerCase().includes(searchQuery.toLowerCase()) ||
        user.email.toLowerCase().includes(searchQuery.toLowerCase())
      ).slice(0, 10)
      setResults(clientResults)
    } finally {
      setIsLoading(false)
    }
  }

  const handleAddFriend = async (friendId: string) => {
    if (!authUser?.uid) return
    
    try {
      // Tutaj dodaj logikƒô dodawania znajomego do Firestore
      console.log('Dodajƒô znajomego:', friendId)
      
      // Tymczasowo usu≈Ñ z wynik√≥w
      setResults(prev => prev.filter(user => user.uid !== friendId))
      
      // Pokazuj sukces
      setTimeout(() => {
        console.log('‚úÖ Znajomy dodany pomy≈õlnie!')
      }, 500)
      
    } catch (error) {
      console.error('Error adding friend:', error)
    }
  }

  const clearSearch = () => {
    setQuery('')
    setResults([])
    setIsSearching(false)
    inputRef.current?.focus()
  }

  return (
    <div className="space-y-6">
      {/* Tryb wyszukiwania */}
      <div className="flex gap-2">
        <Button
          variant={searchMethod === 'firebase' ? 'default' : 'outline'}
          size="sm"
          onClick={() => setSearchMethod('firebase')}
          className="text-xs"
        >
          üî• Firebase Search
        </Button>
        <Button
          variant={searchMethod === 'client' ? 'default' : 'outline'} 
          size="sm"
          onClick={() => setSearchMethod('client')}
          className="text-xs"
        >
          üíª Client Search
        </Button>
      </div>

      {/* Wyszukiwarka */}
      <div className="relative">
        <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 h-4 w-4" />
        <Input
          ref={inputRef}
          type="text"
          placeholder={
            searchMethod === 'firebase' 
              ? "Wyszukaj w Firebase po imieniu, nazwisku, email..."
              : "Wyszukaj lokalnie po imieniu, nazwisku, email..."
          }
          value={query}
          onChange={(e) => handleSearch(e.target.value)}
          className="pl-10 pr-10 h-12 rounded-xl border-slate-300 focus:border-blue-500"
        />
        {query && (
          <button
            onClick={clearSearch}
            className="absolute right-3 top-1/2 transform -translate-y-1/2 text-slate-400 hover:text-slate-600"
          >
            <X className="h-4 w-4" />
          </button>
        )}
      </div>

      {/* Status wyszukiwania */}
      {isSearching && (
        <div className="text-sm text-slate-600 flex items-center gap-2">
          {isLoading ? (
            <>
              <Loader2 className="h-4 w-4 animate-spin" />
              Wyszukiwanie w {searchMethod === 'firebase' ? 'Firebase...' : 'lokalnej bazie...'}
            </>
          ) : (
            <>
              <Search className="h-4 w-4" />
              Znaleziono {results.length} wynik√≥w
            </>
          )}
        </div>
      )}

      {/* Wyniki wyszukiwania */}
      <AnimatePresence>
        {isSearching && (
          <motion.div
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: 'auto' }}
            exit={{ opacity: 0, height: 0 }}
            className="overflow-hidden"
          >
            <Card>
              <CardHeader className="pb-3">
                <CardTitle className="text-lg flex items-center gap-2">
                  <Search className="h-5 w-5 text-blue-500" />
                  Wyniki wyszukiwania
                  <span className="text-sm font-normal text-slate-500">
                    ({searchMethod === 'firebase' ? 'Firebase' : 'Lokalne'})
                  </span>
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                {results.length > 0 ? (
                  results.map((user) => (
                    <UserResult 
                      key={user.uid} 
                      user={user} 
                      onAddFriend={handleAddFriend}
                    />
                  ))
                ) : (
                  <div className="text-center py-8 text-slate-500">
                    {isLoading ? (
                      <div className="flex items-center justify-center gap-2">
                        <Loader2 className="h-4 w-4 animate-spin" />
                        Wyszukiwanie...
                      </div>
                    ) : query.length >= 2 ? (
                      <div>Nie znaleziono u≈ºytkownik√≥w</div>
                    ) : (
                      <div>Wpisz co najmniej 2 znaki</div>
                    )}
                  </div>
                )}
              </CardContent>
            </Card>
          </motion.div>
        )}
      </AnimatePresence>

      {/* Wszyscy u≈ºytkownicy (je≈õli nie wyszukujemy) */}
      {!isSearching && allUsers.length > 0 && (
        <Card>
          <CardHeader className="pb-3">
            <CardTitle className="text-lg flex items-center gap-2">
              <Users className="h-5 w-5 text-green-500" />
              Wszyscy u≈ºytkownicy ({allUsers.length})
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-3">
            {allUsers.slice(0, 5).map((user) => (
              <UserResult 
                key={user.uid} 
                user={user} 
                onAddFriend={handleAddFriend}
              />
            ))}
            {allUsers.length > 5 && (
              <div className="text-center pt-2">
                <Button variant="outline" size="sm">
                  Poka≈º wiƒôcej ({allUsers.length - 5})
                </Button>
              </div>
            )}
          </CardContent>
        </Card>
      )}
    </div>
  )
}

// Komponent pojedynczego u≈ºytkownika
function UserResult({ user, onAddFriend }: { user: SearchableUser, onAddFriend: (id: string) => void }) {
  const [isAdding, setIsAdding] = useState(false)

  const handleAdd = async () => {
    setIsAdding(true)
    await onAddFriend(user.uid)
    setIsAdding(false)
  }

  return (
    <motion.div
      initial={{ opacity: 0, y: 10 }}
      animate={{ opacity: 1, y: 0 }}
      className="flex items-center justify-between p-4 rounded-xl border border-slate-200 bg-white hover:shadow-md transition-all"
    >
      <div className="flex items-center gap-3">
        <div className="w-10 h-10 rounded-full bg-gradient-to-br from-blue-500 to-purple-500 flex items-center justify-center text-white font-semibold">
          {user.firstName?.[0] || user.displayName?.[0] || 'U'}
        </div>
        <div>
          <div className="font-semibold text-slate-800">
            {user.displayName}
          </div>
          <div className="text-sm text-slate-600">
            {user.email}
          </div>
          <div className="flex gap-2 mt-1">
            <span className="text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded-full">
              Poziom {user.level}
            </span>
            <span className="text-xs bg-amber-100 text-amber-700 px-2 py-1 rounded-full">
              Streak {user.streak} dni
            </span>
            {user.currentMood && (
              <span className={cn(
                "text-xs px-2 py-1 rounded-full",
                user.currentMood > 70 ? "bg-green-100 text-green-700" :
                user.currentMood > 40 ? "bg-blue-100 text-blue-700" :
                "bg-red-100 text-red-700"
              )}>
                Nastr√≥j {user.currentMood}%
              </span>
            )}
          </div>
        </div>
      </div>
      
      <Button
        onClick={handleAdd}
        disabled={isAdding}
        size="sm"
        className="bg-green-500 hover:bg-green-600"
      >
        {isAdding ? (
          <Loader2 className="h-4 w-4 animate-spin" />
        ) : (
          <>
            <UserPlus className="h-4 w-4 mr-1" />
            Dodaj
          </>
        )}
      </Button>
    </motion.div>
  )
}
'use client'

import { useState, useEffect, useRef } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { cn } from '@/lib/utils'
import { Sparkles, Lightbulb, Brain, TrendingUp, Target, Zap, X, BookOpen, CheckCircle } from 'lucide-react'
import { MoodEntryForm } from '@/components/mood-entry-form'

interface MoodEntry {
  id: string
  mood: number
  note?: string
  date: string
  timestamp: Date
}

interface CircularMoodTrackerProps {
  value: number
  onValueChange: (value: number) => void
  onSaveMood: (data: { mood: number; note?: string }) => Promise<void>
  size?: number
  moodEntries?: MoodEntry[]
  streak?: number
  trend?: number
  consistency?: number
  averageMood?: number
  level?: number
}

interface AIMoodInsights {
  analysis: string
  suggestions: string[]
  pattern: string
  encouragement: string
  specialTip: string
}

const getMoodColor = (value: number) => {
  if (value <= 20) return 'rgba(75, 85, 99, 0.8)'
  if (value <= 40) return 'rgba(59, 130, 246, 0.9)'
  if (value <= 60) return 'rgba(100, 130, 220, 0.9)'
  if (value <= 80) return 'rgba(168, 85, 230, 0.9)'
  return 'rgba(156, 39, 176, 1)'
}

const MoodEmoji = ({ mood }: { mood: number }) => {
  if (mood <= 20) return 'üòî'
  if (mood <= 40) return 'üòê'
  if (mood <= 60) return 'üôÇ'
  if (mood <= 80) return 'üòä'
  return 'ü§©'
}

export const CircularMoodTracker: React.FC<CircularMoodTrackerProps> = ({
  value,
  onValueChange,
  onSaveMood,
  size = 200,
  moodEntries = [],
  streak = 0,
  trend = 0,
  consistency = 0,
  averageMood = 50,
  level = 1
}) => {
  const [currentMood, setCurrentMood] = useState(value)
  const [isDragging, setIsDragging] = useState(false)
  const [hovered, setHovered] = useState<{id: string, content: string} | null>(null)
  const [isMobile, setIsMobile] = useState(false)
  const [showAISuggestions, setShowAISuggestions] = useState(false)
  const [showMoodForm, setShowMoodForm] = useState(false)
  const [isSaving, setIsSaving] = useState(false)
  const [moodSaved, setMoodSaved] = useState(false)
  const [aiInsights, setAiInsights] = useState<AIMoodInsights | null>(null)
  const [loadingAI, setLoadingAI] = useState(false)
  const ringRef = useRef<HTMLDivElement>(null)
  const modalRef = useRef<HTMLDivElement>(null)

  useEffect(() => {
    setCurrentMood(value)
  }, [value])

  useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth <= 768)
    }
    checkMobile()
    window.addEventListener('resize', checkMobile)
    return () => window.removeEventListener('resize', checkMobile)
  }, [])

  // Close modals when clicking outside
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (modalRef.current && !modalRef.current.contains(event.target as Node)) {
        setShowAISuggestions(false)
      }
    }

    if (showAISuggestions) {
      document.addEventListener('mousedown', handleClickOutside)
    }

    return () => {
      document.removeEventListener('mousedown', handleClickOutside)
    }
  }, [showAISuggestions])

  // Get AI Insights when showing suggestions
  useEffect(() => {
    if (showAISuggestions && !aiInsights && !loadingAI) {
      fetchAIInsights()
    }
  }, [showAISuggestions])

  const fetchAIInsights = async () => {
    try {
      setLoadingAI(true)
      
      const response = await fetch('/api/ai-mood-insights', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          mood: currentMood,
          streak,
          trend,
          consistency,
          averageMood,
          level,
          moodHistory: moodEntries.slice(0, 14)
        }),
      })

      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`)

      const data = await response.json()
      setAiInsights(data)
      
    } catch (error) {
      console.error('Error fetching AI insights:', error)
      // Fallback insights
      setAiInsights({
        analysis: "Analizujƒô Tw√≥j nastr√≥j w kontek≈õcie wszystkich danych...",
        suggestions: [
          "Zr√≥b 5 g≈Çƒôbokich oddech√≥w i skup siƒô na chwili obecnej",
          "Zapisz 3 rzeczy za kt√≥re jeste≈õ wdziƒôczny dzisiaj",
          "Wyjd≈∫ na kr√≥tki spacer i zauwa≈º piƒôkno wok√≥≈Ç siebie"
        ],
        pattern: `Konsystencja na poziomie ${consistency}% wskazuje na ${getConsistencyDescription(consistency).toLowerCase()}`,
        encouragement: "Tw√≥j streak pokazuje zaanga≈ºowanie w samoobserwacjƒô! üåü",
        specialTip: "Dopasuj tempo do swojego samopoczucia - s≈Çuchaj siebie"
      })
    } finally {
      setLoadingAI(false)
    }
  }

  const handleDragStart = (e: React.MouseEvent | React.TouchEvent) => {
    e.preventDefault()
    setIsDragging(true)
    handleDragMove(e)
  }

  const handleDragMove = (e: React.MouseEvent | React.TouchEvent) => {
    if (!isDragging || !ringRef.current) return
    
    const rect = ringRef.current.getBoundingClientRect()
    const clientX = 'touches' in e ? e.touches[0].clientX : e.clientX
    const clientY = 'touches' in e ? e.touches[0].clientY : e.clientY
    
    const x = clientX - rect.left - rect.width / 2
    const y = clientY - rect.top - rect.height / 2
    let angle = Math.atan2(y, x) * (180 / Math.PI) + 90
    if (angle < 0) angle += 360
    let newMood = Math.round((angle / 360) * 100)
    newMood = Math.min(Math.max(newMood, 0), 100)
    
    setCurrentMood(newMood)
    onValueChange(newMood)
  }

  const handleDragEnd = () => {
    setIsDragging(false)
    setMoodSaved(false) // Reset saved state when mood changes
  }

  const handleSaveMood = async (data: { mood: number; note?: string }) => {
    setIsSaving(true)
    try {
      await onSaveMood(data)
      setMoodSaved(true)
      setShowMoodForm(false)
      // Automatically show AI insights after saving
      setTimeout(() => setShowAISuggestions(true), 500)
    } catch (error) {
      console.error('Error saving mood:', error)
    } finally {
      setIsSaving(false)
    }
  }

  const handleAddNote = () => {
    setShowMoodForm(true)
  }

  useEffect(() => {
    if (isDragging) {
      const handleMove = (e: MouseEvent | TouchEvent) => {
        handleDragMove(e as any)
      }
      const handleEnd = () => handleDragEnd()

      window.addEventListener('mousemove', handleMove)
      window.addEventListener('mouseup', handleEnd)
      window.addEventListener('touchmove', handleMove)
      window.addEventListener('touchend', handleEnd)

      return () => {
        window.removeEventListener('mousemove', handleMove)
        window.removeEventListener('mouseup', handleEnd)
        window.removeEventListener('touchmove', handleMove)
        window.removeEventListener('touchend', handleEnd)
      }
    }
  }, [isDragging])

  const getRingPercentage = () => currentMood / 100
  const recentHistory = [...moodEntries].reverse().slice(0, 7).reverse()

  return (
    <>
      <div className={cn(
        "relative flex flex-col items-center justify-center select-none w-full max-w-[360px] mx-auto p-4 sm:p-5 rounded-2xl",
        "bg-white/80 backdrop-blur-sm",
        "shadow-md border border-gray-100",
        "transition-colors duration-500",
        "touch-none"
      )}>
        {/* G≈Ç√≥wne pole ringa */}
        <div className="relative w-full aspect-square mb-4">
          <div 
            ref={ringRef}
            className="w-full h-full rounded-full relative cursor-grab active:cursor-grabbing"
            onMouseDown={handleDragStart}
            onTouchStart={handleDragStart}
          >
            <div className="absolute inset-0 rounded-full bg-gray-100/50" />
            
            <div 
              className="absolute inset-0 rounded-full"
              style={{
                background: `conic-gradient(from 0deg, ${getMoodColor(currentMood)} ${getRingPercentage() * 360}deg, transparent ${getRingPercentage() * 360}deg)`,
                clipPath: 'inset(10% 10% 10% 10%)'
              }}
            />
            
            <motion.div
              className="absolute top-0 left-1/2 w-1 h-7 sm:h-8 rounded-t-full bg-white shadow-md"
              style={{ 
                transform: `translateX(-50%) rotate(${currentMood * 3.6}deg)`,
                transformOrigin: '50% 100%'
              }}
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ duration: 0.5 }}
            />
            
            {/* Centrum ringa */}
            <div className="absolute inset-0 flex flex-col items-center justify-center rounded-full bg-white/80 backdrop-blur">
              <motion.div
                key={currentMood}
                initial={{ scale: 0.8, opacity: 0 }}
                animate={{ scale: 1, opacity: 1 }}
                transition={{ type: 'spring', stiffness: 500, damping: 30 }}
                className="text-3xl sm:text-4xl font-medium text-gray-900"
              >
                {currentMood}%
              </motion.div>
              <div className="flex items-center mt-1">
                <MoodEmoji mood={currentMood} />
                <span className="ml-1.5 text-xs sm:text-sm text-gray-500">
                  {getMoodLabel(currentMood, isMobile)}
                </span>
              </div>
            </div>
          </div>
        </div>

        {/* Action Buttons */}
        <div className="flex gap-3 w-full mb-4">
          <button
            onClick={handleAddNote}
            disabled={isSaving || moodSaved}
            className={cn(
              "flex-1 py-3 px-4 rounded-xl font-medium transition-all duration-200 flex items-center justify-center gap-2",
              moodSaved 
                ? "bg-green-50 text-green-700 border border-green-200" 
                : "bg-blue-500 text-white hover:bg-blue-600 shadow-lg hover:shadow-xl"
            )}
          >
            {moodSaved ? (
              <>
                <CheckCircle className="h-4 w-4" />
                Notatka zapisana
              </>
            ) : (
              <>
                <BookOpen className="h-4 w-4" />
                Dodaj notatkƒô
              </>
            )}
          </button>
          
          <button
            onClick={() => setShowAISuggestions(true)}
            className="p-3 rounded-xl bg-gradient-to-r from-blue-50 to-purple-50 hover:from-blue-100 hover:to-purple-100 border border-blue-200 transition-all duration-300 shadow-sm"
          >
            <Sparkles className="h-5 w-5 text-blue-500" />
          </button>
        </div>

        {/* Historia nastroj√≥w */}
        <div className="w-full mb-4">
          <div className="flex items-center justify-between mb-2">
            <span className="text-xs sm:text-sm font-medium text-gray-700">Ostatnie 7 dni</span>
            <span className="text-xs text-gray-500">
              {trend > 0 ? 'üìà' : trend < 0 ? 'üìâ' : '‚û°Ô∏è'} {Math.abs(trend)}%
            </span>
          </div>
          
          <div className="w-full h-12 flex items-center">
            <div className="w-full overflow-x-auto px-1">
              <div className="flex items-center justify-between min-w-max h-full space-x-1">
                {recentHistory.map((entry, index) => {
                  const isHovered = hovered?.id === entry.id
                  
                  return (
                    <div 
                      key={entry.id}
                      className="relative flex flex-col items-center flex-shrink-0"
                      onMouseEnter={() => setHovered({
                        id: entry.id,
                        content: `${entry.mood}% ‚Ä¢ ${formatDate(entry.timestamp)}${entry.note ? `\n${entry.note}` : ''}`
                      })}
                      onMouseLeave={() => setHovered(null)}
                    >
                      <motion.div
                        className="w-2.5 h-2.5 rounded-full mb-1.5"
                        style={{ 
                          backgroundColor: getMoodColor(entry.mood),
                          boxShadow: isHovered ? `0 0 0 4px ${getMoodColor(entry.mood)}20` : 'none'
                        }}
                        initial={{ scale: 0.8, opacity: 0.7 }}
                        animate={{ 
                          scale: isHovered ? 1.3 : 1,
                          opacity: 1
                        }}
                        transition={{ type: 'spring', stiffness: 400, damping: 20 }}
                      />
                      
                      <AnimatePresence>
                        {isHovered && (
                          <motion.div
                            initial={{ opacity: 0, y: -10 }}
                            animate={{ opacity: 1, y: -15 }}
                            exit={{ opacity: 0, y: -10 }}
                            className="absolute -top-10 left-1/2 transform -translate-x-1/2 bg-white text-gray-800 text-xs px-2 py-1 rounded shadow-sm border border-gray-100 whitespace-normal max-w-[180px] text-center z-40"
                          >
                            {entry.mood}%
                          </motion.div>
                        )}
                      </AnimatePresence>
                    </div>
                  )
                })}
              </div>
            </div>
          </div>
        </div>

        {/* Wizualizacja trendu */}
        <div className="w-full h-16 mb-2">
          <div className="w-full h-px bg-gray-200" />
          <div className="w-full h-[80%] flex items-end justify-between px-1">
            {recentHistory.map((entry, index) => {
              const height = `${(entry.mood / 100) * 50}px`;
              const isToday = index === recentHistory.length - 1
              
              return (
                <div key={entry.id} className="flex flex-col items-center w-5 flex-shrink-0">
                  <motion.div
                    className="w-1.5 rounded-t-full"
                    style={{ 
                      backgroundColor: getMoodColor(entry.mood),
                      height: height
                    }}
                    initial={{ height: 0 }}
                    animate={{ height: height }}
                    transition={{ duration: 0.6, delay: index * 0.05 }}
                  />
                  {isToday && (
                    <motion.div
                      className="w-2 h-2 rounded-full bg-white mt-1 shadow-sm"
                      style={{ backgroundColor: getMoodColor(entry.mood) }}
                      initial={{ scale: 0 }}
                      animate={{ scale: 1 }}
                      transition={{ delay: 0.5 }}
                    />
                  )}
                </div>
              )
            })}
          </div>
        </div>

        {/* Statystyki */}
        <div className="w-full grid grid-cols-3 gap-2 text-xs">
          <div className="text-center p-2 bg-blue-50 rounded-lg">
            <div className="font-semibold text-blue-700">{streak}</div>
            <div className="text-blue-600">dni</div>
          </div>
          <div className="text-center p-2 bg-green-50 rounded-lg">
            <div className={`font-semibold ${trend > 0 ? 'text-green-700' : trend < 0 ? 'text-red-700' : 'text-gray-700'}`}>
              {trend > 0 ? '+' : ''}{trend}%
            </div>
            <div className="text-gray-600">trend</div>
          </div>
          <div className="text-center p-2 bg-purple-50 rounded-lg">
            <div className="font-semibold text-purple-700">{consistency}%</div>
            <div className="text-purple-600">konsyst.</div>
          </div>
        </div>
      </div>

      {/* Mood Entry Form */}
      <MoodEntryForm
        isOpen={showMoodForm}
        currentMood={currentMood}
        onSave={handleSaveMood}
        onClose={() => setShowMoodForm(false)}
        isLoading={isSaving}
      />

      {/* AI Insights Modal */}
      <AnimatePresence>
        {showAISuggestions && (
          <>
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              className="fixed inset-0 bg-black/20 backdrop-blur-sm z-50"
              onClick={() => setShowAISuggestions(false)}
            />
            
            <motion.div
              ref={modalRef}
              initial={{ opacity: 0, scale: 0.9, y: 20 }}
              animate={{ opacity: 1, scale: 1, y: 0 }}
              exit={{ opacity: 0, scale: 0.9, y: 20 }}
              transition={{ type: "spring", damping: 25, stiffness: 300 }}
              className="fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-50 w-[95vw] max-w-2xl max-h-[85vh] bg-white rounded-3xl shadow-2xl border border-gray-200 flex flex-col overflow-hidden"
            >
              {/* Header */}
              <div className="flex items-center justify-between p-6 border-b border-gray-100 bg-gradient-to-r from-blue-50 to-purple-50 flex-shrink-0">
                <div className="flex items-center gap-3">
                  <div className="p-2 bg-white rounded-xl shadow-sm">
                    <Brain className="h-6 w-6 text-purple-500" />
                  </div>
                  <div>
                    <h3 className="font-bold text-gray-900 text-lg">AI Analiza Twojego Nastroju</h3>
                    <p className="text-sm text-gray-600">Spersonalizowane insights bazujƒÖce na Twoich danych</p>
                  </div>
                </div>
                <button 
                  onClick={() => setShowAISuggestions(false)}
                  className="p-2 hover:bg-white rounded-xl transition-colors"
                >
                  <X className="h-5 w-5 text-gray-400 hover:text-gray-600" />
                </button>
              </div>
              
              {/* Scrollable Content */}
              <div className="flex-1 overflow-y-auto p-6">
                {loadingAI ? (
                  <div className="space-y-4">
                    <div className="flex items-center gap-3">
                      <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-500" />
                      <div>
                        <div className="h-4 bg-gray-200 rounded w-32 mb-2 animate-pulse"></div>
                        <div className="h-3 bg-gray-200 rounded w-48 animate-pulse"></div>
                      </div>
                    </div>
                    {[1, 2, 3].map(i => (
                      <div key={i} className="animate-pulse">
                        <div className="h-4 bg-gray-200 rounded w-3/4 mb-2"></div>
                        <div className="h-3 bg-gray-200 rounded w-full mb-3"></div>
                      </div>
                    ))}
                  </div>
                ) : aiInsights ? (
                  <div className="space-y-6">
                    {/* Analiza */}
                    <div className="p-4 bg-blue-50 rounded-xl border border-blue-100">
                      <div className="flex items-start gap-3">
                        <Target className="h-5 w-5 text-blue-500 mt-0.5 flex-shrink-0" />
                        <div>
                          <p className="font-semibold text-blue-900 mb-2">Analiza Nastroju</p>
                          <p className="text-blue-800 leading-relaxed">{aiInsights.analysis}</p>
                        </div>
                      </div>
                    </div>

                    {/* Sugestie */}
                    <div>
                      <p className="font-semibold text-gray-900 mb-3 flex items-center gap-2">
                        <Zap className="h-5 w-5 text-yellow-500" />
                        Spersonalizowane Sugestie
                      </p>
                      <div className="space-y-3">
                        {aiInsights.suggestions.map((suggestion, index) => (
                          <div key={index} className="flex items-start gap-3 p-3 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors border border-gray-100">
                            <Lightbulb className="h-4 w-4 text-yellow-500 mt-0.5 flex-shrink-0" />
                            <span className="text-gray-700 leading-relaxed">{suggestion}</span>
                          </div>
                        ))}
                      </div>
                    </div>

                    {/* Wzorzec i Encouragement */}
                    <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
                      <div className="p-3 bg-green-50 rounded-lg border border-green-100">
                        <p className="text-sm font-semibold text-green-800 mb-1">üéØ Wykryty Wzorzec</p>
                        <p className="text-sm text-green-700">{aiInsights.pattern}</p>
                      </div>
                      <div className="p-3 bg-purple-50 rounded-lg border border-purple-100">
                        <p className="text-sm font-semibold text-purple-800 mb-1">üí´ Motywacja</p>
                        <p className="text-sm text-purple-700">{aiInsights.encouragement}</p>
                      </div>
                    </div>

                    {/* Special Tip */}
                    {aiInsights.specialTip && (
                      <div className="p-3 bg-orange-50 rounded-lg border border-orange-100">
                        <p className="text-sm font-semibold text-orange-800 mb-1">üí° Specjalna Rada</p>
                        <p className="text-sm text-orange-700">{aiInsights.specialTip}</p>
                      </div>
                    )}

                    {/* Dane u≈ºytkownika */}
                    <div className="pt-4 border-t border-gray-100">
                      <p className="text-xs font-medium text-gray-700 mb-2">Twoje Statystyki:</p>
                      <div className="grid grid-cols-2 sm:grid-cols-4 gap-2 text-xs">
                        <div className="text-center p-2 bg-blue-50 rounded-lg">
                          <div className="font-semibold text-blue-700">{streak}</div>
                          <div className="text-blue-600">dni streak</div>
                        </div>
                        <div className="text-center p-2 bg-green-50 rounded-lg">
                          <div className="font-semibold text-green-700">{averageMood}%</div>
                          <div className="text-green-600">≈õrednia</div>
                        </div>
                        <div className="text-center p-2 bg-purple-50 rounded-lg">
                          <div className="font-semibold text-purple-700">{consistency}%</div>
                          <div className="text-purple-600">konsystencja</div>
                        </div>
                        <div className="text-center p-2 bg-gray-50 rounded-lg">
                          <div className={`font-semibold ${trend > 0 ? 'text-green-700' : trend < 0 ? 'text-red-700' : 'text-gray-700'}`}>
                            {trend > 0 ? '+' : ''}{trend}%
                          </div>
                          <div className="text-gray-600">trend</div>
                        </div>
                      </div>
                    </div>
                  </div>
                ) : null}
              </div>
              
              {/* Fixed Footer */}
              <div className="p-4 border-t border-gray-100 bg-gray-50 flex-shrink-0">
                <button
                  onClick={() => setShowAISuggestions(false)}
                  className="w-full py-3 bg-blue-500 text-white rounded-xl hover:bg-blue-600 transition-colors font-medium"
                >
                  Zamknij
                </button>
              </div>
            </motion.div>
          </>
        )}
      </AnimatePresence>
    </>
  )
}

function getMoodLabel(mood: number, isMobile: boolean): string {
  if (mood <= 20) return isMobile ? 'B. niski' : 'Bardzo niski'
  if (mood <= 40) return isMobile ? 'Niski' : 'Niski'
  if (mood <= 60) return isMobile ? 'Neutralny' : 'Neutralny'
  if (mood <= 80) return isMobile ? 'Wysoki' : 'Wysoki'
  return isMobile ? 'B. wysoki' : 'Bardzo wysoki'
}

function formatDate(date: Date): string {
  const today = new Date()
  const yesterday = new Date(today)
  yesterday.setDate(yesterday.getDate() - 1)
  
  if (date.toDateString() === today.toDateString()) return 'Dzi≈õ'
  if (date.toDateString() === yesterday.toDateString()) return 'Wcz.'
  
  return date.toLocaleDateString('pl-PL', { 
    day: 'numeric', 
    month: 'short' 
  }).replace(' ', '')
}

function getConsistencyDescription(consistency: number): string {
  if (consistency >= 80) return 'Wysoka stabilno≈õƒá'
  if (consistency >= 60) return 'Umiarkowana stabilno≈õƒá'
  if (consistency >= 40) return 'Zmienne emocje'
  return 'Du≈ºa zmienno≈õƒá'
}import { useState, useEffect } from 'react';

export const useUser = () => {
  const [user, setUser] = useState(null);
  const [readArticles, setReadArticles] = useState(new Set());

  useEffect(() => {
    // W przysz≈Ço≈õci: pobieranie z localStorage/API
    const savedUser = localStorage.getItem('user');
    const savedReadArticles = localStorage.getItem('readArticles');
    
    if (savedUser) setUser(JSON.parse(savedUser));
    if (savedReadArticles) setReadArticles(new Set(JSON.parse(savedReadArticles)));
  }, []);

  const addPoints = (points) => {
    setUser(prev => {
      const updatedUser = { 
        ...prev, 
        points: (prev?.points || 0) + points 
      };
      localStorage.setItem('user', JSON.stringify(updatedUser));
      return updatedUser;
    });
  };

  const markArticleAsRead = (articleId) => {
    setReadArticles(prev => {
      const updated = new Set([...prev, articleId]);
      localStorage.setItem('readArticles', JSON.stringify([...updated]));
      return updated;
    });
  };

  const canReadArticle = (articleId) => !readArticles.has(articleId);

  const readArticle = (articleId) => {
    if (canReadArticle(articleId)) {
      markArticleAsRead(articleId);
      addPoints(10);
      return true;
    }
    return false;
  };

  return {
    user,
    readArticles,
    addPoints,
    readArticle,
    canReadArticle,
    isAdmin: user?.role === 'admin'
  };
};// src/hooks/useAdminArticles.ts
import { useState, useEffect } from 'react';
import { db } from '@/lib/firebase';
import {
  collection,
  addDoc,
  updateDoc,
  deleteDoc,
  doc,
  onSnapshot,
  query,
  Timestamp,
} from 'firebase/firestore';

export type Article = {
  id: string;
  title: string;
  excerpt: string;
  content: string;
  status: 'draft' | 'published';
  createdBy: string;
  createdAt: Date;
  updatedAt?: Date;
  views: number;
  likes: number;
  isFeatured: boolean;
  isTrending: boolean;
  category: string;
  tags: string[];
  readTime: number;
};

export const useAdminArticles = (adminUid: string) => {
  const [articles, setArticles] = useState<Article[]>([]);
  const [loading, setLoading] = useState(true);

  // Nas≈Çuchiwanie zmian w artyku≈Çach
  useEffect(() => {
    const q = query(collection(db, 'articles'));
    const unsubscribe = onSnapshot(q, (snapshot) => {
      const list: Article[] = [];
      snapshot.forEach((doc) => {
        const data = doc.data();
        list.push({
          id: doc.id,
          ...data,
          createdAt: data.createdAt?.toDate() || new Date(),
          updatedAt: data.updatedAt?.toDate(),
        } as Article);
      });
      setArticles(list);
      setLoading(false);
    }, (error) => {
      console.error('B≈ÇƒÖd ≈Çadowania artyku≈Ç√≥w:', error);
      setLoading(false);
    });

    return () => unsubscribe();
  }, []);

  // Dodawanie artyku≈Çu
  const addArticle = async (data: Omit<Article, 'id' | 'createdAt' | 'createdBy'>) => {
    try {
      const docRef = await addDoc(collection(db, 'articles'), {
        ...data,
        createdBy: adminUid,
        createdAt: Timestamp.now(),
        views: 0,
        likes: 0,
        isFeatured: false,
        isTrending: false,
      });
      return docRef.id;
    } catch (err) {
      console.error('B≈ÇƒÖd dodawania artyku≈Çu:', err);
      throw err;
    }
  };

  // Aktualizacja artyku≈Çu
  const updateArticle = async (id: string, data: Partial<Article>) => {
    try {
      await updateDoc(doc(db, 'articles', id), {
        ...data,
        updatedAt: Timestamp.now(),
      });
    } catch (err) {
      console.error('B≈ÇƒÖd aktualizacji artyku≈Çu:', err);
      throw err;
    }
  };

  // Usuwanie artyku≈Çu
  const deleteArticle = async (id: string) => {
    try {
      await deleteDoc(doc(db, 'articles', id));
    } catch (err) {
      console.error('B≈ÇƒÖd usuwania artyku≈Çu:', err);
      throw err;
    }
  };

  return {
    articles,
    loading,
    addArticle,
    updateArticle,
    deleteArticle,
  };
};// src/hooks/useArticles.ts
import { useState, useEffect } from 'react'
import { db } from '@/lib/firebase'
import { 
  collection, 
  query, 
  where, 
  orderBy, 
  getDocs,
  doc,
  getDoc,
  addDoc,
  updateDoc,
  deleteDoc,
  Timestamp
} from 'firebase/firestore'

export interface Article {
  id: string
  title: string
  excerpt: string
  content: string
  category: string
  readTime: number
  status: 'draft' | 'published'
  isFeatured: boolean
  isTrending: boolean
  views: number
  createdAt: Timestamp
  updatedAt: Timestamp
  imageUrl?: string
  authorId?: string
}

export function useArticles(userRole?: string, userId?: string) {
  const [articles, setArticles] = useState<Article[]>([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)

  useEffect(() => {
    const fetchArticles = async () => {
      try {
        let articlesQuery
        const articlesRef = collection(db, 'articles')

        if (userRole === 'admin') {
          // Admin widzi wszystkie artyku≈Çy
          articlesQuery = query(articlesRef, orderBy('createdAt', 'desc'))
        } else {
          // User widzi tylko opublikowane
          articlesQuery = query(
            articlesRef, 
            where('status', '==', 'published'),
            orderBy('createdAt', 'desc')
          )
        }

        const querySnapshot = await getDocs(articlesQuery)
        const articlesData: Article[] = []
        
        querySnapshot.forEach((doc) => {
          articlesData.push({
            id: doc.id,
            ...doc.data()
          } as Article)
        })

        setArticles(articlesData)
        setError(null)
      } catch (err) {
        console.error('B≈ÇƒÖd ≈Çadowania artyku≈Ç√≥w:', err)
        setError('Nie uda≈Ço siƒô za≈Çadowaƒá artyku≈Ç√≥w')
      } finally {
        setLoading(false)
      }
    }

    fetchArticles()
  }, [userRole])

  const addArticle = async (articleData: any, imageFile?: File) => {
    try {
      let imageUrl = ''
      
      // Tutaj mo≈ºesz dodaƒá logikƒô uploadu obrazka je≈õli potrzebna
      if (imageFile) {
        console.log('Upload obrazka:', imageFile.name)
        // imageUrl = await uploadImage(imageFile) - do implementacji
      }

      const newArticle = {
        ...articleData,
        views: 0,
        createdAt: Timestamp.now(),
        updatedAt: Timestamp.now(),
        imageUrl,
        authorId: userId
      }

      const docRef = await addDoc(collection(db, 'articles'), newArticle)
      return docRef.id
    } catch (err) {
      console.error('B≈ÇƒÖd dodawania artyku≈Çu:', err)
      throw new Error('Nie uda≈Ço siƒô dodaƒá artyku≈Çu')
    }
  }

  const updateArticle = async (
    articleId: string, 
    articleData: any, 
    imageFile?: File,
    originalImageUrl?: string
  ) => {
    try {
      let imageUrl = originalImageUrl
      
      if (imageFile) {
        console.log('Aktualizacja obrazka:', imageFile.name)
        // imageUrl = await uploadImage(imageFile) - do implementacji
      }

      const updatedData = {
        ...articleData,
        updatedAt: Timestamp.now(),
        imageUrl
      }

      await updateDoc(doc(db, 'articles', articleId), updatedData)
    } catch (err) {
      console.error('B≈ÇƒÖd aktualizacji artyku≈Çu:', err)
      throw new Error('Nie uda≈Ço siƒô zaktualizowaƒá artyku≈Çu')
    }
  }

  const deleteArticle = async (articleId: string) => {
    try {
      await deleteDoc(doc(db, 'articles', articleId))
      setArticles(prev => prev.filter(article => article.id !== articleId))
    } catch (err) {
      console.error('B≈ÇƒÖd usuwania artyku≈Çu:', err)
      throw new Error('Nie uda≈Ço siƒô usunƒÖƒá artyku≈Çu')
    }
  }

  const getArticle = async (articleId: string) => {
    try {
      const docSnap = await getDoc(doc(db, 'articles', articleId))
      if (docSnap.exists()) {
        return {
          id: docSnap.id,
          ...docSnap.data()
        } as Article
      }
      return null
    } catch (err) {
      console.error('B≈ÇƒÖd pobierania artyku≈Çu:', err)
      throw new Error('Nie uda≈Ço siƒô pobraƒá artyku≈Çu')
    }
  }

  return {
    articles,
    loading,
    error,
    addArticle,
    updateArticle,
    deleteArticle,
    getArticle
  }
}
export function getMoodLabel(mood: number): string {
  if (mood <= 20) return 'B. niski'
  if (mood <= 40) return 'Niski'
  if (mood <= 60) return 'Neutralny'
  if (mood <= 80) return 'Wysoki'
  return 'B. wysoki'
}

export function getMoodEmoji(mood: number): string {
  if (mood <= 20) return 'üòî'
  if (mood <= 40) return 'üòê'
  if (mood <= 60) return 'üôÇ'
  if (mood <= 80) return 'üòä'
  return 'ü§©'
}

export function getMoodDescription(mood: number): string {
  if (mood <= 20) return 'Potrzebujesz wsparcia i troski'
  if (mood <= 40) return 'Czas na ≈ÇagodnƒÖ opiekƒô nad sobƒÖ'
  if (mood <= 60) return 'R√≥wnowaga i spok√≥j'
  if (mood <= 80) return 'Energia i rado≈õƒá'
  return 'Pe≈Çnia szczƒô≈õcia i spe≈Çnienia'
}

export function getMoodColor(value: number): string {
  if (value <= 20) return 'rgba(75, 85, 99, 0.8)'
  if (value <= 40) return 'rgba(59, 130, 246, 0.9)'
  if (value <= 60) return 'rgba(100, 130, 220, 0.9)'
  if (value <= 80) return 'rgba(168, 85, 230, 0.9)'
  return 'rgba(156, 39, 176, 1)'
}// src/lib/friends-service.ts
import { 
  collection, 
  doc, 
  addDoc, 
  updateDoc, 
  deleteDoc, 
  query, 
  where, 
  orderBy, 
  getDocs,
  onSnapshot,
  serverTimestamp 
} from 'firebase/firestore'
import { db } from '@/lib/firebase'
import { FriendRequest, Friendship, FriendActivity } from '@/types/user'

export const friendsService = {
  // Wysy≈Çanie zaproszenia
  async sendFriendRequest(fromUserId: string, toUserEmail: string) {
    // Najpierw znajd≈∫ u≈ºytkownika po emailu
    const usersQuery = query(
      collection(db, 'users'),
      where('email', '==', toUserEmail.toLowerCase())
    )
    const userSnapshot = await getDocs(usersQuery)
    
    if (userSnapshot.empty) {
      throw new Error('Nie znaleziono u≈ºytkownika o podanym adresie email')
    }

    const toUser = userSnapshot.docs[0]
    const toUserId = toUser.id
    const toUserData = toUser.data()

    // Sprawd≈∫ czy zaproszenie ju≈º istnieje
    const existingRequestQuery = query(
      collection(db, 'friendRequests'),
      where('fromUserId', '==', fromUserId),
      where('toUserId', '==', toUserId),
      where('status', 'in', ['pending', 'accepted'])
    )
    const existingRequest = await getDocs(existingRequestQuery)

    if (!existingRequest.empty) {
      throw new Error('Zaproszenie do tej osoby ju≈º istnieje')
    }

    // Pobierz dane nadawcy
    const fromUserDoc = await getDocs(doc(db, 'users', fromUserId))
    const fromUserData = fromUserDoc.data()

    // Utw√≥rz zaproszenie
    const request: Omit<FriendRequest, 'id'> = {
      fromUserId,
      toUserId,
      fromUserName: fromUserData?.displayName || fromUserData?.email,
      toUserName: toUserData?.displayName || toUserData?.email,
      status: 'pending',
      createdAt: new Date(),
      updatedAt: new Date()
    }

    await addDoc(collection(db, 'friendRequests'), request)
  },

  // Akceptowanie zaproszenia
  async acceptFriendRequest(requestId: string) {
    const requestRef = doc(db, 'friendRequests', requestId)
    const requestDoc = await getDocs(requestRef)
    const request = requestDoc.data() as FriendRequest

    if (!request) throw new Error('Zaproszenie nie istnieje')

    // Aktualizuj status zaproszenia
    await updateDoc(requestRef, {
      status: 'accepted',
      updatedAt: serverTimestamp()
    })

    // Utw√≥rz przyja≈∫≈Ñ dla obu u≈ºytkownik√≥w
    const friendship1: Omit<Friendship, 'id'> = {
      userId: request.fromUserId,
      friendId: request.toUserId,
      friendName: request.toUserName,
      createdAt: new Date(),
      moodVisibility: 'average',
      streak: 0
    }

    const friendship2: Omit<Friendship, 'id'> = {
      userId: request.toUserId,
      friendId: request.fromUserId,
      friendName: request.fromUserName,
      createdAt: new Date(),
      moodVisibility: 'average',
      streak: 0
    }

    await Promise.all([
      addDoc(collection(db, 'friendships'), friendship1),
      addDoc(collection(db, 'friendships'), friendship2)
    ])
  },

  // Odrzucanie zaproszenia
  async rejectFriendRequest(requestId: string) {
    const requestRef = doc(db, 'friendRequests', requestId)
    await updateDoc(requestRef, {
      status: 'rejected',
      updatedAt: serverTimestamp()
    })
  },

  // Usuwanie przyjaciela
  async removeFriend(friendshipId: string) {
    const friendshipRef = doc(db, 'friendships', friendshipId)
    const friendshipDoc = await getDocs(friendshipRef)
    const friendship = friendshipDoc.data() as Friendship

    if (!friendship) return

    // Znajd≈∫ i usu≈Ñ obie strony przyja≈∫ni
    const friendshipsQuery = query(
      collection(db, 'friendships'),
      where('userId', 'in', [friendship.userId, friendship.friendId]),
      where('friendId', 'in', [friendship.userId, friendship.friendId])
    )

    const friendshipsSnapshot = await getDocs(friendshipsQuery)
    const deletePromises = friendshipsSnapshot.docs.map(doc =>
      deleteDoc(doc.ref)
    )

    await Promise.all(deletePromises)
  },

  // Pobieranie listy przyjaci√≥≈Ç
  async getFriends(userId: string): Promise<Friendship[]> {
    const friendsQuery = query(
      collection(db, 'friendships'),
      where('userId', '==', userId),
      orderBy('createdAt', 'desc')
    )

    const snapshot = await getDocs(friendsQuery)
    return snapshot.docs.map(doc => ({
      id: doc.id,
      ...doc.data()
    })) as Friendship[]
  },

  // Pobieranie zaprosze≈Ñ
  async getFriendRequests(userId: string): Promise<FriendRequest[]> {
    const requestsQuery = query(
      collection(db, 'friendRequests'),
      where('toUserId', '==', userId),
      where('status', '==', 'pending'),
      orderBy('createdAt', 'desc')
    )

    const snapshot = await getDocs(requestsQuery)
    return snapshot.docs.map(doc => ({
      id: doc.id,
      ...doc.data()
    })) as FriendRequest[]
  },

  // Subskrypcja przyjaci√≥≈Ç (real-time)
  subscribeToFriends(userId: string, callback: (friends: Friendship[]) => void) {
    const friendsQuery = query(
      collection(db, 'friendships'),
      where('userId', '==', userId),
      orderBy('createdAt', 'desc')
    )

    return onSnapshot(friendsQuery, (snapshot) => {
      const friends = snapshot.docs.map(doc => ({
        id: doc.id,
        ...doc.data()
      })) as Friendship[]
      callback(friends)
    })
  }
}// src/lib/firebase.ts
import { initializeApp } from 'firebase/app'
import { getAuth } from 'firebase/auth'
import { getFirestore } from 'firebase/firestore'
import { getStorage } from 'firebase/storage' // DODAJ

const firebaseConfig = {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID
}

const app = initializeApp(firebaseConfig)
export const auth = getAuth(app)
export const db = getFirestore(app)
export const storage = getStorage(app) // DODAJimport { 
  collection, 
  doc, 
  getDoc, 
  getDocs, 
  query, 
  where, 
  updateDoc,
  addDoc,
  deleteDoc,
  onSnapshot,
  serverTimestamp,
  setDoc,
  orderBy,
  limit
} from 'firebase/firestore'
import { ref, uploadBytes, getDownloadURL } from 'firebase/storage'
import { db, storage } from '@/lib/firebase'
import { firebaseSearchService } from './firebase-search-service'

export interface UserProfile {
  uid: string
  email: string
  displayName: string
  firstName?: string
  lastName?: string
  avatarUrl?: string
  friends: string[]
  streak: number
  level: number
  xp: number
  consistency: number
  currentMood?: number
  lastMoodUpdate?: Date
  moodEntries: any[]
  createdAt: Date
  updatedAt: Date
  bio?: string
}

export interface FriendRequest {
  id: string
  fromUserId: string
  toUserId: string
  status: 'pending' | 'accepted' | 'rejected'
  createdAt: Date
}

export interface StreakData {
  currentStreak: number
  longestStreak: number
  lastEntryDate: Date | null
}

const userService = {
  async initializeUserProfile(uid: string, email: string, displayName?: string): Promise<UserProfile> {
    const userProfile: UserProfile = {
      uid,
      email,
      displayName: displayName || email.split('@')[0],
      firstName: displayName?.split(' ')[0] || '',
      lastName: displayName?.split(' ')[1] || '',
      friends: [],
      streak: 0,
      level: 1,
      xp: 0,
      consistency: 0,
      moodEntries: [],
      createdAt: new Date(),
      updatedAt: new Date()
    }

    await setDoc(doc(db, 'users', uid), userProfile)
    console.log('‚úÖ Nowy profil utworzony:', userProfile.displayName)
    
    return userProfile
  },

  async getUserProfile(uid: string): Promise<UserProfile | null> {
    try {
      const userDoc = await getDoc(doc(db, 'users', uid))
      
      if (!userDoc.exists()) {
        return null
      }
      
      const data = userDoc.data()
      
      return { 
        uid, 
        ...data,
        createdAt: data.createdAt?.toDate() || new Date(),
        updatedAt: data.updatedAt?.toDate() || new Date(),
        lastMoodUpdate: data.lastMoodUpdate?.toDate()
      } as UserProfile
    } catch (error) {
      console.error('B≈ÇƒÖd pobierania profilu:', error)
      return null
    }
  },

  // ‚úÖ POPRAWIONE - u≈ºywa firebaseSearchService
  async findUsersByName(searchTerm: string, currentUserId: string): Promise<UserProfile[]> {
    try {
      if (!searchTerm.trim() || searchTerm.length < 2) {
        return []
      }

      console.log(`üîç Szukam w Firebase: "${searchTerm}"`)
      
      const searchResults = await firebaseSearchService.searchUsers(searchTerm, currentUserId)
      
      const userProfiles = await Promise.all(
        searchResults.map(async (user) => {
          const fullProfile = await this.getUserProfile(user.uid)
          return fullProfile || {
            uid: user.uid,
            email: user.email,
            displayName: user.displayName,
            firstName: user.firstName,
            lastName: user.lastName,
            avatarUrl: user.avatarUrl,
            friends: [],
            streak: user.streak,
            level: user.level,
            xp: 0,
            consistency: 0,
            moodEntries: [],
            createdAt: new Date(),
            updatedAt: new Date()
          }
        })
      )
      
      return userProfiles.filter(Boolean) as UserProfile[]
    } catch (error) {
      console.error('B≈ÇƒÖd wyszukiwania u≈ºytkownik√≥w:', error)
      return []
    }
  },

  async findUserById(uid: string): Promise<UserProfile | null> {
    try {
      return await this.getUserProfile(uid)
    } catch (error) {
      console.error('B≈ÇƒÖd wyszukiwania u≈ºytkownika po ID:', error)
      return null
    }
  },

  async updateUserProfile(uid: string, updates: Partial<UserProfile>): Promise<void> {
    try {
      const userRef = doc(db, 'users', uid)
      await updateDoc(userRef, {
        ...updates,
        updatedAt: serverTimestamp()
      })
      console.log('‚úÖ Profil zaktualizowany:', updates)
    } catch (error) {
      console.error('B≈ÇƒÖd aktualizacji profilu:', error)
      throw error
    }
  },

  async uploadAvatar(uid: string, file: File): Promise<string> {
    const storageRef = ref(storage, `avatars/${uid}/${file.name}`)
    const snapshot = await uploadBytes(storageRef, file)
    const downloadURL = await getDownloadURL(snapshot.ref)
    
    await this.updateUserProfile(uid, { avatarUrl: downloadURL })
    
    return downloadURL
  },

  // ‚úÖ DODANA FUNKCJA calculateStreak
  async calculateStreak(userId: string): Promise<StreakData> {
    try {
      const user = await this.getUserProfile(userId)
      if (!user) {
        return {
          currentStreak: 0,
          longestStreak: 0,
          lastEntryDate: null
        }
      }

      const moodEntries = user.moodEntries || []
      
      if (moodEntries.length === 0) {
        return {
          currentStreak: 0,
          longestStreak: 0,
          lastEntryDate: null
        }
      }

      // Sortuj wpisy od najnowszego do najstarszego
      const sortedEntries = [...moodEntries].sort((a, b) => 
        new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()
      )

      let currentStreak = 0
      let longestStreak = 0
      let tempStreak = 0
      
      const today = new Date()
      today.setHours(0, 0, 0, 0)
      
      let lastProcessedDate: Date | null = null

      for (let i = 0; i < sortedEntries.length; i++) {
        const entryDate = new Date(sortedEntries[i].timestamp)
        entryDate.setHours(0, 0, 0, 0)
        
        if (i === 0) {
          // Sprawd≈∫ czy najnowszy wpis jest z dzisiaj lub wczoraj
          const diffTime = today.getTime() - entryDate.getTime()
          const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24))
          
          if (diffDays <= 1) {
            currentStreak = 1
            tempStreak = 1
            lastProcessedDate = entryDate
          }
        } else {
          const prevEntryDate = new Date(sortedEntries[i - 1].timestamp)
          prevEntryDate.setHours(0, 0, 0, 0)
          
          const diffTime = prevEntryDate.getTime() - entryDate.getTime()
          const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24))
          
          if (diffDays === 1) {
            // Kolejny dzie≈Ñ streak
            tempStreak++
            if (i === 1) {
              currentStreak = tempStreak
            }
          } else if (diffDays > 1) {
            // Przerwa w streak - zresetuj temp streak
            tempStreak = 0
          }
        }
        
        // Aktualizuj najd≈Çu≈ºszy streak
        if (tempStreak > longestStreak) {
          longestStreak = tempStreak
        }
      }

      return {
        currentStreak: Math.max(currentStreak, tempStreak),
        longestStreak: Math.max(longestStreak, currentStreak, tempStreak),
        lastEntryDate: sortedEntries.length > 0 ? new Date(sortedEntries[0].timestamp) : null
      }
    } catch (error) {
      console.error('B≈ÇƒÖd obliczania streak:', error)
      return {
        currentStreak: 0,
        longestStreak: 0,
        lastEntryDate: null
      }
    }
  },

  // ‚úÖ DODANA FUNKCJA calculateAdvancedStreak
  async calculateAdvancedStreak(userId: string): Promise<StreakData> {
    return this.calculateStreak(userId) // U≈ºywamy tej samej implementacji
  },

  async getUserStats(userId: string): Promise<{
    streak: number;
    moodEntries: number;
    consistency: number;
    friends: number;
  }> {
    try {
      const user = await this.getUserProfile(userId)
      if (!user) {
        return {
          streak: 0,
          moodEntries: 0,
          consistency: 0,
          friends: 0
        }
      }

      const moodEntries = user.moodEntries || []
      const totalEntries = moodEntries.length
      
      let streak = 0
      const today = new Date()
      today.setHours(0, 0, 0, 0)
      
      if (moodEntries.length > 0) {
        const sortedEntries = [...moodEntries].sort((a, b) => 
          new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()
        )
        
        const latestEntry = sortedEntries[0]
        const latestEntryDate = new Date(latestEntry.timestamp)
        latestEntryDate.setHours(0, 0, 0, 0)
        
        const isToday = latestEntryDate.getTime() === today.getTime()
        
        if (isToday) {
          streak = 1
          for (let i = 1; i < sortedEntries.length; i++) {
            const currentEntryDate = new Date(sortedEntries[i].timestamp)
            currentEntryDate.setHours(0, 0, 0, 0)
            
            const expectedDate = new Date(today)
            expectedDate.setDate(expectedDate.getDate() - i)
            
            if (currentEntryDate.getTime() === expectedDate.getTime()) {
              streak++
            } else {
              break
            }
          }
        }
      }

      const last30Days = 30
      let entriesLast30Days = 0
      const uniqueDays = new Set()
      
      moodEntries.forEach(entry => {
        const entryDate = new Date(entry.timestamp)
        const diffTime = today.getTime() - entryDate.getTime()
        const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24))
        
        if (diffDays < last30Days) {
          const dateKey = entryDate.toDateString()
          if (!uniqueDays.has(dateKey)) {
            uniqueDays.add(dateKey)
            entriesLast30Days++
          }
        }
      })
      
      const consistency = last30Days > 0 
        ? Math.round((entriesLast30Days / last30Days) * 100)
        : 0

      const friendsCount = user?.friends?.length || 0

      return {
        streak,
        moodEntries: totalEntries,
        consistency,
        friends: friendsCount
      }
    } catch (error) {
      console.error('B≈ÇƒÖd pobierania statystyk:', error)
      return {
        streak: 0,
        moodEntries: 0,
        consistency: 0,
        friends: 0
      }
    }
  },

  // ‚úÖ DODANE FUNKCJE DO ZARZƒÑDZANIA NASTROJAMI
  async saveMood(userId: string, mood: number): Promise<void> {
    try {
      const user = await this.getUserProfile(userId)
      if (!user) {
        throw new Error('Nie znaleziono u≈ºytkownika')
      }

      const now = new Date()
      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate())
      
      const existingEntryIndex = user.moodEntries.findIndex((entry: any) => {
        const entryDate = new Date(entry.timestamp)
        return entryDate.getTime() === today.getTime()
      })

      const newEntry = {
        mood,
        timestamp: today,
        date: today.toISOString().split('T')[0]
      }

      let updatedEntries
      if (existingEntryIndex !== -1) {
        // Aktualizuj istniejƒÖcy wpis
        updatedEntries = [...user.moodEntries]
        updatedEntries[existingEntryIndex] = newEntry
      } else {
        // Dodaj nowy wpis
        updatedEntries = [newEntry, ...user.moodEntries]
      }

      await this.updateUserProfile(userId, {
        currentMood: mood,
        lastMoodUpdate: now,
        moodEntries: updatedEntries
      })

      console.log(`‚úÖ Nastr√≥j zapisany: ${mood}% dla u≈ºytkownika ${user.displayName}`)
    } catch (error) {
      console.error('B≈ÇƒÖd zapisywania nastroju:', error)
      throw error
    }
  },

  async saveMoodWithNote(userId: string, mood: number, note?: string): Promise<void> {
    try {
      const user = await this.getUserProfile(userId)
      if (!user) {
        throw new Error('Nie znaleziono u≈ºytkownika')
      }

      const now = new Date()
      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate())
      
      const existingEntryIndex = user.moodEntries.findIndex((entry: any) => {
        const entryDate = new Date(entry.timestamp)
        return entryDate.getTime() === today.getTime()
      })

      const newEntry = {
        mood,
        note: note || '',
        timestamp: today,
        date: today.toISOString().split('T')[0]
      }

      let updatedEntries
      if (existingEntryIndex !== -1) {
        // Aktualizuj istniejƒÖcy wpis
        updatedEntries = [...user.moodEntries]
        updatedEntries[existingEntryIndex] = newEntry
      } else {
        // Dodaj nowy wpis
        updatedEntries = [newEntry, ...user.moodEntries]
      }

      await this.updateUserProfile(userId, {
        currentMood: mood,
        lastMoodUpdate: now,
        moodEntries: updatedEntries
      })

      console.log(`‚úÖ Nastr√≥j z notatkƒÖ zapisany: ${mood}% dla u≈ºytkownika ${user.displayName}`)
    } catch (error) {
      console.error('B≈ÇƒÖd zapisywania nastroju z notatkƒÖ:', error)
      throw error
    }
  },

  async getMoodHistory(userId: string, days: number = 30): Promise<any[]> {
    try {
      const user = await this.getUserProfile(userId)
      if (!user) {
        return []
      }

      const cutoffDate = new Date()
      cutoffDate.setDate(cutoffDate.getDate() - days)

      return user.moodEntries
        .filter((entry: any) => new Date(entry.timestamp) >= cutoffDate)
        .sort((a: any, b: any) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())
    } catch (error) {
      console.error('B≈ÇƒÖd pobierania historii nastroj√≥w:', error)
      return []
    }
  },

  async sendFriendRequest(fromUserId: string, toUserId: string): Promise<void> {
    if (fromUserId === toUserId) {
      throw new Error('Nie mo≈ºesz dodaƒá siebie jako znajomego')
    }

    const toUser = await this.findUserById(toUserId)
    if (!toUser) {
      throw new Error('Nie znaleziono u≈ºytkownika')
    }

    const existingRequest = await this.checkExistingRequest(fromUserId, toUserId)
    if (existingRequest) {
      throw new Error('Zaproszenie do tego u≈ºytkownika ju≈º istnieje')
    }

    const fromUser = await this.findUserById(fromUserId)
    if (!fromUser) {
      throw new Error('Nie znaleziono Twojego profilu')
    }

    if (fromUser.friends?.includes(toUserId)) {
      throw new Error('Ju≈º jeste≈õcie znajomymi')
    }

    const request: Omit<FriendRequest, 'id'> = {
      fromUserId,
      toUserId,
      status: 'pending',
      createdAt: new Date()
    }

    await addDoc(collection(db, 'friendRequests'), request)
    console.log(`‚úÖ Zaproszenie wys≈Çane od ${fromUserId} do ${toUserId}`)
  },

  async checkExistingRequest(fromUserId: string, toUserId: string): Promise<boolean> {
    const requestsQuery = query(
      collection(db, 'friendRequests'),
      where('fromUserId', '==', fromUserId),
      where('toUserId', '==', toUserId),
      where('status', '==', 'pending')
    )
    const snapshot = await getDocs(requestsQuery)
    return !snapshot.empty
  },

  async acceptFriendRequest(requestId: string, currentUserId: string): Promise<void> {
    const requestRef = doc(db, 'friendRequests', requestId)
    const requestDoc = await getDoc(requestRef)
    
    if (!requestDoc.exists()) {
      throw new Error('Zaproszenie nie istnieje')
    }

    const request = requestDoc.data() as FriendRequest

    const fromUser = await this.findUserById(request.fromUserId)
    const toUser = await this.findUserById(request.toUserId)

    if (!fromUser || !toUser) {
      throw new Error('Nie znaleziono u≈ºytkownik√≥w')
    }

    await Promise.all([
      this.updateUserProfile(fromUser.uid, {
        friends: [...(fromUser.friends || []), request.toUserId]
      }),
      this.updateUserProfile(toUser.uid, {
        friends: [...(toUser.friends || []), request.fromUserId]
      }),
      updateDoc(requestRef, { status: 'accepted' })
    ])

    console.log(`‚úÖ Zaproszenie zaakceptowane: ${fromUser.displayName} i ${toUser.displayName} sƒÖ teraz znajomymi`)
  },

  async rejectFriendRequest(requestId: string): Promise<void> {
    const requestRef = doc(db, 'friendRequests', requestId)
    await updateDoc(requestRef, { status: 'rejected' })
    console.log('üì≠ Zaproszenie odrzucone')
  },

  async removeFriend(userId: string, friendId: string): Promise<void> {
    const user = await this.findUserById(userId)
    const friend = await this.findUserById(friendId)

    if (!user || !friend) {
      throw new Error('Nie znaleziono u≈ºytkownik√≥w')
    }

    await Promise.all([
      this.updateUserProfile(user.uid, {
        friends: user.friends?.filter((id: string) => id !== friendId) || []
      }),
      this.updateUserProfile(friend.uid, {
        friends: friend.friends?.filter((id: string) => id !== userId) || []
      })
    ])

    console.log(`üëã ${user.displayName} usunƒÖ≈Ç ${friend.displayName} ze znajomych`)
  },

  async getFriends(userId: string): Promise<UserProfile[]> {
    const user = await this.findUserById(userId)
    if (!user) return []

    const friendIds = user.friends || []
    if (friendIds.length === 0) return []

    const friendsPromises = friendIds.map(id => this.findUserById(id))
    const friends = await Promise.all(friendsPromises)
    
    return friends.filter(Boolean) as UserProfile[]
  },

  async getFriendRequests(userId: string): Promise<(FriendRequest & { fromUserProfile?: UserProfile })[]> {
    const requestsQuery = query(
      collection(db, 'friendRequests'),
      where('toUserId', '==', userId),
      where('status', '==', 'pending')
    )
    const snapshot = await getDocs(requestsQuery)
    
    const requests = await Promise.all(
      snapshot.docs.map(async (doc) => {
        const request = { id: doc.id, ...doc.data() } as FriendRequest
        const fromUserProfile = await this.findUserById(request.fromUserId)
        return { ...request, fromUserProfile }
      })
    )
    
    console.log(`üì® Znaleziono ${requests.length} zaprosze≈Ñ dla u≈ºytkownika ${userId}`)
    return requests
  },

  subscribeToFriends(userId: string, callback: (friends: UserProfile[]) => void) {
    const userRef = doc(db, 'users', userId)
    
    return onSnapshot(userRef, async (doc) => {
      if (!doc.exists()) {
        callback([])
        return
      }
      
      const user = doc.data()
      const friendIds = user.friends || []
      
      if (friendIds.length === 0) {
        callback([])
        return
      }
      
      const friends = await Promise.all(friendIds.map(id => this.findUserById(id)))
      callback(friends.filter(Boolean) as UserProfile[])
    })
  },

  // ‚úÖ DODANE FUNKCJE DO ZARZƒÑDZANIA POZIOMEM I XP
  async addXP(userId: string, xpToAdd: number): Promise<void> {
    try {
      const user = await this.getUserProfile(userId)
      if (!user) return

      const newXP = user.xp + xpToAdd
      const newLevel = Math.floor(newXP / 100) + 1 // 100 XP na poziom

      await this.updateUserProfile(userId, {
        xp: newXP,
        level: newLevel
      })

      console.log(`‚úÖ Dodano ${xpToAdd} XP u≈ºytkownikowi ${user.displayName}. Teraz ma ${newXP} XP (poziom ${newLevel})`)
    } catch (error) {
      console.error('B≈ÇƒÖd dodawania XP:', error)
    }
  },

  async updateConsistency(userId: string): Promise<void> {
    try {
      const stats = await this.getUserStats(userId)
      await this.updateUserProfile(userId, {
        consistency: stats.consistency
      })
    } catch (error) {
      console.error('B≈ÇƒÖd aktualizacji konsystencji:', error)
    }
  },

  // ‚úÖ DODANE FUNKCJE DO ZARZƒÑDZANIA PROFILAMI
  async updateUserBio(userId: string, bio: string): Promise<void> {
    await this.updateUserProfile(userId, { bio })
  },

  async updateUserName(userId: string, displayName: string, firstName?: string, lastName?: string): Promise<void> {
    await this.updateUserProfile(userId, {
      displayName,
      firstName,
      lastName
    })
  },

  // ‚úÖ DODANE FUNKCJE DO OBS≈ÅUGI NOTYFIKACJI
  async getUserNotifications(userId: string): Promise<any[]> {
    try {
      const notificationsQuery = query(
        collection(db, 'notifications'),
        where('userId', '==', userId),
        orderBy('createdAt', 'desc'),
        limit(50)
      )
      const snapshot = await getDocs(notificationsQuery)
      return snapshot.docs.map(doc => ({
        id: doc.id,
        ...doc.data(),
        createdAt: doc.data().createdAt?.toDate() || new Date()
      }))
    } catch (error) {
      console.error('B≈ÇƒÖd pobierania notyfikacji:', error)
      return []
    }
  },

  async markNotificationAsRead(notificationId: string): Promise<void> {
    try {
      const notificationRef = doc(db, 'notifications', notificationId)
      await updateDoc(notificationRef, {
        read: true,
        readAt: serverTimestamp()
      })
    } catch (error) {
      console.error('B≈ÇƒÖd oznaczania notyfikacji jako przeczytanej:', error)
    }
  }
}

export default userServiceimport { type ClassValue, clsx } from 'clsx'
import { twMerge } from 'tailwind-merge'

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}import { 
  collection, 
  query, 
  where, 
  getDocs,
  limit
} from 'firebase/firestore'
import { db } from '@/lib/firebase'

export interface SearchableUser {
  uid: string
  email: string
  displayName: string
  firstName: string
  lastName: string
  avatarUrl?: string
  level: number
  streak: number
  currentMood?: number
}

export const firebaseSearchService = {
  async searchUsers(searchTerm: string, currentUserId: string): Promise<SearchableUser[]> {
    try {
      if (!searchTerm.trim() || searchTerm.length < 2) {
        return []
      }

      console.log(`üîç Szukam: "${searchTerm}"`)

      const usersRef = collection(db, 'users')
      
      // 3 zapytania do Firebase
      const displayNameQuery = query(
        usersRef,
        where('displayName', '>=', searchTerm),
        where('displayName', '<=', searchTerm + '\uf8ff'),
        limit(10)
      )

      const firstNameQuery = query(
        usersRef,
        where('firstName', '>=', searchTerm),
        where('firstName', '<=', searchTerm + '\uf8ff'),
        limit(10)
      )

      const emailQuery = query(
        usersRef,
        where('email', '>=', searchTerm),
        where('email', '<=', searchTerm + '\uf8ff'), 
        limit(10)
      )

      const [displayNameSnapshot, firstNameSnapshot, emailSnapshot] = await Promise.all([
        getDocs(displayNameQuery),
        getDocs(firstNameQuery),
        getDocs(emailQuery)
      ])

      // Po≈ÇƒÖcz wyniki i usu≈Ñ duplikaty
      const allResults = new Map()

      const processSnapshot = (snapshot: any) => {
        snapshot.forEach((doc: any) => {
          const userData = doc.data()
          if (userData.uid !== currentUserId) {
            allResults.set(doc.id, {
              uid: doc.id,
              email: userData.email || '',
              displayName: userData.displayName || '',
              firstName: userData.firstName || '',
              lastName: userData.lastName || '',
              avatarUrl: userData.avatarUrl,
              level: userData.level || 1,
              streak: userData.streak || 0,
              currentMood: userData.currentMood
            })
          }
        })
      }

      processSnapshot(displayNameSnapshot)
      processSnapshot(firstNameSnapshot)  
      processSnapshot(emailSnapshot)

      const results = Array.from(allResults.values())
      
      console.log(`‚úÖ Znaleziono ${results.length} u≈ºytkownik√≥w`)
      return results.slice(0, 10)

    } catch (error) {
      console.error('‚ùå B≈ÇƒÖd wyszukiwania Firebase:', error)
      return []
    }
  },

  async getAllUsers(currentUserId: string): Promise<SearchableUser[]> {
    try {
      const usersRef = collection(db, 'users')
      const snapshot = await getDocs(usersRef)
      
      const users: SearchableUser[] = []
      snapshot.forEach((doc) => {
        const userData = doc.data()
        if (userData.uid !== currentUserId) {
          users.push({
            uid: doc.id,
            email: userData.email || '',
            displayName: userData.displayName || '',
            firstName: userData.firstName || '',
            lastName: userData.lastName || '',
            avatarUrl: userData.avatarUrl,
            level: userData.level || 1,
            streak: userData.streak || 0,
            currentMood: userData.currentMood,
          })
        }
      })
      
      return users
    } catch (error) {
      console.error('B≈ÇƒÖd pobierania u≈ºytkownik√≥w:', error)
      return []
    }
  }
}// src/lib/security.ts
class SecurityConfig {
  private static validateEnvironment() {
    const requiredEnvVars = [
      'NEXT_PUBLIC_FIREBASE_API_KEY',
      'NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN', 
      'NEXT_PUBLIC_FIREBASE_PROJECT_ID',
      'NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET',
      'NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID',
      'NEXT_PUBLIC_FIREBASE_APP_ID'
    ];

    const missing = requiredEnvVars.filter(varName => !process.env[varName]);
    
    if (missing.length > 0) {
      throw new Error(`Missing required environment variables: ${missing.join(', ')}`);
    }

    console.log('‚úÖ Environment variables validated successfully');
  }

  static ensureSecureConfig() {
    if (typeof window !== 'undefined') {
      this.validateEnvironment();
    }
  }
}

// Initialize security on app start
SecurityConfig.ensureSecureConfig();

export { SecurityConfig };// src/lib/streak-service.ts
export class StreakService {
  static calculateAdvancedStreak(entries: MoodEntry[]): {
    currentStreak: number
    longestStreak: number
    perfectMonth: boolean
  } {
    if (entries.length === 0) {
      return { currentStreak: 0, longestStreak: 0, perfectMonth: false }
    }

    // Sort entries by date
    const sorted = [...entries].sort((a, b) => 
      b.timestamp.getTime() - a.timestamp.getTime()
    )

    let currentStreak = 0
    let longestStreak = 0
    let tempStreak = 0
    let currentDate = new Date()
    currentDate.setHours(0, 0, 0, 0)

    // Check current streak
    for (let i = 0; i < sorted.length; i++) {
      const entryDate = new Date(sorted[i].timestamp)
      entryDate.setHours(0, 0, 0, 0)

      if (entryDate.getTime() === currentDate.getTime()) {
        currentStreak++
        tempStreak++
        currentDate.setDate(currentDate.getDate() - 1)
      } else {
        break
      }
    }

    // Calculate longest streak
    tempStreak = 1
    for (let i = 1; i < sorted.length; i++) {
      const current = new Date(sorted[i].timestamp)
      const previous = new Date(sorted[i-1].timestamp)
      
      current.setHours(0, 0, 0, 0)
      previous.setHours(0, 0, 0, 0)

      const diffDays = (current.getTime() - previous.getTime()) / (1000 * 60 * 60 * 24)
      
      if (diffDays === 1) {
        tempStreak++
      } else {
        longestStreak = Math.max(longestStreak, tempStreak)
        tempStreak = 1
      }
    }
    longestStreak = Math.max(longestStreak, tempStreak)

    // Check perfect month (entries for every day of current month)
    const today = new Date()
    const currentMonth = today.getMonth()
    const currentYear = today.getFullYear()
    
    const monthEntries = entries.filter(entry => {
      const entryDate = new Date(entry.timestamp)
      return entryDate.getMonth() === currentMonth && 
             entryDate.getFullYear() === currentYear
    })

    const uniqueDays = new Set(
      monthEntries.map(entry => 
        new Date(entry.timestamp).toDateString()
      )
    )

    const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate()
    const perfectMonth = uniqueDays.size >= daysInMonth

    return {
      currentStreak,
      longestStreak,
      perfectMonth
    }
  }
}// lib/firebase-admin.ts
import { initializeApp, getApps, cert } from 'firebase-admin/app'
import { getAuth } from 'firebase-admin/auth'

const serviceAccount = {
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
  clientEmail: process.env.FIREBASE_ADMIN_CLIENT_EMAIL,
  privateKey: process.env.FIREBASE_ADMIN_PRIVATE_KEY?.replace(/\\n/g, '\n')
}

if (!getApps().length) {
  initializeApp({
    credential: cert(serviceAccount)
  })
}

export const auth = getAuth()// Prosty system zapisywania odpowiedzi AI na ten sam dzie≈Ñ
const AI_STORAGE_KEY = 'ai_insights_data'

interface MoodData {
  mood: number
  streak: number
  trend: number
  consistency: number
  averageMood: number
  level: number
  entriesCount: number
}

interface AIStorageData {
  date: string
  moodData: MoodData
  aiResponse: any
  timestamp: string
}

export const saveAIResponse = (moodData: MoodData, aiResponse: any): void => {
  if (typeof window === 'undefined') return
  
  const today = new Date().toDateString()
  const data: AIStorageData = {
    date: today,
    moodData: {
      mood: moodData.mood || 50,
      streak: moodData.streak || 0,
      trend: moodData.trend || 0,
      consistency: moodData.consistency || 50,
      averageMood: moodData.averageMood || 50,
      level: moodData.level || 1,
      entriesCount: moodData.entriesCount || 0
    },
    aiResponse: aiResponse,
    timestamp: new Date().toISOString()
  }
  
  try {
    localStorage.setItem(AI_STORAGE_KEY, JSON.stringify(data))
  } catch (error) {
    console.error('Error saving AI response to localStorage:', error)
  }
}

export const getSavedAIResponse = (currentMoodData: MoodData): any => {
  if (typeof window === 'undefined') return null
  
  try {
    const saved = localStorage.getItem(AI_STORAGE_KEY)
    if (!saved) return null
    
    const data: AIStorageData = JSON.parse(saved)
    const today = new Date().toDateString()
    
    // Sprawd≈∫ czy to z dzisiaj i czy kluczowe dane siƒô zgadzajƒÖ
    if (data.date === today && 
        data.moodData.mood === (currentMoodData.mood || 50) &&
        data.moodData.streak === (currentMoodData.streak || 0) &&
        data.moodData.level === (currentMoodData.level || 1)) {
      return data.aiResponse
    }
    
    return null
  } catch (error) {
    console.error('Error reading saved AI response:', error)
    return null
  }
}

export const clearAIResponse = (): void => {
  if (typeof window === 'undefined') return
  try {
    localStorage.removeItem(AI_STORAGE_KEY)
  } catch (error) {
    console.error('Error clearing AI response:', error)
  }
}

// Dodatkowa funkcja do sprawdzania czy mamy zapisanƒÖ odpowied≈∫
export const hasValidAIResponse = (currentMoodData: MoodData): boolean => {
  return getSavedAIResponse(currentMoodData) !== null
}// src/lib/auth-service.ts - POPRAWIONA WERSJA
import { 
  createUserWithEmailAndPassword,
  signInWithEmailAndPassword,
  signOut,
  sendPasswordResetEmail,
  updateProfile,
  UserCredential
} from 'firebase/auth'
import { doc, setDoc } from 'firebase/firestore'
import { auth, db } from './firebase'
import userService from './user-service' // üëà DODAJEMY IMPORT

export interface UserData {
  uid: string
  email: string
  firstName: string
  lastName: string
  currentMask: string
  level: number
  xp: number
  streak: number
  unlockedMasks: string[]
  createdAt: Date
  role: 'user' | 'admin'
}

export const authService = {
  async register(
    email: string, 
    password: string, 
    userData: { firstName: string; lastName: string }
  ): Promise<UserCredential> {
    try {
      const userCredential = await createUserWithEmailAndPassword(auth, email, password)
      
      await updateProfile(userCredential.user, {
        displayName: `${userData.firstName} ${userData.lastName}`
      })

      // üëá DODAJEMY AUTOMATYCZNE WYKRYWANIE ADMINA
      const isAdmin = email.endsWith('@admin.com') || email.endsWith('@spokojwglowie.pl')
      const userRole: 'user' | 'admin' = isAdmin ? 'admin' : 'user'

      // Zapisz dane u≈ºytkownika w Firestore
      const userDoc: UserData = {
        uid: userCredential.user.uid,
        email: email,
        firstName: userData.firstName,
        lastName: userData.lastName,
        currentMask: 'calm',
        level: 1,
        xp: 0,
        streak: 0,
        unlockedMasks: ['calm'],
        createdAt: new Date(), // üëà DODAJEMY PRZECINEK!
        role: userRole
      }

      await setDoc(doc(db, 'users', userCredential.user.uid), userDoc)
      
      console.log(`‚úÖ U≈ºytkownik zarejestrowany z rolƒÖ: ${userRole}`)
      return userCredential
      
    } catch (error) {
      console.error('B≈ÇƒÖd rejestracji:', error)
      throw error
    }
  },

  async login(email: string, password: string): Promise<UserCredential> {
    try {
      return await signInWithEmailAndPassword(auth, email, password)
    } catch (error) {
      console.error('B≈ÇƒÖd logowania:', error)
      throw error
    }
  },

  async logout(): Promise<void> {
    try {
      await signOut(auth)
    } catch (error) {
      console.error('B≈ÇƒÖd wylogowania:', error)
      throw error
    }
  },

  // üëá DODAJEMY NOWE FUNKCJE
  async isUserAdmin(uid: string): Promise<boolean> {
    try {
      const userData = await userService.getUserData(uid)
      return userData?.role === 'admin'
    } catch (error) {
      console.error('B≈ÇƒÖd sprawdzania roli:', error)
      return false
    }
  },

  async getUserRole(uid: string): Promise<'user' | 'admin' | null> {
    try {
      const userData = await userService.getUserData(uid)
      return userData?.role || null
    } catch (error) {
      console.error('B≈ÇƒÖd pobierania roli:', error)
      return null
    }
  }
}

export interface UserData {
  uid: string
  email: string
  firstName: string
  lastName: string
  currentMask: string
  level: number
  xp: number
  streak: number
  unlockedMasks: string[]
  createdAt: Date
  role: 'user' | 'admin'
  // üëá DODAJEMY NOWE POLA
  moodHistory?: MoodEntry[]
  currentMood?: number
  lastMoodUpdate?: Date
}

export interface MoodEntry {
  date: string // ISO date string "2024-01-15"
  mood: number // 0-100
  timestamp: any // Firestore timestamp
  note?: string // Opcjonalna notatka
}


export default authServiceimport { 
  collection, 
  doc, 
  getDoc, 
  getDocs, 
  query, 
  where, 
  orderBy, 
  limit,
  addDoc,
  updateDoc,
  onSnapshot,
  serverTimestamp,
  Timestamp
} from 'firebase/firestore'
import { db } from '@/lib/firebase'

export interface ChatMessage {
  id: string
  conversationId: string
  senderId: string
  receiverId: string
  content: string
  timestamp: Date
  read: boolean
  type: 'text' | 'image' | 'system'
}

export interface Conversation {
  id: string
  participants: string[]
  lastMessage?: string
  lastMessageTime: Date
  unreadCount: number
  participantProfiles?: any[] // Dane u≈ºytkownik√≥w w konwersacji
}

export const chatService = {
  // Utw√≥rz nowƒÖ konwersacjƒô
  async createConversation(user1Id: string, user2Id: string): Promise<string> {
    const participants = [user1Id, user2Id].sort()
    const conversationId = participants.join('_')
    
    const conversationRef = doc(db, 'conversations', conversationId)
    const conversationSnap = await getDoc(conversationRef)
    
    if (!conversationSnap.exists()) {
      await updateDoc(conversationRef, {
        participants,
        lastMessageTime: serverTimestamp(),
        createdAt: serverTimestamp()
      })
    }
    
    return conversationId
  },

  // Wy≈õlij wiadomo≈õƒá
  async sendMessage(conversationId: string, senderId: string, receiverId: string, content: string): Promise<void> {
    const messageData = {
      conversationId,
      senderId,
      receiverId,
      content: content.trim(),
      timestamp: serverTimestamp(),
      read: false,
      type: 'text'
    }

    // Dodaj wiadomo≈õƒá
    await addDoc(collection(db, 'messages'), messageData)
    
    // Aktualizuj konwersacjƒô
    const conversationRef = doc(db, 'conversations', conversationId)
    await updateDoc(conversationRef, {
      lastMessage: content,
      lastMessageTime: serverTimestamp()
    })
  },

  // Pobierz konwersacje u≈ºytkownika
  async getConversations(userId: string): Promise<Conversation[]> {
    const conversationsQuery = query(
      collection(db, 'conversations'),
      where('participants', 'array-contains', userId),
      orderBy('lastMessageTime', 'desc')
    )
    
    const snapshot = await getDocs(conversationsQuery)
    const conversations: Conversation[] = []

    for (const doc of snapshot.docs) {
      const data = doc.data()
      const conversation: Conversation = {
        id: doc.id,
        participants: data.participants,
        lastMessage: data.lastMessage,
        lastMessageTime: data.lastMessageTime?.toDate() || new Date(),
        unreadCount: 0
      }

      // Pobierz nieprzeczytane wiadomo≈õci
      const unreadQuery = query(
        collection(db, 'messages'),
        where('conversationId', '==', doc.id),
        where('receiverId', '==', userId),
        where('read', '==', false)
      )
      const unreadSnapshot = await getDocs(unreadQuery)
      conversation.unreadCount = unreadSnapshot.size

      conversations.push(conversation)
    }

    return conversations
  },

  // Pobierz wiadomo≈õci z konwersacji
  async getMessages(conversationId: string, limitCount: number = 50): Promise<ChatMessage[]> {
    const messagesQuery = query(
      collection(db, 'messages'),
      where('conversationId', '==', conversationId),
      orderBy('timestamp', 'desc'),
      limit(limitCount)
    )
    
    const snapshot = await getDocs(messagesQuery)
    const messages: ChatMessage[] = snapshot.docs.map(doc => ({
      id: doc.id,
      ...doc.data(),
      timestamp: doc.data().timestamp?.toDate() || new Date()
    } as ChatMessage)).reverse()

    return messages
  },

  // Oznacz wiadomo≈õci jako przeczytane
  async markMessagesAsRead(conversationId: string, userId: string): Promise<void> {
    const unreadQuery = query(
      collection(db, 'messages'),
      where('conversationId', '==', conversationId),
      where('receiverId', '==', userId),
      where('read', '==', false)
    )
    
    const snapshot = await getDocs(unreadQuery)
    const updatePromises = snapshot.docs.map(doc => 
      updateDoc(doc.ref, { read: true })
    )
    
    await Promise.all(updatePromises)
  },

  // Real-time subscription do konwersacji
  subscribeToConversations(userId: string, callback: (conversations: Conversation[]) => void) {
    const conversationsQuery = query(
      collection(db, 'conversations'),
      where('participants', 'array-contains', userId),
      orderBy('lastMessageTime', 'desc')
    )
    
    return onSnapshot(conversationsQuery, async (snapshot) => {
      const conversations: Conversation[] = await Promise.all(
        snapshot.docs.map(async (doc) => {
          const data = doc.data()
          
          const unreadQuery = query(
            collection(db, 'messages'),
            where('conversationId', '==', doc.id),
            where('receiverId', '==', userId),
            where('read', '==', false)
          )
          const unreadSnapshot = await getDocs(unreadQuery)
          
          return {
            id: doc.id,
            participants: data.participants,
            lastMessage: data.lastMessage,
            lastMessageTime: data.lastMessageTime?.toDate() || new Date(),
            unreadCount: unreadSnapshot.size
          }
        })
      )
      
      callback(conversations)
    })
  },

  // Real-time subscription do wiadomo≈õci
  subscribeToMessages(conversationId: string, callback: (messages: ChatMessage[]) => void) {
    const messagesQuery = query(
      collection(db, 'messages'),
      where('conversationId', '==', conversationId),
      orderBy('timestamp', 'asc')
    )
    
    return onSnapshot(messagesQuery, (snapshot) => {
      const messages: ChatMessage[] = snapshot.docs.map(doc => ({
        id: doc.id,
        ...doc.data(),
        timestamp: doc.data().timestamp?.toDate() || new Date()
      } as ChatMessage))
      
      callback(messages)
    })
  },

  // Sprawd≈∫ czy konwersacja istnieje
  async getConversationBetweenUsers(user1Id: string, user2Id: string): Promise<string | null> {
    const participants = [user1Id, user2Id].sort()
    const conversationId = participants.join('_')
    
    const conversationRef = doc(db, 'conversations', conversationId)
    const conversationSnap = await getDoc(conversationRef)
    
    return conversationSnap.exists() ? conversationId : null
  }
}